      PROGRAM RUNCLASS36CTEM
C
C     * SHELL PROGRAM TO RUN "CLASS" ("CANADIAN LAND SURFACE SCHEME")
C     * VERSION 3.6 IN STAND-ALONE MODE USING SPECIFIED BOUNDARY 
C     * CONDITIONS AND ATMOSPHERIC FORCING, COUPLED TO CTEM (CANADIAN TERRESTRIAL 
C     * ECOSYSTEM MODEL.
C
C     REVISION HISTORY:
C
C     * DEC 2012   
C     * JOE MELTON : REMOVED GOTO STATEMENTS, CLEANED UP AND FIXED INCONSISTENCIES
C                                  IN HOW INPUT DATA READ IN. ALSO MADE LUC WORK FOR
C                                  BOTH COMPOSITE AND MOSAIC APPROACHES.
C 
C     * OCT 2012
C     * YIRAN PENG AND JOE MELTON: BRING IN COMPETITION TO 3.6 AND MAKE IT
C                                  SO THE MODEL CAN START FROM BARE GROUND
C                                  OR FROM THE INI AND CTM FILES INPUTS
C
C     * SEP 2012
C     * JOE MELTON: COUPLED CLASS3.6 AND CTEM
C
C     * NOV 2011
C     * YIRAN PENG AND VIVEK ARORA: COUPLED CLASS3.5 AND CTEM
C       
C     * SEPT 8, 2009 
C     * RONG LI AND VIVEK ARORA: COUPLED CLASS3.4 AND CTEM
C
C=======================================================================
C     * DIMENSION STATEMENTS.

C     * FIRST SET OF DEFINITIONS:
C     * BACKGROUND VARIABLES, AND PROGNOSTIC AND DIAGNOSTIC
C     * VARIABLES NORMALLY PROVIDED BY AND/OR USED BY THE GCM.
C     * THE SUFFIX "ROW" REFERS TO VARIABLES EXISTING ON THE 
C     * MOSAIC GRID ON THE CURRENT LATITUDE CIRCLE.  THE SUFFIX 
C     * "GAT" REFERS TO THE SAME VARIABLES AFTER THEY HAVE UNDERGONE
C     * A "GATHER" OPERATION IN WHICH THE TWO MOSAIC DIMENSIONS
C     * ARE COLLAPSED INTO ONE.  THE SUFFIX "GRD" REFERS BOTH TO 
C     * GRID-CONSTANT INPUT VARIABLES. AND TO GRID-AVERAGED
C     * DIAGNOSTIC VARIABLES.
C     
C     * THE FIRST DIMENSION ELEMENT OF THE "ROW" VARIABLES 
C     * REFERS TO THE NUMBER OF GRID CELLS ON THE CURRENT 
C     * LATITUDE CIRCLE.  IN THIS STAND-ALONE VERSION, THIS 
C     * NUMBER IS ARBITRARILY SET TO THREE, TO ALLOW UP TO THREE
C     * SIMULTANEOUS TESTS TO BE RUN.  THE SECOND DIMENSION 
C     * ELEMENT OF THE "ROW" VARIABLES REFERS TO THE MAXIMUM
C     * NUMBER OF TILES IN THE MOSAIC.  IN THIS STAND-ALONE
C     * VERSION, THIS NUMBER IS SET TO EIGHT.  THE FIRST 
C     * DIMENSION ELEMENT IN THE "GAT" VARIABLES IS GIVEN BY
C     * THE PRODUCT OF THE FIRST TWO DIMENSION ELEMENTS IN THE
C     * "ROW" VARIABLES.

C     USE STATEMENTS FOR MODULES:
      USE LANDUSE_CHANGE,     ONLY : INITIALIZE_LUC, READIN_LUC
C
      IMPLICIT NONE
C
C     * INTEGER CONSTANTS.

C     JM EDIT: CHANGED NLAT TO 1.

      INTEGER,PARAMETER :: NLAT=1,NMOS=10,ILG=NLAT*NMOS,NMON=12
      INTEGER,PARAMETER :: ICAN=4,IGND=3,ICP1=ICAN+1
C
      INTEGER IDISP,IZREF,ISLFD,IPCP,IWF,IPAI,IHGT,IALC,
     1        IALS,IALG,N,ITG,ITC,ITCG,NLTEST,NMTEST,NCOUNT,NDAY,
     2        MDAY(NMON+1),MMDAY(NMON),IMONTH,NDMONTH,NT,
     3        IHOUR,IMIN,IDAY,IYEAR,NML,NMW,NWAT,NICE,JLAT,
     4        NLANDCS,NLANDGS,NLANDC,NLANDG,NLANDI,I,J,K,L,M
C
      INTEGER K1,K2,K3,K4,K5,K6,K7,K8,K9,K10,K11
C
      INTEGER*4 TODAY(3), NOW(3)
C
C     * LAND SURFACE PROGNOSTIC VARIABLES.
C
      REAL,DIMENSION(NLAT,NMOS,IGND) ::
     1        TBARROW,   THLQROW,   THICROW
C
      REAL,DIMENSION(NLAT,NMOS) ::
     1        TPNDROW,   ZPNDROW,   TBASROW,   
     2        ALBSROW,   TSNOROW,   RHOSROW,   
     3        SNOROW ,   TCANROW,   RCANROW,   
     4        SCANROW,   GROROW ,   CMAIROW,
     5        TACROW ,   QACROW ,   WSNOROW
C
      REAL    TSFSROW(NLAT,NMOS,4)
C
      REAL,DIMENSION(ILG,IGND) ::
     1        TBARGAT, THLQGAT, THICGAT 
C
      REAL,DIMENSION(ILG) ::
     1        TPNDGAT,   ZPNDGAT,   TBASGAT,   
     2        ALBSGAT,   TSNOGAT,   RHOSGAT,   
     3        SNOGAT ,   TCANGAT,   RCANGAT,   
     4        SCANGAT,   GROGAT ,   CMAIGAT,
     5        TACGAT ,   QACGAT ,   WSNOGAT
C
      REAL    TSFSGAT(ILG,4)
C
C     * GATHER-SCATTER INDEX ARRAYS.
C
      INTEGER  ILMOS (ILG),  JLMOS  (ILG),  IWMOS  (ILG),  JWMOS (ILG),
     1         IWAT  (NLAT), IICE   (NLAT)
C
C     * CANOPY AND SOIL INFORMATION ARRAYS.
C     * (THE LAST DIMENSION OF MOST OF THESE ARRAYS IS GIVEN BY
C     * THE NUMBER OF SOIL LAYERS (IGND), THE NUMBER OF BROAD 
C     * VEGETATION CATEGORIES (ICAN), OR ICAN+1.
C
      REAL,DIMENSION(NLAT,NMOS,ICP1) ::
     1              FCANROW,  LNZ0ROW,
     2              ALVCROW,  ALICROW
C
      REAL,DIMENSION(NLAT,NMOS,ICAN) ::
     1              PAMXROW,  PAMNROW,
     2              CMASROW,  ROOTROW,
     3              RSMNROW,  QA50ROW,
     4              VPDAROW,  VPDBROW,
     5              PSGAROW,  PSGBROW,
     6              PAIDROW,  HGTDROW,
     7              ACVDROW,  ACIDROW
C
      REAL,DIMENSION(ILG,ICP1) ::
     1              FCANGAT,  LNZ0GAT,
     2              ALVCGAT,  ALICGAT
C
      REAL,DIMENSION(ILG,ICAN) ::
     1              PAMXGAT,  PAMNGAT,
     2              CMASGAT,  ROOTGAT,
     3              RSMNGAT,  QA50GAT,
     4              VPDAGAT,  VPDBGAT,
     5              PSGAGAT,  PSGBGAT,
     6              PAIDGAT,  HGTDGAT,
     7              ACVDGAT,  ACIDGAT
C
      REAL,DIMENSION(NLAT,NMOS,IGND) ::
     1        THPROW ,  THRROW ,  THMROW , 
     2        BIROW  ,  PSISROW,  GRKSROW,    
     3        THRAROW,  HCPSROW,  
     4        TCSROW ,  THFCROW,  PSIWROW,   
     5        DLZWROW,  ZBTWROW 
C
      REAL,DIMENSION(NLAT,NMOS) ::
     1        DRNROW ,   XSLPROW,   GRKFROW,
     2        WFSFROW,   WFCIROW,   ALGWROW,   
     3        ALGDROW,   ASVDROW,   ASIDROW,   
     4        AGVDROW,   AGIDROW,   ZSNLROW,
     5        ZPLGROW,   ZPLSROW
C
      REAL,DIMENSION(ILG,IGND) ::
     1        THPGAT ,  THRGAT ,  THMGAT , 
     2        BIGAT  ,  PSISGAT,  GRKSGAT,    
     3        THRAGAT,  HCPSGAT,  
     4        TCSGAT ,  THFCGAT,  PSIWGAT,   
     5        DLZWGAT,  ZBTWGAT
C
      REAL,DIMENSION(ILG) ::
     1        DRNGAT ,   XSLPGAT,   GRKFGAT,
     2        WFSFGAT,   WFCIGAT,   ALGWGAT,     
     3        ALGDGAT,   ASVDGAT,   ASIDGAT,     
     4        AGVDGAT,   AGIDGAT,   ZSNLGAT,
     5        ZPLGGAT,   ZPLSGAT
C
      REAL    SANDROW(NLAT,NMOS,IGND), CLAYROW(NLAT,NMOS,IGND), 
     1        ORGMROW(NLAT,NMOS,IGND),
     2        SDEPROW(NLAT,NMOS),      FAREROW(NLAT,NMOS)
C
      INTEGER MIDROW (NLAT,NMOS),     ISNDROW(NLAT,NMOS,IGND), 
     1        ISNDGAT( ILG,IGND),     IORG   (NLAT,NMOS,IGND),
     2        IGDRROW(NLAT,NMOS),     IGDRGAT( ILG)       
C
C     * ARRAYS ASSOCIATED WITH COMMON BLOCKS.
C
      REAL  THPORG (  3), THRORG (  3), THMORG (  3), BORG   (  3),
     1      PSISORG(  3), GRKSORG(  3)
C
      REAL  CANEXT(ICAN), XLEAF (ICAN), ZORAT (ICAN),
     1      DELZ  (IGND), ZBOT  (IGND), 
     2      GROWYR (  18,4,2)
C
C     * ATMOSPHERIC AND GRID-CONSTANT INPUT VARIABLES.
C
      REAL,DIMENSION(NLAT) ::
     1      ZRFMGRD,   ZRFHGRD,   ZDMGRD ,   ZDHGRD ,  
     2      ZBLDGRD,   FSVHGRD,   FSIHGRD,   RADJGRD,
     3      CSZGRD ,   FDLGRD ,   ULGRD  ,   VLGRD  ,   
     4      TAGRD  ,   QAGRD  ,   PRESGRD,   PREGRD ,  
     5      PADRGRD,   VPDGRD ,   TADPGRD,   RHOAGRD,  
     6      RPCPGRD,   TRPCGRD,   SPCPGRD,   TSPCGRD,  
     7      RHSIGRD,   FCLOGRD,   DLONGRD,   UVGRD  ,   
     8      XDIFFUS,   GCGRD  ,   Z0ORGRD,   GGEOGRD,
     9      RPREGRD,   SPREGRD,   VMODGRD
C
      REAL,DIMENSION(ILG) ::
     1      ZRFMGAT,   ZRFHGAT,   ZDMGAT ,   ZDHGAT ,  
     2      ZBLDGAT,   FSVHGAT,   FSIHGAT,   RADJGAT,
     3      CSZGAT ,   FDLGAT ,   ULGAT  ,   VLGAT  ,   
     4      TAGAT  ,   QAGAT  ,   PRESGAT,   PREGAT ,  
     5      PADRGAT,   VPDGAT ,   TADPGAT,   RHOAGAT,  
     6      RPCPGAT,   TRPCGAT,   SPCPGAT,   TSPCGAT,  
     7      RHSIGAT,   FCLOGAT,   DLONGAT,   Z0ORGAT,
     8      GGEOGAT,   VMODGAT
C
C     * LAND SURFACE DIAGNOSTIC VARIABLES.
C
      REAL,DIMENSION(NLAT,NMOS) ::
     1      CDHROW ,   CDMROW ,   HFSROW ,   TFXROW ,  
     2      QEVPROW,   QFSROW ,   QFXROW ,   PETROW ,  
     3      GAROW  ,   EFROW  ,   GTROW  ,   QGROW  ,   
     4      TSFROW ,   ALVSROW,   ALIRROW,   FSNOROW,  
     5      SFCTROW,   SFCUROW,   SFCVROW,   SFCQROW,   
     6      FSGVROW,   FSGSROW,   FSGGROW,   FLGVROW,   
     7      FLGSROW,   FLGGROW,   HFSCROW,   HFSSROW,  
     8      HFSGROW,   HEVCROW,   HEVSROW,   HEVGROW,   
     9      HMFCROW,   HMFNROW,   HTCCROW,   HTCSROW,   
     A      PCFCROW,   PCLCROW,   PCPNROW,   PCPGROW,   
     B      QFGROW ,   QFNROW ,   QFCLROW,   QFCFROW,   
     C      ROFROW ,   ROFOROW,   ROFSROW,   ROFBROW,  
     D      TROFROW,   TROOROW,   TROSROW,   TROBROW,  
     E      ROFCROW,   ROFNROW,   ROVGROW,   WTRCROW,   
     F      WTRSROW,   WTRGROW,   DRROW  ,   WTABROW,  
     G      ILMOROW,   UEROW  ,   HBLROW 
C
      REAL,DIMENSION(ILG) ::
     1      CDHGAT ,   CDMGAT ,   HFSGAT ,   TFXGAT ,  
     2      QEVPGAT,   QFSGAT ,   QFXGAT ,   PETGAT ,  
     3      GAGAT  ,   EFGAT  ,   GTGAT  ,   QGGAT  ,   
     4      TSFGAT ,   ALVSGAT,   ALIRGAT,   FSNOGAT,  
     5      SFCTGAT,   SFCUGAT,   SFCVGAT,   SFCQGAT,   
     6      FSGVGAT,   FSGSGAT,   FSGGGAT,   FLGVGAT,   
     7      FLGSGAT,   FLGGGAT,   HFSCGAT,   HFSSGAT,  
     8      HFSGGAT,   HEVCGAT,   HEVSGAT,   HEVGGAT,   
     9      HMFCGAT,   HMFNGAT,   HTCCGAT,   HTCSGAT,   
     A      PCFCGAT,   PCLCGAT,   PCPNGAT,   PCPGGAT,   
     B      QFGGAT ,   QFNGAT ,   QFCLGAT,   QFCFGAT,   
     C      ROFGAT ,   ROFOGAT,   ROFSGAT,   ROFBGAT,  
     D      TROFGAT,   TROOGAT,   TROSGAT,   TROBGAT,  
     E      ROFCGAT,   ROFNGAT,   ROVGGAT,   WTRCGAT,   
     F      WTRSGAT,   WTRGGAT,   DRGAT  ,   WTABGAT,  
     G      ILMOGAT,   UEGAT  ,   HBLGAT ,   SFRHGAT,
     I      FTEMP,     FVAP,      RIB,       QLWOGAT
C
      REAL,DIMENSION(NLAT) ::
     1      CDHGRD ,   CDMGRD ,   HFSGRD ,   TFXGRD ,  
     2      QEVPGRD,   QFSGRD ,   QFXGRD ,   PETGRD ,  
     3      GAGRD  ,   EFGRD  ,   GTGRD  ,   QGGRD  ,   
     4      TSFGRD ,   ALVSGRD,   ALIRGRD,   FSNOGRD,  
     5      SFCTGRD,   SFCUGRD,   SFCVGRD,   SFCQGRD,   
     6      FSGVGRD,   FSGSGRD,   FSGGGRD,   FLGVGRD,   
     7      FLGSGRD,   FLGGGRD,   HFSCGRD,   HFSSGRD,  
     8      HFSGGRD,   HEVCGRD,   HEVSGRD,   HEVGGRD,   
     9      HMFCGRD,   HMFNGRD,   HTCCGRD,   HTCSGRD,   
     A      PCFCGRD,   PCLCGRD,   PCPNGRD,   PCPGGRD,   
     B      QFGGRD ,   QFNGRD ,   QFCLGRD,   QFCFGRD,   
     C      ROFGRD ,   ROFOGRD,   ROFSGRD,   ROFBGRD,  
     D      ROFCGRD,   ROFNGRD,   ROVGGRD,   WTRCGRD,   
     E      WTRSGRD,   WTRGGRD,   DRGRD  ,   WTABGRD,  
     F      ILMOGRD,   UEGRD  ,   HBLGRD
C
      REAL    HMFGROW(NLAT,NMOS,IGND),   HTCROW (NLAT,NMOS,IGND),
     1        QFCROW (NLAT,NMOS,IGND),   GFLXROW(NLAT,NMOS,IGND),
     2        HMFGGAT(ILG,IGND),         HTCGAT (ILG,IGND), 
     3        QFCGAT (ILG,IGND),         GFLXGAT(ILG,IGND),
     4        HMFGGRD(NLAT,IGND),        HTCGRD (NLAT,IGND),
     5        QFCGRD (NLAT,IGND),        GFLXGRD(NLAT,IGND)
C
      INTEGER     ITCTROW(NLAT,NMOS,6,50),  ITCTGAT(ILG,6,50)
      INTEGER     ISUM(6)
 
C     * ARRAYS USED FOR OUTPUT AND DISPLAY PURPOSES.
C     * (THE SUFFIX "ACC" REFERS TO ACCUMULATOR ARRAYS USED IN
C     * CALCULATING TIME AVERAGES.)

      CHARACTER     TITLE1*4,     TITLE2*4,     TITLE3*4,
     1              TITLE4*4,     TITLE5*4,     TITLE6*4
      CHARACTER     NAME1*4,      NAME2*4,      NAME3*4,
     1              NAME4*4,      NAME5*4,      NAME6*4
      CHARACTER     PLACE1*4,     PLACE2*4,     PLACE3*4,
     1              PLACE4*4,     PLACE5*4,     PLACE6*4

      REAL,DIMENSION(NLAT) ::
     1              PREACC ,   GTACC  ,   QEVPACC,  
     2              HFSACC ,   ROFACC ,   SNOACC ,  
     3              ALVSACC,   ALIRACC,   FSINACC,  
     4              FLINACC,   TAACC  ,   UVACC  ,  
     5              PRESACC,   QAACC  ,  
     6              EVAPACC,   FLUTACC,   OVRACC ,  
     7              HMFNACC,   WTBLACC,   WSNOACC,  
     8              RHOSACC,   TSNOACC,   TCANACC,  
     9              RCANACC,   SCANACC,   GROACC ,  
     A              CANARE ,   SNOARE    

      REAL          TBARACC(NLAT,IGND), THLQACC(NLAT,IGND),
     1              THICACC(NLAT,IGND), THALACC(NLAT,IGND)
C
C     * MONTHLY OUTPUT FOR CLASS GRID-MEAN
C 
      REAL,DIMENSION(NLAT) ::
     1              ALVSACC_MN,ALIRACC_MN,FLUTACC_MN, 
     2              FSINACC_MN,FLINACC_MN,HFSACC_MN,
     3              QEVPACC_MN,SNOACC_MN, WSNOACC_MN,
     4              ROFACC_MN, PREACC_MN, EVAPACC_MN,
     5              TAACC_MN
      REAL ::       FSSTAR_MN,FLSTAR_MN,QH_MN,QE_MN

      REAL TBARACC_MN(NLAT,IGND), THLQACC_MN(NLAT,IGND),
     1     THICACC_MN(NLAT,IGND) 
C
C     * YEARLY OUTPUT FOR CLASS GRID-MEAN
C
      REAL,DIMENSION(NLAT) ::
     1              ALVSACC_YR,ALIRACC_YR,FLUTACC_YR, 
     2              FSINACC_YR,FLINACC_YR,HFSACC_YR,
     3              QEVPACC_YR,ROFACC_YR, PREACC_YR, 
     4              EVAPACC_YR,TAACC_YR
      REAL ::       FSSTAR_YR,FLSTAR_YR,QH_YR,QE_YR
C
C     * ARRAYS DEFINED TO PASS INFORMATION BETWEEN THE THREE MAJOR
C     * SUBSECTIONS OF CLASS ("CLASSA", "CLASST" AND "CLASSW").

      REAL,DIMENSION(ILG,IGND) ::
     1        TBARC  ,     TBARG  ,     TBARCS ,  
     2        TBARGS ,     THLIQC ,     THLIQG ,  
     3        THICEC ,     THICEG ,     FROOT  ,   
     4        HCPC   ,     HCPG   ,  
     5        TCTOPC ,     TCBOTC ,
     6        TCTOPG ,     TCBOTG
C
      REAL  FC     (ILG), FG     (ILG), FCS    (ILG), FGS    (ILG), 
     1      RBCOEF (ILG), ZSNOW  (ILG),
     2      FSVF   (ILG), FSVFS  (ILG),
     3      ALVSCN (ILG), ALIRCN (ILG), ALVSG  (ILG), ALIRG  (ILG),
     4      ALVSCS (ILG), ALIRCS (ILG), ALVSSN (ILG), ALIRSN (ILG),
     5      ALVSGC (ILG), ALIRGC (ILG), ALVSSC (ILG), ALIRSC (ILG), 
     6      TRVSCN (ILG), TRIRCN (ILG), TRVSCS (ILG), TRIRCS (ILG),
     7      RC     (ILG), RCS    (ILG), FRAINC (ILG), FSNOWC (ILG),
     8      FRAICS (ILG), FSNOCS (ILG),
     9      CMASSC (ILG), CMASCS (ILG), DISP   (ILG), DISPS  (ILG),
     A      ZOMLNC (ILG), ZOELNC (ILG), ZOMLNG (ILG), ZOELNG (ILG),
     B      ZOMLCS (ILG), ZOELCS (ILG), ZOMLNS (ILG), ZOELNS (ILG),
     C      TRSNOW (ILG), CHCAP  (ILG), CHCAPS (ILG),
     D      GZEROC (ILG), GZEROG (ILG), GZROCS (ILG), GZROGS (ILG),
     E      G12C   (ILG), G12G   (ILG), G12CS  (ILG), G12GS  (ILG),
     F      G23C   (ILG), G23G   (ILG), G23CS  (ILG), G23GS  (ILG),
     G      QFREZC (ILG), QFREZG (ILG), QMELTC (ILG), QMELTG (ILG),
     I      EVAPC  (ILG), EVAPCG (ILG), EVAPG  (ILG), EVAPCS (ILG),
     J      EVPCSG (ILG), EVAPGS (ILG), TCANO  (ILG), TCANS  (ILG),
     K      RAICAN (ILG), SNOCAN (ILG), RAICNS (ILG), SNOCNS (ILG),
     L      CWLCAP (ILG), CWFCAP (ILG), CWLCPS (ILG), CWFCPS (ILG),
     M      TSNOCS (ILG), TSNOGS (ILG), RHOSCS (ILG), RHOSGS (ILG),
     N      WSNOCS (ILG), WSNOGS (ILG),
     O      TPONDC (ILG), TPONDG (ILG), TPNDCS (ILG), TPNDGS (ILG),
     P      ZPLMCS (ILG), ZPLMGS (ILG), ZPLIMC (ILG), ZPLIMG (ILG)
C
C     * DIAGNOSTIC ARRAYS USED FOR CHECKING ENERGY AND WATER 
C     * BALANCES.
C
      REAL CTVSTP(ILG),   CTSSTP(ILG),   CT1STP(ILG),   CT2STP(ILG),
     1     CT3STP(ILG),   WTVSTP(ILG),   WTSSTP(ILG),   WTGSTP(ILG)
C
C     * CONSTANTS AND TEMPORARY VARIABLES.
C
      REAL DEGLAT,DEGLON,FSDOWN,DAY,DECL,HOUR,COSZ,CUMSNO,
     1     QSUMV,QSUMS,QSUM1,QSUM2,QSUM3,WSUMV,WSUMS,WSUMG,ALTOT,
     2     FSSTAR,FLSTAR,QH,QE,BEG,SNOMLT,ZSN,TCN,TSN,TPN,GTOUT,
     3     ALTOT_MN,ALTOT_YR
C
C     * COMMON BLOCK PARAMETERS.
C
      REAL X1,X2,X3,X4,G,GAS,X5,X6,CPRES,GASV,X7,CPI,X8,CELZRO,X9,
     1     X10,X11,X12,X13,X14,X15,SIGMA,X16,DELTIM,DELT,TFREZ,
     2     RGAS,RGASV,GRAV,SBC,VKC,CT,VMIN,TCW,TCICE,TCSAND,TCCLAY,
     3     TCOM,TCDRYS,RHOSOL,RHOOM,HCPW,HCPICE,HCPSOL,HCPOM,HCPSND,
     4     HCPCLY,SPHW,SPHICE,SPHVEG,SPHAIR,RHOW,RHOICE,TCGLAC,CLHMLT,
     5     CLHVAP,PI,ZOLNG,ZOLNS,ZOLNI,ZORATG,ALVSI,ALIRI,ALVSO,ALIRO,
     6     ALBRCK,DELTA,CGRAV,CKARM,CPD,AS,ASX,CI,BS,BETA,FACTN,HMIN,
     7     ANGMAX
C
C================= CTEM ARRAY DECLARATION ===============================\
C
C     VARIABLES FOR COUPLING CLASS AND CTEM
C
      INTEGER ARGCOUNT,IARGC,STRLEN,ICTEMMOD
C
      CHARACTER*80   TITLEC1, TITLEC2, TITLEC3
      CHARACTER*80   ARGBUFF
C
      LOGICAL    CTEM1, CTEM2, PARALLELRUN, MOSAIC
      LOGICAL CYCLEMET, DOFIRE, RUN_MODEL, MET_REWOUND
      LOGICAL REACH_EOF
C
      LOGICAL    COMPETE, START_BARE, RSFILE, LNDUSEON, CO2ON, POPDON
C
       INTEGER,PARAMETER :: ICC=9, ICCP1=ICC+1
       INTEGER   LOPCOUNT,  ISUMC,   NOL2PFTS(4), L2MAX,  
     1           K1C,       K2C,     IYD,         JHHSTD,
     2           JHHENDD,   JDSTD,   JDENDD,      JHHSTY,
     3           JHHENDY,   JDSTY,   JDENDY,      JHHST, 
     4           JHHEND,    JDST,    JDEND,       CTEMLOOP,  
     5           SPINFAST,  MONTH1,  MONTH2,      XDAY, 
     6           MODELPFT(12), NCYEAR, CO2YR, POPYR, NUMMETCYLYRS,
     7           METCYLYRST, METCYCENDYR, CLIMIYEAR, POPCYCLEYR,
     8           CYPOPYR, LUCYR, CYLUCYR 

C
       REAL      DELTAT,    ABSZERO, RLIM,        FSSTAR_G,
     1           FLSTAR_G,  QH_G,    QE_G,        SNOMLT_G,
     2           BEG_G,     GTOUT_G, TPN_G,       ALTOT_G,
     3           TCN_G,     TSN_G,   ZSN_G,       CO2CONCIN,
     4           POPDIN,    SETCO2CONC, SUMFARE,
     5           TEMP_VAR, BAREFRAC
C
      REAL TCANRS(NLAT,NMOS), TSNORS(NLAT,NMOS), TPNDRS(NLAT,NMOS)
C
      INTEGER COLDDAYSROW(NLAT,NMOS,2), ICOUNTROW(NLAT,NMOS),
     1     LFSTATUSROW(NLAT,NMOS,ICC), PANDAYSROW(NLAT,NMOS,ICC),
     2     STDALNGRD(NLAT)
C
      REAL AILCMINROW(NLAT,NMOS,ICC),  AILCMAXROW(NLAT,NMOS,ICC),
     1     DVDFCANROW(NLAT,NMOS,ICC),  GLEAFMASROW(NLAT,NMOS,ICC),
     2     BLEAFMASROW(NLAT,NMOS,ICC), STEMMASSROW(NLAT,NMOS,ICC),
     3     ROOTMASSROW(NLAT,NMOS,ICC), MLIGHTNGGRD(NLAT,12)
C
       REAL EXTNPROBGRD(NLAT),         PRBFRHUCGRD(NLAT),           
     1      MLIGHTNGGAT(ILG,12)
C
      REAL FCANCMXROW(NLAT,NMOS,ICC),  GAVGLAIROW(NLAT,NMOS),
     1     ZOLNCROW(NLAT,NMOS,ICAN),   AILCROW(NLAT,NMOS,ICAN),
     2     AILCGROW(NLAT,NMOS,ICC),    AILCGSROW(NLAT,NMOS,ICC),
     3     FCANCSROW(NLAT,NMOS,ICC),   FCANCROW(NLAT,NMOS,ICC),
     4     CO2CONCROW(NLAT,NMOS),      CO2I1CGROW(NLAT,NMOS,ICC),
     5     CO2I1CSROW(NLAT,NMOS,ICC),  CO2I2CGROW(NLAT,NMOS,ICC),
     6     CO2I2CSROW(NLAT,NMOS,ICC),  ANCSVEGROW(NLAT,NMOS,ICC),
     7     ANCGVEGROW(NLAT,NMOS,ICC),  RMLCSVEGROW(NLAT,NMOS,ICC),
     8     RMLCGVEGROW(NLAT,NMOS,ICC), SLAIROW(NLAT,NMOS,ICC),
     9     AILCBROW(NLAT,NMOS,ICC),    CANRESROW(NLAT,NMOS), 
     A     FLHRLOSSROW(NLAT,NMOS,ICC)
C
      REAL GRWTHEFFROW(NLAT,NMOS,ICC), LYSTMMASROW(NLAT,NMOS,ICC),
     1     LYROTMASROW(NLAT,NMOS,ICC), TYMAXLAIROW(NLAT,NMOS,ICC),
     2     VGBIOMASROW(NLAT,NMOS),     GAVGLTMSROW(NLAT,NMOS),
     3     GAVGSCMSROW(NLAT,NMOS),     STMHRLOSROW(NLAT,NMOS,ICC),
     4     NPPROW(NLAT,NMOS),          NEPROW(NLAT,NMOS),
     5     HETRORESROW(NLAT,NMOS),     AUTORESROW(NLAT,NMOS), 
     6     SOILRESPROW(NLAT,NMOS),     RMROW(NLAT,NMOS), 
     7     RGROW(NLAT,NMOS),           NBPROW(NLAT,NMOS),
     8     LITRESROW(NLAT,NMOS),       SOCRESROW(NLAT,NMOS), 
     9     GPPROW(NLAT,NMOS),          DSTCEMLSROW(NLAT,NMOS), 
     A     LITRFALLROW(NLAT,NMOS),     HUMIFTRSROW(NLAT,NMOS) 
C
C     FIRE EMISSION VARIABLES
      REAL EMIT_CO2ROW(NLAT,NMOS),     EMIT_COROW(NLAT,NMOS), 
     1     EMIT_CH4ROW(NLAT,NMOS),     EMIT_NMHCROW(NLAT,NMOS),
     2     EMIT_H2ROW(NLAT,NMOS),      EMIT_NOXROW(NLAT,NMOS),
     3     EMIT_N2OROW(NLAT,NMOS),     EMIT_PM25ROW(NLAT,NMOS),
     4     EMIT_TPMROW(NLAT,NMOS),     EMIT_TCROW(NLAT,NMOS),
     5     EMIT_OCROW(NLAT,NMOS),      EMIT_BCROW(NLAT,NMOS)
C
      REAL BMASVEGROW(NLAT,NMOS,ICC),  CMASVEGCROW(NLAT,NMOS,ICAN),
     1     VEGHGHTROW(NLAT,NMOS,ICC),  ROOTDPTHROW(NLAT,NMOS,ICC),
     2     RMLROW(NLAT,NMOS),          RMSROW(NLAT,NMOS),  
     3     TLTRLEAFROW(NLAT,NMOS,ICC), TLTRSTEMROW(NLAT,NMOS,ICC),
     4     TLTRROOTROW(NLAT,NMOS,ICC), LEAFLITRROW(NLAT,NMOS,ICC),
     5     ROOTTEMPROW(NLAT,NMOS,ICC), AFRLEAFROW(NLAT,NMOS,ICC),  
     6     AFRSTEMROW(NLAT,NMOS,ICC),  AFRROOTROW(NLAT,NMOS,ICC), 
     7     WTSTATUSROW(NLAT,NMOS,ICC), LTSTATUSROW(NLAT,NMOS,ICC), 
     8     LAIMAXGVEG_M(NLAT,NMOS,ICC),RMRROW(NLAT,NMOS)  
C
      REAL AVGYRNPP_M(NLAT,NMOS),      AVGYRGPP_M(NLAT,NMOS),      
     1     AVGYRLE_M(NLAT,NMOS),       AVGYRNEP_M(NLAT,NMOS),       
     a     AVGYRNBP_M(NLAT,NMOS), 
     2     ROTHRLOSROW(NLAT,NMOS,ICC), PFCANCMXROW(NLAT,NMOS,ICC),
     3     LUCEMCOMROW(NLAT,NMOS),     BURNFRACROW(NLAT,NMOS),   
     4     PROBFIREROW(NLAT,NMOS),     NFCANCMXROW(NLAT,NMOS,ICC),
     5     LUCLTRINROW(NLAT,NMOS),     LUCSOCINROW(NLAT,NMOS),
     6     ALVSCTMROW(NLAT,NMOS,ICAN), ALIRCTMROW(NLAT,NMOS,ICAN),
     7     ANNPPVEG_M(NLAT,NMOS,ICC),  NPPVEGROW(NLAT,NMOS,ICC),
     8     CFLUXCGROW(NLAT,NMOS),      CFLUXCSROW(NLAT,NMOS),
     9     DSTCEMLS3ROW(NLAT,NMOS),    ANVEGROW(NLAT,NMOS,ICC),                              
     A     RMLVEGROW(NLAT,NMOS,ICC),
     B     PAICROW(NLAT,NMOS,ICAN),    SLAICROW(NLAT,NMOS,ICAN), 
     C     CSUM(NLAT,NMOS,ICAN),       TBARACCROW_M(NLAT,NMOS,IGND),
     D     GRCLAREAROW(NLAT,NMOS),     TCANOACCROW_M(NLAT,NMOS),
     E     UVACCROW_M(NLAT,NMOS),      VVACCROW_M(NLAT,NMOS),
     F     LITRMASSGAT(ILG,ICCP1),     SOILCMASGAT(ILG,ICCP1)
C
      REAL AVGYRE_CO2_M(NLAT,NMOS),    AVGYRE_CO_M(NLAT,NMOS),
     1     AVGYRE_CH4_M(NLAT,NMOS),    AVGYRE_NMHC_M(NLAT,NMOS),
     2     AVGYRE_H2_M(NLAT,NMOS),     AVGYRE_NOX_M(NLAT,NMOS),
     3     AVGYRE_N2O_M(NLAT,NMOS),    AVGYRE_PM25_M(NLAT,NMOS),
     4     AVGYRE_TPM_M(NLAT,NMOS),    AVGYRE_TC_M(NLAT,NMOS),
     5     AVGYRE_OC_M(NLAT,NMOS),     AVGYRE_BC_M(NLAT,NMOS),
     6     AVGYR_PROBFIRE_M(NLAT,NMOS),AVGYR_LUC_EMC_M(NLAT,NMOS),
     7     AVGYR_LUCLTRIN_M(NLAT,NMOS),AVGYR_LUCSOCIN_M(NLAT,NMOS),
     7     AVGYR_BURNFRAC_M(NLAT,NMOS)
C
      REAL RMATCROW(NLAT,NMOS,ICAN,IGND), 
     1     RMATCTEMROW(NLAT,NMOS,ICC,IGND),
     2     LITRMASSROW(NLAT,NMOS,ICCP1), 
     3     SOILCMASROW(NLAT,NMOS,ICCP1),
     4     VGBIOMAS_VEGROW(NLAT,NMOS,ICC)
C
      INTEGER COLDDAYSGAT(ILG,2),      ICOUNT(ILG),
     1     LFSTATUSGAT(ILG,ICC),       PANDAYSGAT(ILG,ICC),
     2     STDALNGAT(ILG)
C
      REAL FCANCMXGAT(ILG,ICC),        RMATCGAT(ILG,ICAN,IGND),
     1     ZOLNCGAT(ILG,ICAN),         RMATCTEMGAT(ILG,ICC,IGND),
     2     AILCGGAT(ILG,ICC),          AILCGSGAT(ILG,ICC),
     3     FCANCSGAT(ILG,ICC),         FCANCGAT(ILG,ICC),
     4     CO2CONCGAT(ILG),            CO2I1CGGAT(ILG,ICC),
     5     CO2I1CSGAT(ILG,ICC),        CO2I2CGGAT(ILG,ICC),
     6     CO2I2CSGAT(ILG,ICC),        ANCSVEGGAT(ILG,ICC), 
     7     ANCGVEGGAT(ILG,ICC),        RMLCSVEGGAT(ILG,ICC),
     8     RMLCGVEGGAT(ILG,ICC),       SLAIGAT(ILG,ICC), 
     9     AILCGAT(ILG,ICAN),          CANRESGAT(ILG),
     A     ANCSVGAC_M(ILG,ICC),        ANCGVGAC_M(ILG,ICC), 
     B     RMLCSVGA_M(ILG,ICC),        RMLCGVGA_M(ILG,ICC),
     C     LIGHTNG(ILG),               AILCBGAT(ILG,ICC),
     D     FLHRLOSSGAT(ILG,ICC),       GAVGLAIGAT(ILG),   
     E     GRWTHEFFGAT(ILG,ICC),       LYSTMMASGAT(ILG,ICC),
     F     LYROTMASGAT(ILG,ICC),       TYMAXLAIGAT(ILG,ICC),
     G     VGBIOMASGAT(ILG),           GAVGLTMSGAT(ILG),    
     H     GAVGSCMSGAT(ILG),           RMRGAT(ILG),      
     I     STMHRLOSGAT(ILG,ICC),       PROBFIREGAT(ILG),
     J     EXTNPROBGAT(ILG),           PRBFRHUCGAT(ILG)
C
      REAL NPPGAT(ILG),NEPGAT(ILG),    HETRORESGAT(ILG),
     1     SOILRESPGAT(ILG),           RMGAT(ILG), 
     2     LITRESGAT(ILG),             SOCRESGAT(ILG),
     3     LITRFALLGAT(ILG),           HUMIFTRSGAT(ILG),  
     4     RGGAT(ILG),                 NBPGAT(ILG),
     5     GPPGAT(ILG),                DSTCEMLSGAT(ILG),
     6     AUTORESGAT(ILG),            NPPVEGGAT(ILG,ICC), 
     7     BMASVEGGAT(ILG,ICC),        CMASVEGCGAT(ILG,ICAN),
     8     VEGHGHTGAT(ILG,ICC),        ROOTDPTHGAT(ILG,ICC),
     9     RMLGAT(ILG),                RMSGAT(ILG),    
     A     TLTRLEAFGAT(ILG,ICC),       TLTRSTEMGAT(ILG,ICC),
     B     TLTRROOTGAT(ILG,ICC),       LEAFLITRGAT(ILG,ICC),
     C     ROOTTEMPGAT(ILG,ICC),       AFRLEAFGAT(ILG,ICC),  
     D     AFRSTEMGAT(ILG,ICC),        AFRROOTGAT(ILG,ICC), 
     E     WTSTATUSGAT(ILG,ICC),       LTSTATUSGAT(ILG,ICC),
     F     AILCMINGAT(ILG,ICC),        AILCMAXGAT(ILG,ICC),      
     G     BLEAFMASGAT(ILG,ICC),       STEMMASSGAT(ILG,ICC),  
     H     DVDFCAN(ILG,ICC),           GLEAFMASGAT(ILG,ICC),
     I     ROOTMASSGAT(ILG,ICC) 
C
C      FIRE EMISSION VARIABLES
       REAL EMIT_CO2GAT(ILG),          EMIT_COGAT(ILG), 
     1      EMIT_CH4GAT(ILG),          EMIT_NMHCGAT(ILG),
     2      EMIT_H2GAT(ILG),           EMIT_NOXGAT(ILG),
     3      EMIT_N2OGAT(ILG),          EMIT_PM25GAT(ILG),
     4      EMIT_TPMGAT(ILG),          EMIT_TCGAT(ILG),
     5      EMIT_OCGAT(ILG),           EMIT_BCGAT(ILG)
C
      REAL  PAICGAT(ILG,ICAN),         SLAICGAT(ILG,ICAN),   
     1      SDEPGAT(ILG),
     2      ROTHRLOSGAT(ILG,ICC),      PFCANCMXGAT(ILG,ICC),
     3      LUCEMCOMGAT(ILG),          BURNFRACGAT(ILG),   
     4      LUCLTRINGAT(ILG),          LUCSOCINGAT(ILG),
     5      NFCANCMXGAT(ILG,ICC),      GRCLAREAGAT(ILG),
     6      ALVSCTMGAT(ILG,ICAN),      ALIRCTMGAT(ILG,ICAN), 
     8      CFLUXCGGAT(ILG),           CFLUXCSGAT(ILG),
     9      DSTCEMLS3GAT(ILG),         XDIFFUSGAT(ILG),
     A      TODFRAC(ILG,ICC),          ANVEGGAT(ILG,ICC),
     B      RMLVEGGAT(ILG,ICC),        ORGMGAT(ILG,IGND),
     C      SANDGAT(ILG,IGND),         CLAYGAT(ILG,IGND)
C
      REAL  FSNOWACC_M(ILG),           TCANSACC_M(ILG),
     1      TBARCACC_M(ILG,IGND),      TBARCSACC_M(ILG,IGND),
     2      TBARGACC_M(ILG,IGND),      TBARGSACC_M(ILG,IGND),
     3      THLIQCACC_M(ILG,IGND),     THLIQGACC_M(ILG,IGND),
     4      THICECACC_M(ILG,IGND),     FAREGAT(ILG), 
     5      TCANOACCGAT_M(ILG),        TAACCGAT_M(ILG),
     6      UVACCGAT_M(ILG),           VVACCGAT_M(ILG),
     7      TBARACCGAT_M(ILG,IGND),    VGBIOMAS_VEGGAT(ILG,ICC)
C
      REAL  WSNOROW_G(NLAT),           ROFSROW_G(NLAT),  
     1     SNOROW_G(NLAT),             RHOSROW_G(NLAT),
     2     ROFROW_G(NLAT),             ZPNDROW_G(NLAT),
     3     RCANROW_G(NLAT),            SCANROW_G(NLAT), 
     4     TROFROW_G(NLAT),            TROOROW_G(NLAT), 
     5     TROBROW_G(NLAT),            ROFOROW_G(NLAT),
     6     ROFBROW_G(NLAT),            TROSROW_G(NLAT),
     7     FSGVROW_G(NLAT),            FSGSROW_G(NLAT),
     8     FLGVROW_G(NLAT),            FLGSROW_G(NLAT),
     9     HFSCROW_G(NLAT),            HFSSROW_G(NLAT),
     A     HEVCROW_G(NLAT),            HEVSROW_G(NLAT),
     B     HMFCROW_G(NLAT),            HMFNROW_G(NLAT), 
     C     HTCSROW_G(NLAT),            HTCCROW_G(NLAT),
     D     FSGGROW_G(NLAT),            FLGGROW_G(NLAT),
     E     HFSGROW_G(NLAT),            HEVGROW_G(NLAT),
     F     FC_G(NLAT),FG_G(NLAT),FCS_G(NLAT),FGS_G(NLAT)
C
       REAL  PCFCROW_G(NLAT),          PCLCROW_G(NLAT),
     1     PCPGROW_G(NLAT),            QFCFROW_G(NLAT),
     2     QFGROW_G(NLAT),             QFCROW_G(NLAT,IGND),
     3     ROFCROW_G(NLAT),            ROFNROW_G(NLAT),
     4     WTRSROW_G(NLAT),            WTRGROW_G(NLAT),
     5     PCPNROW_G(NLAT),            QFCLROW_G(NLAT),
     6     QFNROW_G(NLAT),             WTRCROW_G(NLAT)
C
       REAL   PREACC_M(NLAT,NMOS),     GTACC_M(NLAT,NMOS),
     1     QEVPACC_M(NLAT,NMOS),       HFSACC_M(NLAT,NMOS),
     2     HMFNACC_M(NLAT,NMOS),       ROFACC_M(NLAT,NMOS),
     3     SNOACC_M(NLAT,NMOS),        OVRACC_M(NLAT,NMOS),
     3     WTBLACC_M(NLAT,NMOS),       TBARACC_M(NLAT,NMOS,IGND),
     4     THLQACC_M(NLAT,NMOS,IGND),  THICACC_M(NLAT,NMOS,IGND),
     5     THALACC_M(NLAT,NMOS,IGND),  ALVSACC_M(NLAT,NMOS),
     6     ALIRACC_M(NLAT,NMOS),       RHOSACC_M(NLAT,NMOS),
     7     TSNOACC_M(NLAT,NMOS),       WSNOACC_M(NLAT,NMOS),
     8     TCANACC_M(NLAT,NMOS),       RCANACC_M(NLAT,NMOS),
     9     SCANACC_M(NLAT,NMOS),       GROACC_M(NLAT,NMOS),
     A     FSINACC_M(NLAT,NMOS),       FLINACC_M(NLAT,NMOS),
     B     TAACC_M(NLAT,NMOS),         UVACC_M(NLAT,NMOS),
     C     PRESACC_M(NLAT,NMOS),       QAACC_M(NLAT,NMOS),
     D     EVAPACC_M(NLAT,NMOS),       FLUTACC_M(NLAT,NMOS),
     E     HMFGROW_G(NLAT,IGND),       HTCROW_G(NLAT,IGND), 
     F     TBARROW_G(NLAT,IGND),       THLQROW_G(NLAT,IGND),
     G     THICROW_G(NLAT,IGND),       GFLXROW_G(NLAT,IGND)
C
       REAL   ANVEGROW_G(NLAT,ICC),    RMLVEGROW_G(NLAT,ICC),
     1     RMLVEGACCGAT(ILG,ICC),      RMSVEGGAT(ILG,ICC),
     2     RMRVEGGAT(ILG,ICC),         RGVEGGAT(ILG,ICC), 
     3     GPP_G(NLAT),                NPP_G(NLAT),     
     4     NBP_G(NLAT),                AUTORES_G(NLAT), 
     5     LITRES_G(NLAT),             SOCRES_G(NLAT),  
     6     DSTCEMLS3_G(NLAT),          LITRFALL_G(NLAT), 
     7     RML_G(NLAT),                RMS_G(NLAT),         
     8     RG_G(NLAT),                 LEAFLITR_G(NLAT,ICC), 
     9     TLTRSTEM_G(NLAT,ICC),       TLTRROOT_G(NLAT,ICC),
     A     NEP_G(NLAT),                HETRORES_G(NLAT),
     B     DSTCEMLS_G(NLAT),           HUMIFTRS_G(NLAT),
     C     RMR_G(NLAT),                TLTRLEAF_G(NLAT,ICC),
     D     GAVGLTMS_G(NLAT)
C
       REAL VGBIOMAS_G(NLAT),          GAVGLAI_G(NLAT),
     1     GAVGSCMS_G(NLAT),           GLEAFMAS_G(NLAT,ICC),
     2     BLEAFMAS_G(NLAT,ICC),       STEMMASS_G(NLAT,ICC),
     3     ROOTMASS_G(NLAT,ICC),       LITRMASS_G(NLAT,ICC),
     4     SOILCMAS_G(NLAT,ICC),       SLAI_G(NLAT,ICC),
     5     AILCG_G(NLAT),              AILCB_G(NLAT),
     6     RMATCTEM_G(NLAT,ICC,IGND),  VEGHGHT_G(NLAT,ICC),
     7     ROOTDPTH_G(NLAT,ICC),       ROOTTEMP_G(NLAT,ICC),
     A     TOTCMASS_G(NLAT)
C
C      MONTHLY OUTPUT FOR CTEM GRID-AVERAGED VARIABLES
C
       REAL LAIMAXG_MN(NLAT),          STEMMASS_MN(NLAT),
     1      ROOTMASS_MN(NLAT),         LITRMASS_MN(NLAT),
     2      SOILCMAS_MN(NLAT),         AVGMNNPP_MN(NLAT),
     3      AVGMNGPP_MN(NLAT),         AVGMNNEP_MN(NLAT),
     a      AVGMNNBP_MN(NLAT),         HETRORES_MN(NLAT),
     b      AUTORES_MN(NLAT),          LITRES_MN(NLAT),
     c      SOILRES_MN(NLAT),
     4      VGBIOMAS_MN(NLAT),         TOTCMASS_MN(NLAT),
     5      AVGMNE_CO2_MN(NLAT),       AVGMNE_CO_MN(NLAT),
     6      AVGMNE_CH4_MN(NLAT),       AVGMNE_NMHC_MN(NLAT),
     7      AVGMNE_H2_MN(NLAT),        AVGMNE_NOX_MN(NLAT),
     8      AVGMNE_N2O_MN(NLAT),       AVGMNE_PM25_MN(NLAT),
     9      AVGMNE_TPM_MN(NLAT),       AVGMNE_TC_MN(NLAT), 
     A      AVGMNE_OC_MN(NLAT),        AVGMNE_BC_MN(NLAT),
     B      AVGMN_PROBFIRE_MN(NLAT),   AVGMN_LUC_EMC_MN(NLAT),
     C      AVGMN_LUCLTRIN_MN(NLAT),   AVGMN_LUCSOCIN_MN(NLAT),
     D      AVGMN_BURNFRAC_MN(NLAT)
C
       REAL LAIMAXG_MN_M(NLAT,NMOS),   STEMMASS_MN_M(NLAT,NMOS),
     1      ROOTMASS_MN_M(NLAT,NMOS),  LITRMASS_MN_M(NLAT,NMOS),
     2      SOILCMAS_MN_M(NLAT,NMOS),  AVGMNNPP_MN_M(NLAT,NMOS),
     3      AVGMNGPP_MN_M(NLAT,NMOS),  AVGMNNEP_MN_M(NLAT,NMOS), 
     4      AVGMNNBP_MN_M(NLAT,NMOS),  VGBIOMAS_MN_M(NLAT,NMOS),  
     a      HETRORES_MN_M(NLAT,NMOS),  AUTORES_MN_M(NLAT,NMOS), 
     b      LITRES_MN_M(NLAT,NMOS),    SOILRES_MN_M(NLAT,NMOS),
     5      LAIMAXGVEG_MN_M(NLAT,NMOS,ICC)
C
       REAL AVGMNE_CO2_MN_M(NLAT,NMOS),AVGMNE_CO_MN_M(NLAT,NMOS),
     1      AVGMNE_CH4_MN_M(NLAT,NMOS),AVGMNE_NMHC_MN_M(NLAT,NMOS),
     2      AVGMNE_H2_MN_M(NLAT,NMOS), AVGMNE_NOX_MN_M(NLAT,NMOS),
     3      AVGMNE_N2O_MN_M(NLAT,NMOS),AVGMNE_PM25_MN_M(NLAT,NMOS),
     4      AVGMNE_TPM_MN_M(NLAT,NMOS),AVGMNE_TC_MN_M(NLAT,NMOS),
     5      AVGMNE_OC_MN_M(NLAT,NMOS), AVGMNE_BC_MN_M(NLAT,NMOS),
     6      AVGMN_PROBFIRE_MN_M(NLAT,NMOS),
     7      AVGMN_LUC_EMC_MN_M(NLAT,NMOS),
     8      AVGMN_LUCSOCIN_MN_M(NLAT,NMOS),
     9      AVGMN_LUCLTRIN_MN_M(NLAT,NMOS),
     A      AVGMN_BURNFRAC_MN_M(NLAT,NMOS)
C
C      YEARLY OUTPUT FOR CTEM GRID-AVERAGED VARIABLES
C
       REAL LAIMAXG_YR(NLAT),          STEMMASS_YR(NLAT),            
     1      ROOTMASS_YR(NLAT),         LITRMASS_YR(NLAT),
     2      SOILCMAS_YR(NLAT),         AVGYRNPP_YR(NLAT),   
     3      AVGYRGPP_YR(NLAT),         AVGYRNEP_YR(NLAT), 
     a      AVGYRNBP_YR(NLAT),         HETRORES_YR(NLAT),
     b      AUTORES_YR(NLAT),          LITRES_YR(NLAT),
     c      SOILRES_YR(NLAT),
     4      VGBIOMAS_YR(NLAT),         TOTCMASS_YR(NLAT),
     5      AVGYRE_CO2_YR(NLAT),       AVGYRE_CO_YR(NLAT),
     6      AVGYRE_CH4_YR(NLAT),       AVGYRE_NMHC_YR(NLAT),
     7      AVGYRE_H2_YR(NLAT),        AVGYRE_NOX_YR(NLAT),
     8      AVGYRE_N2O_YR(NLAT),       AVGYRE_PM25_YR(NLAT),
     9      AVGYRE_TPM_YR(NLAT),       AVGYRE_TC_YR(NLAT),
     A      AVGYRE_OC_YR(NLAT),        AVGYRE_BC_YR(NLAT),
     B      AVGYR_PROBFIRE_YR(NLAT),   AVGYR_LUC_EMC_YR(NLAT),
     C      AVGYR_LUCLTRIN_YR(NLAT),    AVGYR_LUCSOCIN_YR(NLAT),
     D      AVGYR_BURNFRAC_YR(NLAT)
C
       REAL LAIMAXG_YR_M(NLAT,NMOS),   STEMMASS_YR_M(NLAT,NMOS),
     1      ROOTMASS_YR_M(NLAT,NMOS),  LITRMASS_YR_M(NLAT,NMOS),
     2      SOILCMAS_YR_M(NLAT,NMOS),  AVGYRNPP_YR_M(NLAT,NMOS),
     3      AVGYRGPP_YR_M(NLAT,NMOS),  AVGYRNEP_YR_M(NLAT,NMOS),
     4      AVGYRNBP_YR_M(NLAT,NMOS),  VGBIOMAS_YR_M(NLAT,NMOS),
     a      HETRORES_YR_M(NLAT,NMOS),  AUTORES_YR_M(NLAT,NMOS),
     b      LITRES_YR_M(NLAT,NMOS),    SOILRES_YR_M(NLAT,NMOS),  
     5      AVGYRE_CO2_YR_M(NLAT,NMOS),AVGYRE_CO_YR_M(NLAT,NMOS),
     6      AVGYRE_CH4_YR_M(NLAT,NMOS),AVGYRE_NMHC_YR_M(NLAT,NMOS),
     7      AVGYRE_H2_YR_M(NLAT,NMOS), AVGYRE_NOX_YR_M(NLAT,NMOS),
     8      AVGYRE_N2O_YR_M(NLAT,NMOS),AVGYRE_PM25_YR_M(NLAT,NMOS),
     9      AVGYRE_TPM_YR_M(NLAT,NMOS),AVGYRE_TC_YR_M(NLAT,NMOS),
     A      AVGYRE_OC_YR_M(NLAT,NMOS), AVGYRE_BC_YR_M(NLAT,NMOS),
     B      AVGYR_PROBFIRE_YR_M(NLAT,NMOS),
     C      AVGYR_LUC_EMC_YR_M(NLAT,NMOS),
     D      AVGYR_LUCSOCIN_YR_M(NLAT,NMOS),
     E      AVGYR_LUCLTRIN_YR_M(NLAT,NMOS),
     F      AVGYR_BURNFRAC_YR_M(NLAT,NMOS),
     G      LAIMAXGVEG_YR_M(NLAT,NMOS,ICC)            
C
       REAL AFRLEAF_G(NLAT,ICC),       AFRSTEM_G(NLAT,ICC),
     1     AFRROOT_G(NLAT,ICC),        LFSTATUS_G(NLAT,ICC),
     2     TCANOACC_OUT_G(NLAT),       ANNPPVEG_G(NLAT,ICC),
     3     BURNFRAC_G(NLAT),           PROBFIRE_G(NLAT),
     4     LUCEMCOM_G(NLAT),           LUCLTRIN_G(NLAT),
     5     LUCSOCIN_G(NLAT),           GRCLAREA_G(NLAT),
     6     EMIT_CO2_G(NLAT),           EMIT_CO_G(NLAT),
     7     EMIT_CH4_G(NLAT),           EMIT_NMHC_G(NLAT),
     8     EMIT_H2_G(NLAT),            EMIT_NOX_G(NLAT),
     9     EMIT_N2O_G(NLAT),           EMIT_PM25_G(NLAT),
     A     EMIT_TPM_G(NLAT),           EMIT_TC_G(NLAT),
     B     EMIT_OC_G(NLAT),            EMIT_BC_G(NLAT)
C
       INTEGER IFCANCMX_G(NLAT,ICC),   IFCANCMX_M(NLAT,NMOS)
C
       REAL LEAFLITR_M(NLAT,NMOS),     TLTRLEAF_M(NLAT,NMOS),
     1     TLTRSTEM_M(NLAT,NMOS),      TLTRROOT_M(NLAT,NMOS),
     2     AILCG_M(NLAT,NMOS),         AILCB_M(NLAT,NMOS),
     3     RMATCTEM_M(NLAT,NMOS,IGND), VEGHGHT_M(NLAT,NMOS),
     4     ROOTDPTH_M(NLAT,NMOS),      ROOTTEMP_M(NLAT,NMOS),
     5     SLAI_M(NLAT,NMOS),          AFRROOT_M(NLAT,NMOS), 
     6     AFRLEAF_M(NLAT,NMOS),       AFRSTEM_M(NLAT,NMOS),
     7     GPPVEGROW(NLAT,NMOS,ICC),   NEPVEGROW(NLAT,NMOS,ICC),
     8     GPPVEGGAT(ILG,ICC),         NEPVEGGAT(ILG,ICC)
C
       REAL TCANOACCROW_OUT(NLAT,NMOS),TCANOACCGAT_OUT(ILG),
     1     QEVPACC_M_SAVE(NLAT,NMOS),  RGVEGROW(NLAT,NMOS,ICC),
     2     RMLVEGACCROW(NLAT,NMOS,ICC),RMSVEGROW(NLAT,NMOS,ICC),
     3     RMRVEGROW(NLAT,NMOS,ICC),   ANNNEPVEG_M(NLAT,NMOS,ICC),
     4     ANNGPPVEG_M(NLAT,NMOS,ICC), SOILCMAS_M(NLAT,NMOS),
     5     LAIMAXG_M(NLAT,NMOS),       STEMMASS_M(NLAT,NMOS),
     6     ROOTMASS_M(NLAT,NMOS),      LITRMASS_M(NLAT,NMOS)   
C
C     WILTING AND FIELD CAPACITIES VARS
      REAL     FIELDSM(ILG,IGND),     WILTSM(ILG,IGND)
      REAL     PSISAT(ILG,IGND),      GRKSAT(ILG,IGND)
      REAL     THPOR(ILG,IGND),       B(ILG,IGND)
C
C    COMPETITION RELATED VARIABLES
C
       REAL FSINACC_GAT(ILG), FLUTACC_GAT(ILG), FLINACC_GAT(ILG),
     1      ALSWACC_GAT(ILG), ALLWACC_GAT(ILG), PREGACC_GAT(ILG),
     2      ALTOT_GAT,  FSSTAR_GAT, FLSTAR_GAT,
     3      NETRAD_GAT(ILG),  PREACC_GAT(ILG)
C
       REAL TCURMGAT(ILG),    SRPCURYRGAT(ILG), DFTCURYRGAT(ILG),
     1      TMONTHGAT(12,ILG),ANPCPCURGAT(ILG), ANPECURGAT(ILG),
     2      GDD5CURGAT(ILG),  SURMNCURGAT(ILG), DEFMNCURGAT(ILG),
     3      SRPLSCURGAT(ILG), DEFCTCURGAT(ILG)     
C
       LOGICAL INIBOCLM
C
       REAL LYGLFMASGAT(ILG,ICC),   GEREMORTGAT(ILG,ICC),
     1      INTRMORTGAT(ILG,ICC),     LAMBDAGAT(ILG,ICC),
     2      PFTEXISTGAT(ILG,ICC),    BURNVEGGAT(ILG,ICC),
     3            CCGAT(ILG,ICC),         MMGAT(ILG,ICC),
     4            TEMPARRAY(ICC),            TEMP
C
C============= CTEM ARRAY DECLARATION DONE =============================/
C
C=======================================================================
C     * PHYSICAL CONSTANTS.
C     * PARAMETERS IN THE FOLLOWING COMMON BLOCKS ARE NORMALLY DEFINED
C     * WITHIN THE GCM.

      COMMON /PARAMS/ X1,    X2,    X3,    X4,   G,GAS,   X5,
     1                X6,    CPRES, GASV,  X7
      COMMON /PARAM1/ CPI,   X8,    CELZRO,X9,    X10,    X11
      COMMON /PARAM3/ X12,   X13,   X14,   X15,   SIGMA,  X16
      COMMON  /TIMES/ DELTIM,K1,    K2,    K3,    K4,     K5,
     1                K6,    K7,    K8,    K9,    K10,    K11
C
C     * THE FOLLOWING COMMON BLOCKS ARE DEFINED SPECIFICALLY FOR USE 
C     * IN CLASS, VIA BLOCK DATA AND THE SUBROUTINE "CLASSD".
C
      COMMON /CLASS1/ DELT,TFREZ
      COMMON /CLASS2/ RGAS,RGASV,GRAV,SBC,VKC,CT,VMIN
      COMMON /CLASS3/ TCW,TCICE,TCSAND,TCCLAY,TCOM,TCDRYS,
     1                RHOSOL,RHOOM
      COMMON /CLASS4/ HCPW,HCPICE,HCPSOL,HCPOM,HCPSND,HCPCLY,
     1                SPHW,SPHICE,SPHVEG,SPHAIR,RHOW,RHOICE,
     2                TCGLAC,CLHMLT,CLHVAP
      COMMON /CLASS5/ THPORG,THRORG,THMORG,BORG,PSISORG,GRKSORG
      COMMON /CLASS6/ PI,GROWYR,ZOLNG,ZOLNS,ZOLNI,ZORAT,ZORATG
      COMMON /CLASS7/ CANEXT,XLEAF
      COMMON /CLASS8/ ALVSI,ALIRI,ALVSO,ALIRO,ALBRCK
      COMMON /PHYCON/ DELTA,CGRAV,CKARM,CPD
      COMMON /CLASSD2/ AS,ASX,CI,BS,BETA,FACTN,HMIN,ANGMAX
C
      CALL CLASSD
C
      ZDMGRD(1)=10.0
      ZDHGRD(1)=2.0
      CUMSNO=0.0
C
C===================== CTEM ==============================================\
C     ALL MODEL SWITCHES ARE READ IN FROM A NAMELIST FILE
      CALL read_from_job_options(ARGBUFF,CTEMLOOP,CTEM1,CTEM2,
     1             NCYEAR,LNDUSEON,SPINFAST,CYCLEMET,NUMMETCYLYRS,
     2             METCYLYRST,CO2ON,SETCO2CONC,POPDON,POPCYCLEYR,
     3             PARALLELRUN,DOFIRE,COMPETE,START_BARE,RSFILE,IDISP,
     4             IZREF,ISLFD,IPCP,ITC,ITCG,ITG,IWF,IPAI,IHGT,IALC,
     5             IALS,IALG,JHHSTD,JHHENDD,JDSTD,JDENDD,JHHSTY,
     6             JHHENDY,JDSTY,JDENDY)
C
C     SET ICTEMOD, WHICH IS THE CLASS SWITCH FOR COUPLING TO CTEM
C     EITHER TO 1 (CTEM IS COUPLED TO CLASS) OR 0 (CLASS RUNS ALONE)
C     THIS SWITCH IS SET BASED ON CTEM2 THAT WAS SET BY read_from_job_options
C
      IF (CTEM2) THEN
        ICTEMMOD = 1
      ELSE  !CTEM2 IS FALSE
        ICTEMMOD = 0
      END IF
C
C
C     CTEM CONSTANTS
C     CONSTANTS FOR COUPLING CLASS AND CTEM
C
      DATA MDAY /0,31,59,90,120,151,181,212,243,273,304,334,365/
      DATA MMDAY /16,46,75,106,136,167,197,228,259,289,320,350/
C
      DATA L2MAX/3/
C
C     SEPARATION OF THESE PFTs INTO LEVEL 1 (FOR CLASS) AND LEVEL 2 (FOR CTEM)
C     PFTs.

      DATA MODELPFT/1,     1,     0,    ! CLASS PFT 1 NDL
C                  EVG    DCD
     &              1,     1,     1,    ! CLASS PFT 2 BDL
C                  EVG  DCD-CLD DCD-DRY ! NOTE 2 TYPES OF BDL DCD - COLD & DRY
     &              1,     1,     0,    ! CLASS PFT 3 CROP
C                  C3      C4
     &              1,     1,     0/    ! CLASS PFT 4 GRASS
C                  C3      C4
C
C     CTEM's TIME STEP IN DAYS
C
      DATA DELTAT/1.0/
C
      DATA ABSZERO/1E-12/
C
      LOPCOUNT = 1   ! INITIALIZE LOOP COUNT TO 1.
C
C     CHECKING THE TIME SPENT FOR RUNNING MODEL
C
C      CALL IDATE(TODAY)
C      CALL ITIME(NOW)
C      WRITE(0,1000)   TODAY(2), TODAY(1), 2000+TODAY(3), NOW
C 1000 FORMAT( 'START DATE: ', I2.2, '/', I2.2, '/', I4.4, 
C     &      '; START TIME: ', I2.2, ':', I2.2, ':', I2.2 )
C
C     INITIALIZATION FOR COUPLING CLASS AND CTEM
C
      DO I=1,NLAT
        DO M=1,NMOS
          PREACC_M(I,M)=0.
          GTACC_M(I,M)=0.
          QEVPACC_M(I,M)=0.
          HFSACC_M(I,M)=0.
          HMFNACC_M(I,M)=0.
          ROFACC_M(I,M)=0.
          SNOACC_M(I,M)=0.
C         CANARE(I,M)=0.
C         SNOARE(I,M)=0.
          OVRACC_M(I,M)=0.
          WTBLACC_M(I,M)=0.
              DO J=1,IGND
                TBARACC_M(I,M,J)=0.
                THLQACC_M(I,M,J)=0.
                THICACC_M(I,M,J)=0.
                THALACC_M(I,M,J)=0.
              ENDDO
          ALVSACC_M(I,M)=0.
          ALIRACC_M(I,M)=0.
          RHOSACC_M(I,M)=0.
          TSNOACC_M(I,M)=0.
          WSNOACC_M(I,M)=0.
          TCANACC_M(I,M)=0.
          RCANACC_M(I,M)=0.
          SCANACC_M(I,M)=0.
          GROACC_M(I,M)=0.
          FSINACC_M(I,M)=0.
          FLINACC_M(I,M)=0.
          TAACC_M(I,M)=0.
          UVACC_M(I,M)=0.
          PRESACC_M(I,M)=0.
          QAACC_M(I,M)=0.
          EVAPACC_M(I,M)=0.
          FLUTACC_M(I,M)=0.
        ENDDO
      ENDDO
C
      DO 11 I=1,NLAT  
       PRBFRHUCGRD(I)         = 0.0
       EXTNPROBGRD(I)         = 0.0
C
       DO J =1,12  
         MLIGHTNGGRD(I,J)=0.0
       ENDDO
C
       DO 11 M=1,NMOS   
        GRCLAREAROW(I,M)          = 0.0     
        ICOUNTROW(I,M)           = 0
        CO2CONCROW(I,M)          = 0.0 
        NPPROW(I,M)              = 0.0
        NEPROW(I,M)              = 0.0
        HETRORESROW(I,M)         = 0.0
        AUTORESROW(I,M)          = 0.0
        SOILRESPROW(I,M)         = 0.0
        RMROW(I,M)               = 0.0
        RGROW(I,M)               = 0.0
        NBPROW(I,M)              = 0.0
        LITRESROW(I,M)           = 0.0
        SOCRESROW(I,M)           = 0.0
        GPPROW(I,M)              = 0.0
        DSTCEMLSROW(I,M)         = 0.0
        DSTCEMLS3ROW(I,M)        = 0.0
        LITRFALLROW(I,M)         = 0.0
        HUMIFTRSROW(I,M)         = 0.0
        CANRESROW(I,M)           = 0.0
        RMLROW(I,M)              = 0.0
        RMSROW(I,M)              = 0.0
        RMRROW(I,M)              = 0.0  
        LUCEMCOMROW(I,M)         = 0.0
        LUCLTRINROW(I,M)         = 0.0
        LUCSOCINROW(I,M)         = 0.0
        BURNFRACROW(I,M)         = 0.0
        PROBFIREROW(I,M)         = 0.0
        CFLUXCGROW(I,M)          = 0.0
        CFLUXCSROW(I,M)          = 0.0 
        EMIT_CO2ROW(I,M)         =0.0
        EMIT_COROW(I,M)          =0.0
        EMIT_CH4ROW(I,M)         =0.0
        EMIT_NMHCROW(I,M)        =0.0
        EMIT_H2ROW(I,M)          =0.0
        EMIT_NOXROW(I,M)         =0.0
        EMIT_N2OROW(I,M)         =0.0
        EMIT_PM25ROW(I,M)        =0.0
        EMIT_TPMROW(I,M)         =0.0
        EMIT_TCROW(I,M)          =0.0
        EMIT_OCROW(I,M)          =0.0
        EMIT_BCROW(I,M)          =0.0
C 
        TCANOACCROW_M(I,M)       = 0.0
        UVACCROW_M(I,M)          = 0.0
        VVACCROW_M(I,M)          = 0.0
        TCANOACCROW_OUT(I,M)     = 0.0
C
        DO J = 1, IGND
           TBARACCROW_M(I,M,J)  = 0.0
        ENDDO
C
        DO J = 1, ICAN
          ZOLNCROW(I,M,J)        = 0.0
          AILCROW(I,M,J)         = 0.0
          CMASVEGCROW(I,M,J)     = 0.0
          ALVSCTMROW(I,M,J)      = 0.0
          ALIRCTMROW(I,M,J)      = 0.0
          CSUM(I,M,J)            = 0.0
          PAICROW(I,M,J)         = 0.0
          SLAICROW(I,M,J)        = 0.0
          DO K = 1, 3
            RMATCROW(I,M,J,K)    = 0.0
          ENDDO
        ENDDO

        DO J = 1, ICC
          AILCGROW(I,M,J)        = 0.0
          AILCGSROW(I,M,J)       = 0.0   
          FCANCSROW(I,M,J)       = 0.0 
          FCANCROW(I,M,J)        = 0.0
          FCANCMXROW(I,M,J)      = 0.0
          CO2I1CGROW(I,M,J)      = 0.0  
          CO2I1CSROW(I,M,J)      = 0.0
          CO2I2CGROW(I,M,J)      = 0.0
          CO2I2CSROW(I,M,J)      = 0.0
          ANCSVEGROW(I,M,J)      = 0.0
          ANCGVEGROW(I,M,J)      = 0.0 
          RMLCSVEGROW(I,M,J)     = 0.0
          RMLCGVEGROW(I,M,J)     = 0.0
          STEMMASSROW(I,M,J)     = 0.0
          ROOTMASSROW(I,M,J)     = 0.0  
          AILCBROW(I,M,J)        = 0.0
          GRWTHEFFROW(I,M,J)     = 0.0
          DVDFCANROW(I,M,J)      = 0.0
          BMASVEGROW(I,M,J)      = 0.0
          TLTRLEAFROW(I,M,J)     = 0.0
          TLTRSTEMROW(I,M,J)     = 0.0
          TLTRROOTROW(I,M,J)     = 0.0
          LEAFLITRROW(I,M,J)     = 0.0
          ROOTTEMPROW(I,M,J)     = 0.0
          AFRLEAFROW(I,M,J)      = 0.0
          AFRSTEMROW(I,M,J)      = 0.0
          AFRROOTROW(I,M,J)      = 0.0
          WTSTATUSROW(I,M,J)     = 0.0
          LTSTATUSROW(I,M,J)     = 0.0
          AILCMINROW(I,M,J)      = 0.0
          AILCMAXROW(I,M,J)      = 0.0
          PFCANCMXROW(I,M,J)     = 0.0
          NFCANCMXROW(I,M,J)     = 0.0
          NPPVEGROW(I,M,J)       = 0.0
          VEGHGHTROW(I,M,J)      = 0.0
          ROOTDPTHROW(I,M,J)     = 0.0
          GLEAFMASROW(I,M,J)     = 0.0
          BLEAFMASROW(I,M,J)     = 0.0
          ANVEGROW(I,M,J)        = 0.0
          RMLVEGROW(I,M,J)       = 0.0
C
          RMLVEGACCROW(I,M,J)    = 0.0
          RMSVEGROW(I,M,J)       = 0.0
          RMRVEGROW(I,M,J)       = 0.0
          RGVEGROW(I,M,J)        = 0.0
C
          VGBIOMAS_VEGROW(I,M,J) = 0.0
C
          GPPVEGROW(I,M,J) = 0.0 
          NEPVEGROW(I,M,J) = 0.0 
C
          DO K = 1, IGND
            RMATCTEMROW(I,M,J,K) = 0.0     
          ENDDO
        ENDDO
     
        DO J = 1, ICCP1 
          LITRMASSROW(I,M,J)    = 0.0
          SOILCMASROW(I,M,J)    = 0.0
        ENDDO

11     CONTINUE
C
      RLIM                = ABSZERO
C
      IF (CTEMLOOP .GT. 100) THEN
       WRITE(0,*)'The # of loops is larger than 100'
       CALL EXIT
      ENDIF

c     DO SOME INITIALIZATIONS FOR THE READING IN OF DATA FROM FILES. THESE
C     INITIALIZATIONS PRIMARILY AFFECT HOW THE MODEL DOES A SPINUP OR TRANSIENT
C     SIMULATION AND WHICH YEARS OF THE INPUT DATA ARE BEING READ.

      IF (.NOT. CYCLEMET) THEN !TRANSIENT SIMULATION, SET TO DUMMY VALUES
        METCYLYRST=-9999
        METCYCENDYR=9999
      ELSE
C       FIND THE FINAL YEAR OF THE CYCLING MET
C       METCYLYRST IS DEFINED IN THE JOBOPTIONS FILE
        METCYCENDYR = METCYLYRST + NUMMETCYLYRS - 1
      ENDIF

C     IF CYCLING MET, FIND THE POPD AND LUC YEAR TO CYCLE WITH.
C     IT IS ASSUMED THAT YOU ALWAYS WANT TO CYCLE THE POPD AND LUC
C     ON THE SAME YEAR TO BE CONSISTENT. SO IF YOU ARE CYCLING THE 
C     MET DATA, YOU CAN SET A POPD YEAR (FIRST CASE), OR IF CYCLING 
C     THE MET DATA YOU CAN LET THE POPCYCLEYR DEFAULT TO THE MET CYCLING
C     YEAR BY SETTING POPCYCLEYR TO -9999 (SECOND CASE). IF NOT CYCLING 
C     THE MET DATA, CYPOPYR AND CYLUCYR WILL DEFAULT TO A DUMMY VALUE
C     (LAST CASE).
C
      IF (CYCLEMET .AND. POPCYCLEYR .NE. -9999) THEN
        CYPOPYR = POPCYCLEYR
        CYLUCYR = POPCYCLEYR
      ELSE IF (CYCLEMET) THEN
        CYPOPYR = METCYLYRST
        CYLUCYR = METCYLYRST
      ELSE  ! GIVE DUMMY VALUE
        CYPOPYR = -9999
        CYLUCYR = -9999
      END IF

C     CTEM INITIALIZATION DONE
C
C     OPEN FILES FOR READING AND WRITING.
C     THESE ARE FOR COUPLED MODEL (CLASS_CTEM)
C     WE ADDED BOTH GRID AND MOSAIC OUTPUT FILES
C
C     * INPUT FILES

        OPEN(UNIT=50,FILE=ARGBUFF(1:STRLEN(ARGBUFF))//'.INI',
     &       STATUS='OLD')
        IF (CTEM1) THEN
        OPEN(UNIT=70,FILE=ARGBUFF(1:STRLEN(ARGBUFF))//'.CTM',
     &       STATUS='OLD')
        ENDIF
        OPEN(UNIT=51,FILE=ARGBUFF(1:STRLEN(ARGBUFF))//'.MET',
     &      STATUS='OLD')

C     LUC FILE IS OPENED IN INITIALIZE_LUC SUBROUTINE 

      IF (POPDON) THEN
        OPEN(UNIT=91,FILE=ARGBUFF(1:STRLEN(ARGBUFF))//'.POPD',
     &       STATUS='OLD')
      ENDIF
      IF (CO2ON) THEN
        OPEN(UNIT=99,FILE=ARGBUFF(1:STRLEN(ARGBUFF))//'.CO2',
     &         STATUS='OLD')
      ENDIF
C
C     * OUTPUT FILES
C
      IF (.NOT. PARALLELRUN) THEN ! STAND ALONE MODE, INCLUDES HALF-HOURLY AND DAILY OUTPUT
       OPEN(UNIT=61,FILE=ARGBUFF(1:STRLEN(ARGBUFF))//'.OF1_G')  ! DAILY OUTPUT FROM CLASS
       OPEN(UNIT=62,FILE=ARGBUFF(1:STRLEN(ARGBUFF))//'.OF2_G')  
       OPEN(UNIT=63,FILE=ARGBUFF(1:STRLEN(ARGBUFF))//'.OF3_G')
       OPEN(UNIT=64,FILE=ARGBUFF(1:STRLEN(ARGBUFF))//'.OF4_M')  ! HALF-HOURLY OUTPUT FROM CLASS  
       OPEN(UNIT=65,FILE=ARGBUFF(1:STRLEN(ARGBUFF))//'.OF5_M')
       OPEN(UNIT=66,FILE=ARGBUFF(1:STRLEN(ARGBUFF))//'.OF6_M')
       OPEN(UNIT=67,FILE=ARGBUFF(1:STRLEN(ARGBUFF))//'.OF7_M')
       OPEN(UNIT=68,FILE=ARGBUFF(1:STRLEN(ARGBUFF))//'.OF8_M')   
       OPEN(UNIT=69,FILE=ARGBUFF(1:STRLEN(ARGBUFF))//'.OF9_M')
       OPEN(UNIT=611,FILE=ARGBUFF(1:STRLEN(ARGBUFF))//'.OF1_M') ! DAILY OUTPUT FROM CLASS
       OPEN(UNIT=621,FILE=ARGBUFF(1:STRLEN(ARGBUFF))//'.OF2_M')
       OPEN(UNIT=631,FILE=ARGBUFF(1:STRLEN(ARGBUFF))//'.OF3_M')
       OPEN(UNIT=641,FILE=ARGBUFF(1:STRLEN(ARGBUFF))//'.OF4_G') ! HALF-HOURLY OUTPUT FROM CLASS
       OPEN(UNIT=651,FILE=ARGBUFF(1:STRLEN(ARGBUFF))//'.OF5_G')
       OPEN(UNIT=661,FILE=ARGBUFF(1:STRLEN(ARGBUFF))//'.OF6_G')
       OPEN(UNIT=671,FILE=ARGBUFF(1:STRLEN(ARGBUFF))//'.OF7_G')
       OPEN(UNIT=681,FILE=ARGBUFF(1:STRLEN(ARGBUFF))//'.OF8_G')   
       OPEN(UNIT=691,FILE=ARGBUFF(1:STRLEN(ARGBUFF))//'.OF9_G')
C
       IF (CTEM2) THEN
        IF(.NOT.CTEM1) THEN
          WRITE(6,*)'YOU CANNOT SET CTEM2 TO TRUE, AND CTEM1 TO FALSE.'
          WRITE(6,*)'SET BOTH THESE SWITCHES TO .TRUE. IF YOU WANT TO'
          WRITE(6,*)'USE CTEM COMPLETELY COUPLED WITH CLASS.'
          CALL XIT('RUNCLASS36CTEM', -1)
        ENDIF
       ENDIF
C
C      THE CTEM OUTPUT FILE SUFFIX NAMING CONVENTION IS AS FOLLOWS:
C                       ".CT##{TIME}_{MOSAIC/GRID}"
C      WHERE THE ## IS A NUMERICAL IDENTIFIER, {TIME} IS ANY OF H, D, M,
C      OR Y FOR HALF HOURLY, DAILY, MONTHLY, OR YEARLY, RESPECTIVELY. 
C      AFTER THE UNDERSCORE M OR G IS USED TO DENOTE MOSAIC OR GRID 
C      -AVERAGED VALUES, RESPECTIVELY.   
C
       IF (CTEM1) THEN
C       CTEM HALF HOURLY OUTPUT FILES
        OPEN(UNIT=71, FILE=ARGBUFF(1:STRLEN(ARGBUFF))//'.CT01H_M')  
        OPEN(UNIT=711,FILE=ARGBUFF(1:STRLEN(ARGBUFF))//'.CT01H_G')
       ENDIF
C
       IF (CTEM2) THEN
C       CTEM DAILY OUTPUT FILES (MOSAIC)
        OPEN(UNIT=72,FILE=ARGBUFF(1:STRLEN(ARGBUFF))//'.CT01D_M')  
        OPEN(UNIT=73,FILE=ARGBUFF(1:STRLEN(ARGBUFF))//'.CT02D_M')
        OPEN(UNIT=74,FILE=ARGBUFF(1:STRLEN(ARGBUFF))//'.CT03D_M')
        OPEN(UNIT=75,FILE=ARGBUFF(1:STRLEN(ARGBUFF))//'.CT04D_M')
        OPEN(UNIT=76,FILE=ARGBUFF(1:STRLEN(ARGBUFF))//'.CT05D_M')
        OPEN(UNIT=78,FILE=ARGBUFF(1:STRLEN(ARGBUFF))//'.CT06D_M') ! DISTURBANCE VARS

C       CTEM YEARLY OUTPUT FILES (MOSAIC)
        OPEN(UNIT=77,FILE=ARGBUFF(1:STRLEN(ARGBUFF))//'.CT01Y_M') ! MOSAIC-MEAN
        OPEN(UNIT=79,FILE=ARGBUFF(1:STRLEN(ARGBUFF))//'.CT09Y_M')
  
C       CTEM DAILY OUTPUT FILES (GRID-AVERAGE)
        OPEN(UNIT=721,FILE=ARGBUFF(1:STRLEN(ARGBUFF))//'.CT01D_G') 
        OPEN(UNIT=731,FILE=ARGBUFF(1:STRLEN(ARGBUFF))//'.CT02D_G')
        OPEN(UNIT=741,FILE=ARGBUFF(1:STRLEN(ARGBUFF))//'.CT03D_G')
        OPEN(UNIT=751,FILE=ARGBUFF(1:STRLEN(ARGBUFF))//'.CT04D_G')
C
        IF (COMPETE .OR. LNDUSEON) THEN
         OPEN(UNIT=761,FILE=ARGBUFF(1:STRLEN(ARGBUFF))//'.CT07D_G') ! COMPETITION
        END IF
C
        OPEN(UNIT=781,FILE=ARGBUFF(1:STRLEN(ARGBUFF))//'.CT06D_G') ! DISTURBANCE VARS

       ENDIF
C
      ENDIF ! PARALLELRUN

C     MONTHLY & YEARLY OUTPUT FOR BOTH PARALLEL MODE AND STAND ALONE MODE
C     CLASS MONTHLY OUTPUT FILES 
      OPEN(UNIT=81,FILE=ARGBUFF(1:STRLEN(ARGBUFF))//'.OF1M_G') 
      OPEN(UNIT=82,FILE=ARGBUFF(1:STRLEN(ARGBUFF))//'.OF2M_G')
C     CLASS YEARLY OUTPUT FILESclose

      OPEN(UNIT=83,FILE=ARGBUFF(1:STRLEN(ARGBUFF))//'.OF1Y_G')

      IF (CTEM2) THEN
C       CTEM MONTHLY OUTPUT FILES
        OPEN(UNIT=84,FILE=ARGBUFF(1:STRLEN(ARGBUFF))//'.CT01M_G')
        OPEN(UNIT=85,FILE=ARGBUFF(1:STRLEN(ARGBUFF))//'.CT06M_G') ! DISTURBANCE
C
        IF (COMPETE .OR. LNDUSEON) THEN
         OPEN(UNIT=88,FILE=ARGBUFF(1:STRLEN(ARGBUFF))//'.CT07M_G')! CTEM PFT FRACTIONS
        ENDIF
C
C       CTEM YEARLY OUTPUT FILES
        OPEN(UNIT=86,FILE=ARGBUFF(1:STRLEN(ARGBUFF))//'.CT01Y_G') 
        OPEN(UNIT=87,FILE=ARGBUFF(1:STRLEN(ARGBUFF))//'.CT06Y_G') ! DISTURBANCE
C
        IF (COMPETE .OR. LNDUSEON) THEN
         OPEN(UNIT=89,FILE=ARGBUFF(1:STRLEN(ARGBUFF))//'.CT07Y_G')! CTEM PFT FRACTIONS
        ENDIF
      ENDIF
C
C=======================================================================
C
C     * READ AND PROCESS INITIALIZATION AND BACKGROUND INFORMATION.
C     * FIRST, MODEL RUN SPECIFICATIONS.

      READ (50,5010) TITLE1,TITLE2,TITLE3,TITLE4,TITLE5,TITLE6
      READ (50,5010) NAME1,NAME2,NAME3,NAME4,NAME5,NAME6
      READ (50,5010) PLACE1,PLACE2,PLACE3,PLACE4,PLACE5,PLACE6
C
      IF(CTEM1) THEN
        READ (70,7010) TITLEC1
        READ (70,7010) TITLEC2
        READ (70,7010) TITLEC3
      ENDIF
C
      IF (.NOT. PARALLELRUN) THEN ! STAND ALONE MODE, INCLUDES HALF-HOURLY AND DAILY OUTPUT
C
      WRITE(61,6001) TITLE1,TITLE2,TITLE3,TITLE4,TITLE5,TITLE6
      WRITE(61,6002) NAME1,NAME2,NAME3,NAME4,NAME5,NAME6
      WRITE(61,6011) 
      WRITE(62,6001) TITLE1,TITLE2,TITLE3,TITLE4,TITLE5,TITLE6
      WRITE(62,6002) NAME1,NAME2,NAME3,NAME4,NAME5,NAME6
C
      IF(IGND.GT.3) THEN
          WRITE(62,6012)
      ELSE
          WRITE(62,6212)
      ENDIF
C
      WRITE(63,6001) TITLE1,TITLE2,TITLE3,TITLE4,TITLE5,TITLE6
      WRITE(63,6002) NAME1,NAME2,NAME3,NAME4,NAME5,NAME6
C
      IF(IGND.GT.3) THEN
          WRITE(63,6013)
      ELSE
          WRITE(63,6313)
      ENDIF
C
      WRITE(64,6001) TITLE1,TITLE2,TITLE3,TITLE4,TITLE5,TITLE6
      WRITE(64,6002) NAME1,NAME2,NAME3,NAME4,NAME5,NAME6
      WRITE(64,6014) 
      WRITE(65,6001) TITLE1,TITLE2,TITLE3,TITLE4,TITLE5,TITLE6
      WRITE(65,6002) NAME1,NAME2,NAME3,NAME4,NAME5,NAME6
C
      IF(IGND.GT.3) THEN
          WRITE(65,6015) 
      ELSE
          WRITE(65,6515)
      ENDIF
C
      WRITE(66,6001) TITLE1,TITLE2,TITLE3,TITLE4,TITLE5,TITLE6
      WRITE(66,6002) NAME1,NAME2,NAME3,NAME4,NAME5,NAME6
C
      IF(IGND.GT.3) THEN
          WRITE(66,6016)
      ELSE
          WRITE(66,6616)
          WRITE(66,6615)
      ENDIF
C
      WRITE(67,6001) TITLE1,TITLE2,TITLE3,TITLE4,TITLE5,TITLE6
      WRITE(67,6002) NAME1,NAME2,NAME3,NAME4,NAME5,NAME6
      WRITE(67,6017)
      WRITE(68,6001) TITLE1,TITLE2,TITLE3,TITLE4,TITLE5,TITLE6
      WRITE(68,6002) NAME1,NAME2,NAME3,NAME4,NAME5,NAME6
      WRITE(68,6018) 
      WRITE(69,6001) TITLE1,TITLE2,TITLE3,TITLE4,TITLE5,TITLE6
      WRITE(69,6002) NAME1,NAME2,NAME3,NAME4,NAME5,NAME6
      WRITE(69,6019) 
C
6011  FORMAT(2X,'DAY  YEAR  K*  L*  QH  QE  SM  QG  ',
     1          'TR  SWE  DS  WS  AL  ROF')
6012  FORMAT(2X,'DAY  YEAR  TG1  THL1  THI1  TG2  THL2  THI2  ',
     1              'TG3  THL3  THI3  TG4  THL4  THI4  TG5  THL5  ',
     2              'THI5')
6212  FORMAT(2X,'DAY  YEAR  TG1  THL1  THI1  TG2  THL2  THI2  ',
     1              'TG3  THL3  THI3  TCN  RCAN  SCAN  TSN  ZSN')
6013  FORMAT(2X,'DAY  YEAR  TG6  THL6  THI6  TG7  THL7  THI7  ',
     1              'TG8  THL8  THI8  TG9  THL9  THI9  TG10'  ,
     2              'THL10  THI10')
6313  FORMAT(2X,'DAY YEAR KIN LIN TA UV PRES QA PCP EVAP')
6014  FORMAT(2X,'HOUR  MIN  DAY  YEAR  K*  L*  QH  QE  SM  QG  ',
     1          'TR  SWE  DS  WS  AL  ROF  TPN  ZPN CANRES')
6015  FORMAT(2X,'HOUR  MIN  DAY  YEAR  TG1  THL1  THI1  TG2  ',
     1          'THL2  THI2  TG3  THL3  THI3')
6515  FORMAT(2X,'HOUR  MIN  DAY  YEAR  TG1  THL1  THI1  TG2  ',
     1           'THL2  THI2  TG3  THL3  THI3  TCN  RCAN  SCAN  ',
     2           'TSN  ZSN')
6016  FORMAT(2X,'HOUR  MIN  DAY  YEAR  TG4  THL4  THI4  TG5  ',
     1          'THL5  THI5  TG6  THL6  THI6  TG7  ',
     2          'THL7  THI7  TG8  THL8  THI8  TG9  THL9  THI9  ',
     3          'TG10  THL10  THI10  G0  G1  G2  G3  G4  G5  G6  ',
     4          'G7  G8  G9')
6616  FORMAT(2X,'HOUR  MIN  DAY  SWIN  LWIN  PCP  TA  VA  PA  QA')
6615  FORMAT(2X,'IF IGND <= 3, THIS FILE IS EMPTY')
6017  FORMAT(2X,'HOUR  MIN  DAY  YEAR  ',
     1  'TROF     TROO     TROS     TROB      ROF     ROFO   ',
     2  '  ROFS        ROFB         FCS        FGS        FC       FG')
6018  FORMAT(2X,'HOUR  MIN  DAY  YEAR  ',
     1   'FSGV FSGS FSGG FLGV FLGS FLGG HFSC HFSS HFSG ',
     2          'HEVC HEVS HEVG HMFC HMFS HMFG1 HMFG2 HMFG3 ',
     3          'HTCC HTCS HTC1 HTC2 HTC3')
6019  FORMAT(2X,'HOUR  MIN  DAY  YEAR  ',
     1   'PCFC PCLC PCPN PCPG QFCF QFCL QFN QFG QFC1 ',
     2          'QFC2 QFC3 ROFC ROFN ROFO ROF WTRC WTRS WTRG')
C 
      WRITE(611,6001) TITLE1,TITLE2,TITLE3,TITLE4,TITLE5,TITLE6
      WRITE(611,6002) NAME1,NAME2,NAME3,NAME4,NAME5,NAME6
      WRITE(611,6011) 
      WRITE(621,6001) TITLE1,TITLE2,TITLE3,TITLE4,TITLE5,TITLE6
      WRITE(621,6002) NAME1,NAME2,NAME3,NAME4,NAME5,NAME6
C
      IF(IGND.GT.3) THEN
          WRITE(621,6012)
      ELSE
          WRITE(621,6212)
      ENDIF
C
      WRITE(631,6001) TITLE1,TITLE2,TITLE3,TITLE4,TITLE5,TITLE6
      WRITE(631,6002) NAME1,NAME2,NAME3,NAME4,NAME5,NAME6
C
      IF(IGND.GT.3) THEN
          WRITE(631,6013)
      ELSE
          WRITE(631,6313)
      ENDIF
C
      WRITE(641,6001) TITLE1,TITLE2,TITLE3,TITLE4,TITLE5,TITLE6
      WRITE(641,6002) NAME1,NAME2,NAME3,NAME4,NAME5,NAME6
      WRITE(641,6008) 
      WRITE(651,6001) TITLE1,TITLE2,TITLE3,TITLE4,TITLE5,TITLE6
      WRITE(651,6002) NAME1,NAME2,NAME3,NAME4,NAME5,NAME6
C
      IF(IGND.GT.3) THEN
          WRITE(651,6015) 
      ELSE
          WRITE(651,6515)
      ENDIF
C
      WRITE(661,6001) TITLE1,TITLE2,TITLE3,TITLE4,TITLE5,TITLE6
      WRITE(661,6002) NAME1,NAME2,NAME3,NAME4,NAME5,NAME6
C
      IF(IGND.GT.3) THEN
          WRITE(661,6016) 
      ELSE
          WRITE(661,6616)
      ENDIF
C
      WRITE(671,6001) TITLE1,TITLE2,TITLE3,TITLE4,TITLE5,TITLE6
      WRITE(671,6002) NAME1,NAME2,NAME3,NAME4,NAME5,NAME6
      WRITE(671,6017)
      WRITE(681,6001) TITLE1,TITLE2,TITLE3,TITLE4,TITLE5,TITLE6
      WRITE(681,6002) NAME1,NAME2,NAME3,NAME4,NAME5,NAME6
      WRITE(681,6018) 
      WRITE(691,6001) TITLE1,TITLE2,TITLE3,TITLE4,TITLE5,TITLE6
      WRITE(691,6002) NAME1,NAME2,NAME3,NAME4,NAME5,NAME6
      WRITE(691,6019) 
C
6008  FORMAT(2X,'HOUR  MIN  DAY  YEAR  K*  L*  QH  QE  SM  QG  ',
     1          'TR  SWE  DS  WS  AL  ROF  TPN  ZPN ')
C
C     CTEM FILE TITLES
C
      IF (CTEM1) THEN
        WRITE(71,6001) TITLE1,TITLE2,TITLE3,TITLE4,TITLE5,TITLE6
        WRITE(71,6002) NAME1,NAME2,NAME3,NAME4,NAME5,NAME6
        WRITE(71,6003) PLACE1,PLACE2,PLACE3,PLACE4,PLACE5,PLACE6
        WRITE(71,7020)
        WRITE(71,7030)
      ENDIF
C
      IF (CTEM2) THEN
        WRITE(72,6001) TITLE1,TITLE2,TITLE3,TITLE4,TITLE5,TITLE6
        WRITE(72,6002) NAME1,NAME2,NAME3,NAME4,NAME5,NAME6
        WRITE(72,6003) PLACE1,PLACE2,PLACE3,PLACE4,PLACE5,PLACE6
        WRITE(72,7020)
        WRITE(72,7040)
C
        WRITE(73,6001) TITLE1,TITLE2,TITLE3,TITLE4,TITLE5,TITLE6
        WRITE(73,6002) NAME1,NAME2,NAME3,NAME4,NAME5,NAME6
        WRITE(73,6003) PLACE1,PLACE2,PLACE3,PLACE4,PLACE5,PLACE6
        WRITE(73,7020)
        WRITE(73,7050)
C
        WRITE(74,6001) TITLE1,TITLE2,TITLE3,TITLE4,TITLE5,TITLE6
        WRITE(74,6002) NAME1,NAME2,NAME3,NAME4,NAME5,NAME6
        WRITE(74,6003) PLACE1,PLACE2,PLACE3,PLACE4,PLACE5,PLACE6
        WRITE(74,7020)
        WRITE(74,7061)
C
        WRITE(75,6001) TITLE1,TITLE2,TITLE3,TITLE4,TITLE5,TITLE6
        WRITE(75,6002) NAME1,NAME2,NAME3,NAME4,NAME5,NAME6
        WRITE(75,6003) PLACE1,PLACE2,PLACE3,PLACE4,PLACE5,PLACE6
        WRITE(75,7020)
        WRITE(75,7070)
C
        WRITE(76,6001) TITLE1,TITLE2,TITLE3,TITLE4,TITLE5,TITLE6
        WRITE(76,6002) NAME1,NAME2,NAME3,NAME4,NAME5,NAME6
        WRITE(76,6003) PLACE1,PLACE2,PLACE3,PLACE4,PLACE5,PLACE6
        WRITE(76,7020)
        WRITE(76,7080)
C
        WRITE(77,6001) TITLE1,TITLE2,TITLE3,TITLE4,TITLE5,TITLE6
        WRITE(77,6002) NAME1,NAME2,NAME3,NAME4,NAME5,NAME6
        WRITE(77,6003) PLACE1,PLACE2,PLACE3,PLACE4,PLACE5,PLACE6
        WRITE(77,7090)
        WRITE(77,7100)
        WRITE(77,7101)
C
        WRITE(78,6001) TITLE1,TITLE2,TITLE3,TITLE4,TITLE5,TITLE6
        WRITE(78,6002) NAME1,NAME2,NAME3,NAME4,NAME5,NAME6
        WRITE(78,6003) PLACE1,PLACE2,PLACE3,PLACE4,PLACE5,PLACE6
        WRITE(78,7021)
        WRITE(78,7110)
        WRITE(78,7111)
C
        WRITE(79,6001) TITLE1,TITLE2,TITLE3,TITLE4,TITLE5,TITLE6
        WRITE(79,6002) NAME1,NAME2,NAME3,NAME4,NAME5,NAME6
        WRITE(79,6003) PLACE1,PLACE2,PLACE3,PLACE4,PLACE5,PLACE6
        WRITE(79,7090)
        WRITE(79,7112)
        WRITE(79,7113)
C
      ENDIF !CTEM2

7010  FORMAT(A80)
7020  FORMAT('CANADIAN TERRESTRIAL ECOSYSTEM MODEL (CTEM) DAILY RESULTS'
     &)
7021  FORMAT('CANADIAN TERRESTRIAL ECOSYSTEM MODEL (CTEM) DAILY ',
     &' DISTURBANCE RESULTS')
7030  FORMAT('HOUR MIN  DAY, An FOR 9 PFTs, RmL FOR 9 PFTs')
7040  FORMAT('  DAY YEAR       GPP       NPP       NEP       NBP',
     &'   AUTORES  HETRORES    LITRES    SOCRES  DSTCEMLS  LITRFALL',
     &'  HUMIFTRS')
7050  FORMAT('  DAY YEAR       RML       RMS       RMR        RG',
     &'  LEAFLITR  TLTRLEAF  TLTRSTEM  TLTRROOT ')
7060  FORMAT('  DAY YEAR  VGBIOMAS   GAVGLAI  GAVGLTMS  GAVGSCMS  ',
     &'TOTCMASS  GLEAFMAS   BLEAFMAS STEMMASS   ROOTMASS  LITRMASS ',
     &' SOILCMAS')
7061  FORMAT('  DAY YEAR  VGBIOMAS   GAVGLAI  GLEAFMAS   BLEAFMAS ',
     & 'STEMMASS   ROOTMASS  LITRMASS SOILCMAS')
7070  FORMAT('  DAY YEAR     AILCG     AILCB    RMATCTEM ',
     &'LAYER 1,2, & 3     VEGHGHT  ROOTDPTH  ROOTTEMP      SLAI')
7075  FORMAT('  DAY YEAR   FRAC #1   FRAC #2   FRAC #3   FRAC #4   ',
     &'FRAC #5   FRAC #6   FRAC #7   FRAC #8   FRAC #9  ',
     &'FRAC #10[%] SUMCHECK')
7080  FORMAT('  DAY YEAR   AFRLEAF   AFRSTEM   AFRROOT  TCANOACC',
     &'  LFSTATUS')
7090  FORMAT('CANADIAN TERRESTRIAL ECOSYSTEM MODEL (CTEM) YEARLY',
     &' RESULTS')
7100  FORMAT('  YEAR   LAIMAXG  STEMMASS  ROOTMASS  LITRMASS  SOILCMAS',
     &' ANNUALNPP ANNUALGPP ANNUALNEP ANNUALNBP   AVGYRLE')
7101  FORMAT('          m2/m2    Kg C/m2  Kg C/m2    Kg C/m2   Kg C/m2',
     &'  gC/m2.yr  gC/m2.yr  gC/m2.yr  gC/m2.yr       W/m2')
7110  FORMAT('  DAY YEAR   EMIT_CO2',
     &'    EMIT_CO   EMIT_CH4  EMIT_NMHC    EMIT_H2   EMIT_NOX',
     &'   EMIT_N2O  EMIT_PM25   EMIT_TPM    EMIT_TC    EMIT_OC',
     &'    EMIT_BC   BURNFRAC   PROBFIRE   LUCEMCOM   LUCLTRIN',
     &'   LUCSOCIN   GRCLAREA')
7111  FORMAT('               g/m2.D     g/m2.d',
     &'     g/m2.d     g/m2.d     g/m2.d     g/m2.d     g/m2.d',
     &'     g/m2.d     g/m2.d     g/m2.d     g/m2.d     g/m2.d   ',
     &'       %  avgprob/d uMOL-CO2/M2.S KgC/M2.D',
     &'   KgC/M2.D      KM^2')
7112  FORMAT(' YEAR END POOLS, AVERAGE ANNUAL NPP, & MAX ANNUAL LAI',
     &' FOR 9 PFTs')
7113  FORMAT(' POOLS (Kg C/M2), NPP (gC/M2), LAI (M2/M2), LFSTATUSROW',
     &' (-), +ve PHYSYN DAYS (DAY)')
C
      IF (CTEM1) THEN
        WRITE(711,6001) TITLE1,TITLE2,TITLE3,TITLE4,TITLE5,TITLE6
        WRITE(711,6002) NAME1,NAME2,NAME3,NAME4,NAME5,NAME6
        WRITE(711,6003) PLACE1,PLACE2,PLACE3,PLACE4,PLACE5,PLACE6
        WRITE(711,7020)
        WRITE(711,7030)
      ENDIF
C
      IF (CTEM2) THEN
        WRITE(721,6001) TITLE1,TITLE2,TITLE3,TITLE4,TITLE5,TITLE6
        WRITE(721,6002) NAME1,NAME2,NAME3,NAME4,NAME5,NAME6
        WRITE(721,6003) PLACE1,PLACE2,PLACE3,PLACE4,PLACE5,PLACE6
        WRITE(721,7020)
        WRITE(721,7040)
C
        WRITE(731,6001) TITLE1,TITLE2,TITLE3,TITLE4,TITLE5,TITLE6
        WRITE(731,6002) NAME1,NAME2,NAME3,NAME4,NAME5,NAME6
        WRITE(731,6003) PLACE1,PLACE2,PLACE3,PLACE4,PLACE5,PLACE6
        WRITE(731,7020)
        WRITE(731,7050)
C
        WRITE(741,6001) TITLE1,TITLE2,TITLE3,TITLE4,TITLE5,TITLE6
        WRITE(741,6002) NAME1,NAME2,NAME3,NAME4,NAME5,NAME6
        WRITE(741,6003) PLACE1,PLACE2,PLACE3,PLACE4,PLACE5,PLACE6
        WRITE(741,7020)
        WRITE(741,7060)
C
        WRITE(751,6001) TITLE1,TITLE2,TITLE3,TITLE4,TITLE5,TITLE6
        WRITE(751,6002) NAME1,NAME2,NAME3,NAME4,NAME5,NAME6
        WRITE(751,6003) PLACE1,PLACE2,PLACE3,PLACE4,PLACE5,PLACE6
        WRITE(751,7020)
        WRITE(751,7070)
C
        IF (COMPETE .OR. LNDUSEON) THEN
         WRITE(761,6001) TITLE1,TITLE2,TITLE3,TITLE4,TITLE5,TITLE6
         WRITE(761,6002) NAME1,NAME2,NAME3,NAME4,NAME5,NAME6
         WRITE(761,6003) PLACE1,PLACE2,PLACE3,PLACE4,PLACE5,PLACE6
         WRITE(761,7020)
         WRITE(761,7075)
        ENDIF
C
        WRITE(781,6001) TITLE1,TITLE2,TITLE3,TITLE4,TITLE5,TITLE6
        WRITE(781,6002) NAME1,NAME2,NAME3,NAME4,NAME5,NAME6
        WRITE(781,6003) PLACE1,PLACE2,PLACE3,PLACE4,PLACE5,PLACE6
        WRITE(781,7020)
        WRITE(781,7110)
        WRITE(781,7111)
      ENDIF !CTEM2
C
      ENDIF !IF NOT PARALLELRUN
 
C     MONTHLY & YEARLY OUTPUT FOR BOTH PARALLEL MODE AND STAND ALONE MODE
      WRITE(81,6001) TITLE1,TITLE2,TITLE3,TITLE4,TITLE5,TITLE6
      WRITE(81,6002) NAME1,NAME2,NAME3,NAME4,NAME5,NAME6
      WRITE(81,6003) PLACE1,PLACE2,PLACE3,PLACE4,PLACE5,PLACE6
      WRITE(81,6021) 
      WRITE(81,6121)
C
      WRITE(82,6001) TITLE1,TITLE2,TITLE3,TITLE4,TITLE5,TITLE6
      WRITE(82,6002) NAME1,NAME2,NAME3,NAME4,NAME5,NAME6
      WRITE(82,6003) PLACE1,PLACE2,PLACE3,PLACE4,PLACE5,PLACE6
      WRITE(82,6022)
      WRITE(82,6122)
C
      WRITE(83,6001) TITLE1,TITLE2,TITLE3,TITLE4,TITLE5,TITLE6
      WRITE(83,6002) NAME1,NAME2,NAME3,NAME4,NAME5,NAME6
      WRITE(83,6003) PLACE1,PLACE2,PLACE3,PLACE4,PLACE5,PLACE6
      WRITE(83,6023)
      WRITE(83,6123)
C
      IF (CTEM2) THEN 
        WRITE(84,6001) TITLE1,TITLE2,TITLE3,TITLE4,TITLE5,TITLE6
        WRITE(84,6002) NAME1,NAME2,NAME3,NAME4,NAME5,NAME6
        WRITE(84,6003) PLACE1,PLACE2,PLACE3,PLACE4,PLACE5,PLACE6
        WRITE(84,6024)
        WRITE(84,6124)
        WRITE(84,6224)
C
        WRITE(85,6001) TITLE1,TITLE2,TITLE3,TITLE4,TITLE5,TITLE6
        WRITE(85,6002) NAME1,NAME2,NAME3,NAME4,NAME5,NAME6
        WRITE(85,6003) PLACE1,PLACE2,PLACE3,PLACE4,PLACE5,PLACE6
        WRITE(85,6025)
        WRITE(85,6125)
        WRITE(85,6225)
C
        WRITE(86,6001) TITLE1,TITLE2,TITLE3,TITLE4,TITLE5,TITLE6
        WRITE(86,6002) NAME1,NAME2,NAME3,NAME4,NAME5,NAME6
        WRITE(86,6003) PLACE1,PLACE2,PLACE3,PLACE4,PLACE5,PLACE6
        WRITE(86,6026)
        WRITE(86,6126)
        WRITE(86,6226)
C
        WRITE(87,6001) TITLE1,TITLE2,TITLE3,TITLE4,TITLE5,TITLE6
        WRITE(87,6002) NAME1,NAME2,NAME3,NAME4,NAME5,NAME6
        WRITE(87,6003) PLACE1,PLACE2,PLACE3,PLACE4,PLACE5,PLACE6
        WRITE(87,6027)
        WRITE(87,6127)
        WRITE(87,6227)
C
        IF (COMPETE .OR. LNDUSEON) THEN
          WRITE(88,6001) TITLE1,TITLE2,TITLE3,TITLE4,TITLE5,TITLE6
          WRITE(88,6002) NAME1,NAME2,NAME3,NAME4,NAME5,NAME6
          WRITE(88,6003) PLACE1,PLACE2,PLACE3,PLACE4,PLACE5,PLACE6
          WRITE(88,6028)
          WRITE(88,6128)
          WRITE(88,6228)
C
          WRITE(89,6001) TITLE1,TITLE2,TITLE3,TITLE4,TITLE5,TITLE6
          WRITE(89,6002) NAME1,NAME2,NAME3,NAME4,NAME5,NAME6
          WRITE(89,6003) PLACE1,PLACE2,PLACE3,PLACE4,PLACE5,PLACE6
          WRITE(89,6029)
          WRITE(89,6129)
          WRITE(89,6229)
        ENDIF !COMPETE
C
      ENDIF !CTEM2
C
6021  FORMAT(2X,'MONTH YEAR  SW     LW      QH      QE    SNOACC    ',  
     &        'WSNOACC    ROFACC      PCP      EVAP       TAIR')
6121  FORMAT(2X,'           W/m2    W/m2    W/m2    W/m2    kg/m2   ',
     &        'kg/m2      mm.mon    mm.mon    mm.mon      degC') 
6022  FORMAT(2X,'MONTH  YEAR  TG1  THL1  THI1     TG2  THL2  THI2',
     &      '     TG3  THL3  THI3')
6122  FORMAT(2X,'             deg  m3/m3  m3/m3   deg  m3/m3  ',
     &      'm3/m3   deg  m3/m3  m3/m3')
6023  FORMAT(2X,'YEAR   SW     LW      QH      QE     ROFACC   ',
     &     ' PCP     EVAP  ')
6123  FORMAT(2X,'      W/m2   W/m2    W/m2    W/m2    mm.yr    ',
     &     'mm.yr    mm.yr')
6024  FORMAT('CANADIAN TERRESTRIAL ECOSYSTEM MODEL (CTEM) MONTHLY ',
     &'RESULTS')
6124  FORMAT('  MONTH  YEAR  LAIMAXG  VGBIOMAS  LITTER    SOIL C  ', 
     &'  NPP       GPP        NEP       NBP    HETRES',
     &'   AUTORES    LITRES   SOILRES')
6224  FORMAT('                 m2/m2  Kg C/m2  Kg C/m2   Kg C/m2  ',
     &       'gC/m2.mon  gC/m2.mon  gC/m2.mon  g/m2.mon   g/m2.mon ',
     &       'gC/m2.mon  gC/m2.mon  gC/m2.mon')   
6025  FORMAT('CANADIAN TERRESTRIAL ECOSYSTEM MODEL (CTEM) MONTHLY ',
     &'RESULTS FOR DISTURBANCES')
6125  FORMAT('  MONTH  YEAR  CO2',
     &'        CO        CH4      NMHC       H2       NOX       N2O',
     &'       PM25       TPM        TC        OC        BC  ',
     &' PROBFIRE  LUC_CO2_E  LUC_LTRIN  LUC_SOCIN   BURNFRAC')
6225  FORMAT('            g/m2.mon  g/m2.mon',
     &'  g/m2.mon  g/m2.mon  g/m2.mon  g/m2.mon  g/m2.mon',
     &'  g/m2.mon  g/m2.mon  g/m2.mon  g/m2.mon  g/m2.mon',
     &'  prod/mon    g C/m2    g C/m2    g C/m2         %')  
6026  FORMAT('CANADIAN TERRESTRIAL ECOSYSTEM MODEL (CTEM) YEARLY ',
     &'RESULTS')
6126  FORMAT('  YEAR   LAIMAXG  VGBIOMAS  STEMMASS  ROOTMASS  LITRMASS', 
     &'  SOILCMAS  TOTCMASS  ANNUALNPP ANNUALGPP ANNUALNEP ANNUALNBP',
     &' ANNHETRSP ANAUTORSP ANNLITRES ANSOILRES')
6226  FORMAT('          m2/m2   Kg C/m2   Kg C/m2   Kg C/m2    Kg C/m2',
     &'  Kg C/m2   Kg C/m2   gC/m2.yr  gC/m2.yr  gC/m2.yr  gC/m2.yr',
     &'  gC/m2.yr  gC/m2.yr  gC/m2.yr  gC/m2.yr')
6027  FORMAT('CANADIAN TERRESTRIAL ECOSYSTEM MODEL (CTEM) YEARLY ',
     &'RESULTS FOR DISTURBANCES')

6127  FORMAT('  YEAR   ANNUALCO2',
     &'  ANNUALCO  ANNUALCH4  ANN_NMHC ANNUAL_H2 ANNUALNOX ANNUALN2O',
     &'  ANN_PM25  ANNUALTPM ANNUAL_TC ANNUAL_OC ANNUAL_BC APROBFIRE',
     &' ANNLUCCO2  ANNLUCLTR ANNLUCSOC ABURNFRAC')
6227  FORMAT('         gC/m2.yr',
     &'  gC/m2.yr  gC/m2.yr  gC/m2.yr  gC/m2.yr  gC/m2.yr  gC/m2.yr',
     &'  gC/m2.yr  gC/m2.yr  gC/m2.yr  gC/m2.yr  gC/m2.yr  avgprob/d ',
     &'  gC/m2.yr  gC/m2.yr  gC/m2.yr    %     ')

6028  FORMAT('CANADIAN TERRESTRIAL ECOSYSTEM MODEL (CTEM) MONTHLY ',
     &'RESULTS')
6128  FORMAT(' MONTH YEAR  FRAC #1   FRAC #2   FRAC #3   FRAC #4   ',
     &'FRAC #5   FRAC #6   FRAC #7   FRAC #8   FRAC #9   FRAC #10   ',
     &'SUMCHECK') 
6228  FORMAT('             %         %         %         %         ',
     &'%         %         %         %         %         %          ',
     &'     ')   
6029  FORMAT('CANADIAN TERRESTRIAL ECOSYSTEM MODEL (CTEM) YEARLY ',
     &'RESULTS')
6129  FORMAT('  YEAR   FRAC #1   FRAC #2   FRAC #3   FRAC #4   ',
     &'FRAC #5   FRAC #6   FRAC #7   FRAC #8   FRAC #9   FRAC #10   ',
     &'SUMCHECK ')
6229  FORMAT('         %         %         %         %         ',
     &'%         %         %         %         %         %          ',
     &'     ') 
C
C     CTEM FILE TITLES DONE
C======================= CTEM ========================================== /
C
C=======================================================================

C     BEGIN READ IN OF THE .INI FILE
      
      READ(50,5020) DEGLAT,DEGLON,ZRFMGRD(1),ZRFHGRD(1),ZBLDGRD(1),
     1              GCGRD(1),NLTEST,NMTEST

      JLAT=NINT(DEGLAT)
      RADJGRD(1)=DEGLAT*PI/180.
      DLONGRD(1)=DEGLON
      Z0ORGRD(1)=0.0
      GGEOGRD(1)=0.0
C     GGEOGRD(1)=-0.035

      DO 50 I=1,NLTEST
      DO 50 M=1,NMTEST
          READ(50,5040) (FCANROW(I,M,J),J=1,ICAN+1),(PAMXROW(I,M,J),
     1                  J=1,ICAN)
          READ(50,5040) (LNZ0ROW(I,M,J),J=1,ICAN+1),(PAMNROW(I,M,J),
     1                  J=1,ICAN)
          READ(50,5040) (ALVCROW(I,M,J),J=1,ICAN+1),(CMASROW(I,M,J),
     1                  J=1,ICAN)
          READ(50,5040) (ALICROW(I,M,J),J=1,ICAN+1),(ROOTROW(I,M,J),
     1                  J=1,ICAN)
          READ(50,5030) (RSMNROW(I,M,J),J=1,ICAN),
     1                  (QA50ROW(I,M,J),J=1,ICAN)
          READ(50,5030) (VPDAROW(I,M,J),J=1,ICAN),
     1                  (VPDBROW(I,M,J),J=1,ICAN)
          READ(50,5030) (PSGAROW(I,M,J),J=1,ICAN),
     1                  (PSGBROW(I,M,J),J=1,ICAN)
          READ(50,5040) DRNROW(I,M),SDEPROW(I,M),FAREROW(I,M)
          READ(50,5090) XSLPROW(I,M),GRKFROW(I,M),WFSFROW(I,M),
     1                  WFCIROW(I,M),MIDROW(I,M)
          READ(50,5080) (SANDROW(I,M,J),J=1,3)
          READ(50,5080) (CLAYROW(I,M,J),J=1,3)
          READ(50,5080) (ORGMROW(I,M,J),J=1,3)
          READ(50,5050) (TBARROW(I,M,J),J=1,3),TCANROW(I,M),
     1                  TSNOROW(I,M),TPNDROW(I,M)
          READ(50,5060) (THLQROW(I,M,J),J=1,3),(THICROW(I,M,J),
     1                  J=1,3),ZPNDROW(I,M)
          READ(50,5070) RCANROW(I,M),SCANROW(I,M),SNOROW(I,M),
     1                  ALBSROW(I,M),RHOSROW(I,M),GROROW(I,M)
50    CONTINUE
C
      DO 25 J=1,IGND                     
          READ(50,5002) DELZ(J),ZBOT(J)  
 25   CONTINUE                            
 5002 FORMAT(2X,2F8.2)                   
C
C======================= CTEM ========================================== \

C     THE OUTPUT YEAR RANGES CAN BE READ IN FROM THE JOB OPTIONS FILE OR NOT.
C     IF THE VALUES SHOULD BE READ IN FROM THE .INI FILE, AND NOT
C     FROM THE JOB OPTIONS FILE, THE JOB OPTIONS FILE VALUES ARE SET TO 
C     -9999 THUS TRIGGERING THE READ IN OF THE .INI FILE VALUES BELOW          
      IF (JHHSTD .EQ. -9999) THEN
        READ(50,5200) JHHSTD,JHHENDD,JDSTD,JDENDD
       READ(50,5200) JHHSTY,JHHENDY,JDSTY,JDENDY
      END IF
C======================= CTEM ========================================== /

      JHHST=JHHSTY*1000+JHHSTD
      JHHEND=JHHENDY*1000+JHHENDD
      JDST=JDSTY*1000+JDSTD
      JDEND=JDENDY*1000+JDENDD

      CLOSE(50)
C
C====================== CTEM =========================================== \
C
C     READ FROM CTEM INITIALIZATION FILE (.CTM)
C
      IF (CTEM1) THEN
      DO 71 I=1,NLTEST
      DO 72 M=1,NMTEST
C
C         FOLLOWING THREE VARIABLES ARE NEEDED TO RUN CTEM EVEN WITH ONLY
C         CTEM1 OPTION ON. MIN & MAX LEAF AREA INDEX ARE NEEDED TO BREAK
C         CLASS LAI INTO DCD AND EVG FOR TREES (FOR CROPS AND GRASSES IT
C         DOESN'T MATTER MUCH).
C
C         DVDFCANROW IS NEEDED TO DIVIDE NEEDLE & BROAD LEAF INTO DCD AND EVG,
C         AND CROPS & GRASSES INTO C3 AND C4 FRACTIONS. REST OF THE VARIABLES
C         CAN BE SET TO ZERO IF ONLY CTEM1 IS ON.
C
          READ(70,*) (AILCMINROW(I,M,J),J=1,ICC)
          READ(70,*) (AILCMAXROW(I,M,J),J=1,ICC)
          READ(70,*) (DVDFCANROW(I,M,J),J=1,ICC)
C
C         REST OF THE INITIALIZATION VARIABLES ARE NEEDED TO RUN CTEM
C         WITH THE CTEM2 OPTION ON AS WELL. IF STARTING FROM BARE GROUND
C         INITIALIZE ALL LIVE AND DEAD C POOLS FROM ZERO. SUITABLE VALUES
C         OF EXTNPROBGRD AND PRBFRHUCGRD WOULD STILL BE REQUIRED. SET STDALNGRD TO
C         1 FOR OPERATION IN NON-GCM STAND ALONE MODE, IN THE CTEM
C         INITIALIZATION FILE.
C
          READ(70,*) (GLEAFMASROW(I,M,J),J=1,ICC)
          READ(70,*) (BLEAFMASROW(I,M,J),J=1,ICC)
          READ(70,*) (STEMMASSROW(I,M,J),J=1,ICC)
          READ(70,*) (ROOTMASSROW(I,M,J),J=1,ICC)
          READ(70,*) (LITRMASSROW(I,M,J),J=1,ICCP1)
          READ(70,*) (SOILCMASROW(I,M,J),J=1,ICCP1)
          READ(70,*) (LFSTATUSROW(I,M,J),J=1,ICC)
          READ(70,*) (PANDAYSROW(I,M,J),J=1,ICC)

72      CONTINUE

         READ(70,*) (MLIGHTNGGRD(I,J),J=1,6)  !MEAN MONTHLY LIGHTNING FREQUENCY
         READ(70,*) (MLIGHTNGGRD(I,J),J=7,12) !FLASHES/KM2.YEAR
         READ(70,*) EXTNPROBGRD(I)
         READ(70,*) PRBFRHUCGRD(I)
         READ(70,*) STDALNGRD(I)

71    CONTINUE
      CLOSE(70)
      ENDIF

C     DETERMINE FROM THE INPUTS JUST READ IN IF THIS RUN IS IN MOSAIC OR 
C     COMPOSITE MODE. IF THE MODEL IS TO BE RUN IN COMPOSITE MODE, EACH
C     GRID CELL WILL HAVE ONLY 1 TILE. CONVERSELY MORE THAN 1 TILE INDICATES
C     A MOSAIC RUN. 
      IF (NMTEST .GT. 1) THEN
        MOSAIC = .TRUE.
      ELSE
        MOSAIC = .FALSE.  !COMPOSITE SIMULATION
      ENDIF

C     CHECK THAT A COMPETITION OR LUC RUN HAS THE CORRECT NUMBER OF MOSAICS
C     IF IT IS NOT A START_BARE RUN, THEN NMTEST SHOULD EQUAL NMOS
      IF (MOSAIC .AND. (COMPETE .OR. LNDUSEON) 
     &                 .AND. .NOT. START_BARE) THEN
        IF (NMTEST .NE. NMOS) THEN
           WRITE(6,*)'COMPETE OR LUC RUNS THAT DO NOT START FROM BARE'
           WRITE(6,*)'GROUND NEED THE NUMBER OF MOSAICS TO EQUAL ICC+1'
           WRITE(6,*)'NMTEST = ',NMTEST,' NMOS = ',NMOS
            CALL XIT('RUNCLASS36CTEM', -2)
        ENDIF
      ENDIF

C
C     IF THIS RUN USES THE COMPETITION OR LNDUSEON PARAMETERIZATION AND
C     STARTS FROM BARE GROUND, SET UP THE MODEL STATE HERE. THIS 
C     OVERWRITES WHAT WAS READ IN FROM THE .INI AND .CTM FILES. 
C     FOR COMPOSITE RUNS, THE SET UP IS AFTER THIS ONE FOR MOSAICS
      IF ((COMPETE .OR. LNDUSEON) .AND. START_BARE .AND. MOSAIC) THEN 

C      CHECK THE NUMBER OF MOSAICS THAT CAME FROM THE .INI FILE
       IF (NMTEST .NE. NMOS) THEN

C       WE NEED TO TRANSFER SOME INITIAL PARAMETERIZATION INFO TO ALL
C       MOSAICS, SO SET ALL VALUES TO THAT OF THE FIRST MOSAIC.
        DO I=1,NLTEST
         DO M=NMTEST+1,NMOS
C
          DO J=1,ICAN
            RSMNROW(I,M,J)=RSMNROW(I,1,J)
            QA50ROW(I,M,J)=QA50ROW(I,1,J)
            VPDAROW(I,M,J)=VPDAROW(I,1,J)
            VPDBROW(I,M,J)=VPDBROW(I,1,J)
            PSGAROW(I,M,J)=PSGAROW(I,1,J)
            PSGBROW(I,M,J)=PSGBROW(I,1,J)
          ENDDO
C
          DRNROW(I,M)=DRNROW(I,1)
          SDEPROW(I,M)=SDEPROW(I,1)
          FAREROW(I,M)=FAREROW(I,1)
          XSLPROW(I,M)=XSLPROW(I,1)
          GRKFROW(I,M)=GRKFROW(I,1)
          WFSFROW(I,M)=WFSFROW(I,1)
          WFCIROW(I,M)=WFCIROW(I,1)
          MIDROW(I,M)=MIDROW(I,1)
C
          DO J=1,3
            SANDROW(I,M,J)=SANDROW(I,1,J)
            CLAYROW(I,M,J)=CLAYROW(I,1,J)
            ORGMROW(I,M,J)=ORGMROW(I,1,J)
            TBARROW(I,M,J)=TBARROW(I,1,J)
            THLQROW(I,M,J)=THLQROW(I,1,J)
            THICROW(I,M,J)=THICROW(I,1,J)
          ENDDO
C
          TCANROW(I,M)=TCANROW(I,1)
          TSNOROW(I,M)=TSNOROW(I,1)
          TPNDROW(I,M)=TPNDROW(I,1)
          ZPNDROW(I,M)=ZPNDROW(I,1)
          RCANROW(I,M)=RCANROW(I,1)
          SCANROW(I,M)=SCANROW(I,1)
          SNOROW(I,M)=SNOROW(I,1)
          ALBSROW(I,M)=ALBSROW(I,1)
          RHOSROW(I,M)=RHOSROW(I,1)
          GROROW(I,M)=GROROW(I,1)
          DO J=1,ICC
            LFSTATUSROW(I,M,J) = 4
          ENDDO !J
C
         ENDDO !M
        ENDDO !I

C      SET THE NUMBER OF MOSAICS TO ICC+1        
       NMTEST=NMOS

       ENDIF  !IF (NMTEST .NE. NMOS)
C
C      SET THE INITIAL CONDITIONS FOR THE PFTS
C      (BAH, THIS IS SUCH AN INELEGANT WAY TO DO THIS, BUT OH WELL...)
C
C      INITALIZE TO ZERO
       FCANROW=0.0
       DVDFCANROW=0.0
       FAREROW=0.0

       DO I=1,NLTEST
        DO M=1,NMTEST
C
C        SET THE SEED AMOUNT FOR EACH PFT IN ITS MOSAIC
         IF (COMPETE .OR. LNDUSEON) THEN
           IF (M .LT. ICC+1) THEN
            FAREROW(I,M)=0.001
           ELSE
            FAREROW(I,M)=1.0 - (REAL(ICC) * 0.001)
           ENDIF
         ENDIF

         DO J = 1,ICC
           AILCMINROW(I,M,J)=0.0
           AILCMAXROW(I,M,J)=0.0
           GLEAFMASROW(I,M,J)=0.0
           BLEAFMASROW(I,M,J)=0.0
           STEMMASSROW(I,M,J)=0.0
           ROOTMASSROW(I,M,J)=0.0
           LFSTATUSROW(I,M,J)=4
           PANDAYSROW(I,M,J)=0
         ENDDO

         LFSTATUSROW(I,M,1)=2

         DO J = 1,ICCP1
           LITRMASSROW(I,M,J)=0. 
           SOILCMASROW(I,M,J)=0. 
         ENDDO


C        INITIAL CONDITIONS ALWAYS REQUIRED
         DVDFCANROW(I,M,1)=1.0  !NDL
         DVDFCANROW(I,M,3)=1.0  !BDL
         DVDFCANROW(I,M,6)=1.0  !CROP
         DVDFCANROW(I,M,8)=1.0  !GRASSES

C        THEN ADJUSTED BELOW FOR THE ACTUAL MOSAIC MAKEUP
         IF (M .LE. 2) THEN                     !NDL
          FCANROW(I,M,1)=1.0
          IF (M .EQ. 2) THEN
            DVDFCANROW(I,M,1)=0.0
            DVDFCANROW(I,M,2)=1.0        
          ENDIF
         ELSEIF (M .GE. 3 .AND. M .LE. 5) THEN  !BDL
          FCANROW(I,M,2)=1.0
          IF (M .EQ. 4) THEN
            DVDFCANROW(I,M,3)=0.0
            DVDFCANROW(I,M,4)=1.0        
          ENDIF
          IF (M .EQ. 5) THEN
            DVDFCANROW(I,M,3)=0.0
            DVDFCANROW(I,M,5)=1.0        
          ENDIF
         ELSEIF (M .EQ. 6 .OR. M .EQ. 7) THEN  !CROP
          FCANROW(I,M,3)=1.0
          IF (M .EQ. 7) THEN
            DVDFCANROW(I,M,6)=0.0
            DVDFCANROW(I,M,7)=1.0        
          ENDIF
         ELSEIF (M .EQ. 8 .OR. M .EQ. 9) THEN  !GRASSES
          FCANROW(I,M,4)=1.0
          IF (M .EQ. 9) THEN
            DVDFCANROW(I,M,8)=0.0
            DVDFCANROW(I,M,9)=1.0        
          ENDIF
         ELSE                                  !BARE 
          FCANROW(I,M,5)=1.0
         ENDIF !MOSAIC ADJUSTMENTS
        ENDDO  !M
       ENDDO  !I

      ELSE IF ((COMPETE .OR. LNDUSEON) .AND. START_BARE 
     1         .AND. .NOT. MOSAIC) THEN  !SET UP FOR COMPOSITE RUNS

C      INITALIZE TO ZERO, THESE WILL BE FILLED IN BY THE LUC OR 
C      COMPETITION SUBROUTINES.
       FCANROW=0.0
       DVDFCANROW=0.0

       DO I=1,NLTEST

C      INITIAL CONDITIONS ALWAYS REQUIRED
         DVDFCANROW(I,1,1)=1.0  !NDL
         DVDFCANROW(I,1,3)=1.0  !BDL
         DVDFCANROW(I,1,6)=1.0  !CROP
         DVDFCANROW(I,1,8)=1.0  !GRASSES

         DO J = 1,ICC
           AILCMINROW(I,1,J)=0.0
           AILCMAXROW(I,1,J)=0.0
           GLEAFMASROW(I,1,J)=0.0
           BLEAFMASROW(I,1,J)=0.0
           STEMMASSROW(I,1,J)=0.0
           ROOTMASSROW(I,1,J)=0.0
           LFSTATUSROW(I,1,J)=4
           PANDAYSROW(I,1,J)=0
         ENDDO

         LFSTATUSROW(I,1,1)=2

         DO J = 1,ICCP1
           LITRMASSROW(I,1,J)=0. 
           SOILCMASROW(I,1,J)=0. 
         ENDDO
       ENDDO !NLTEST

      END IF !IF (COMPETE/LANDUSEON .AND. START_BARE) 
C===================== CTEM =============================================== /
C
      DO 100 I=1,NLTEST
      DO 100 M=1,NMTEST
          TBARROW(I,M,1)=TBARROW(I,M,1)+TFREZ
          TBARROW(I,M,2)=TBARROW(I,M,2)+TFREZ
          TBARROW(I,M,3)=TBARROW(I,M,3)+TFREZ
          TSNOROW(I,M)=TSNOROW(I,M)+TFREZ
          TCANROW(I,M)=TCANROW(I,M)+TFREZ
          TPNDROW(I,M)=TPNDROW(I,M)+TFREZ
          TBASROW(I,M)=TBARROW(I,M,3)
          CMAIROW(I,M)=0.
          WSNOROW(I,M)=0.
          ZSNLROW(I,M)=0.10

C         THIS FIX BELOW IS TO CORRECT A BUG THAT CAUSES A CRASH DUE
C         TO UNREASONABLE CANOPY TEMPERATURES IN THE FIRST YEAR OF A RESTART
C         WITH SNOW ON THE GROUND. NOTE: RUNCLASS.f HAS THIS SAME PROBLEM. JM JAN 2013
          IF (SNOROW(I,M) .GT. 0.) THEN !THERE IS SNOW ON THE GROUND
           TSFSROW(I,M,1)=TBARROW(I,M,1)
           TSFSROW(I,M,2)=TBARROW(I,M,1)
          ELSE ! NO SNOW SO JUST SET THESE TO FREEZING POINT
           TSFSROW(I,M,1)=TFREZ  
           TSFSROW(I,M,2)=TFREZ
          ENDIF

          TSFSROW(I,M,3)=TBARROW(I,M,1)
          TSFSROW(I,M,4)=TBARROW(I,M,1)
          TACROW (I,M)=TCANROW(I,M)
          QACROW (I,M)=0.5E-2

          IF(IGND.GT.3)                                 THEN
              DO 65 J=4,IGND,-1
                  TBARROW(I,M,J)=TBARROW(I,M,3)
                  IF(SDEPROW(I,M).LT.(ZBOT(J-1)+0.001) .AND.
     1                  SANDROW(I,M,3).GT.-2.5)     THEN
                      SANDROW(I,M,J)=-3.0
                      CLAYROW(I,M,J)=-3.0
                      ORGMROW(I,M,J)=-3.0
                      THLQROW(I,M,J)=0.0
                      THICROW(I,M,J)=0.0
                  ELSE
                      SANDROW(I,M,J)=SANDROW(I,M,3)
                      CLAYROW(I,M,J)=CLAYROW(I,M,3)
                      ORGMROW(I,M,J)=ORGMROW(I,M,3)
                      THLQROW(I,M,J)=THLQROW(I,M,3)
                      THICROW(I,M,J)=THICROW(I,M,3)
                  ENDIF
65            CONTINUE
          ENDIF

          DO 75 K=1,6
          DO 75 L=1,50
              ITCTROW(I,M,K,L)=0
75        CONTINUE
100   CONTINUE
      
      DO 150 I=1,NLTEST
          PREACC(I)=0.
          GTACC(I)=0.
          QEVPACC(I)=0.
          EVAPACC(I)=0.
          HFSACC(I)=0.
          HMFNACC(I)=0.
          ROFACC(I)=0.
          OVRACC(I)=0.
          WTBLACC(I)=0.
          ALVSACC(I)=0.
          ALIRACC(I)=0.
          RHOSACC(I)=0.
          SNOACC(I)=0.
          WSNOACC(I)=0.
          CANARE(I)=0.
          SNOARE(I)=0.
          TSNOACC(I)=0.
          TCANACC(I)=0.
          RCANACC(I)=0.
          SCANACC(I)=0.
          GROACC(I)=0.
          FSINACC(I)=0.
          FLINACC(I)=0.
          FLUTACC(I)=0.
          TAACC(I)=0.
          UVACC(I)=0.
          PRESACC(I)=0.
          QAACC(I)=0.
          DO 125 J=1,IGND
              TBARACC(I,J)=0.
              THLQACC(I,J)=0.
              THICACC(I,J)=0.
              THALACC(I,J)=0.
125       CONTINUE
150   CONTINUE
C
C===================== CTEM =============================================== \
C
C     INITIALIZE ACCUMULATED ARRAY FOR MONTHLY & YEARLY OUTPUT FOR CLASS 
C
      DO 151 I=1,NLTEST
          ALVSACC_MN(I)=0.
          ALIRACC_MN(I)=0. 
          FLUTACC_MN(I)=0.
          FSINACC_MN(I)=0.
          FLINACC_MN(I)=0.
          HFSACC_MN(I) =0.
          QEVPACC_MN(I)=0.
          SNOACC_MN(I) =0.
          WSNOACC_MN(I)=0.
          ROFACC_MN(I) =0.
          PREACC_MN(I) =0.
          EVAPACC_MN(I)=0.
          TAACC_MN(I)=0.
          DO 152 J=1,IGND
              TBARACC_MN(I,J)=0.
              THLQACC_MN(I,J)=0.
              THICACC_MN(I,J)=0.
152       CONTINUE  
C
          ALVSACC_YR(I)=0.
          ALIRACC_YR(I)=0. 
          FLUTACC_YR(I)=0.
          FSINACC_YR(I)=0.
          FLINACC_YR(I)=0.
          HFSACC_YR(I) =0.
          QEVPACC_YR(I)=0.
          ROFACC_YR(I) =0.
          PREACC_YR(I) =0.
          EVAPACC_YR(I)=0.
          TAACC_YR(I)=0.
C       
151   CONTINUE
C===================== CTEM =============================================== /

      CALL CLASSB(THPROW,THRROW,THMROW,BIROW,PSISROW,GRKSROW,
     1            THRAROW,HCPSROW,TCSROW,THFCROW,PSIWROW,
     2            DLZWROW,ZBTWROW,ALGWROW,ALGDROW,
     3            SANDROW,CLAYROW,ORGMROW,DELZ,ZBOT,
     4            SDEPROW,ISNDROW,IGDRROW,
     5            NLAT,NMOS,1,NLTEST,NMTEST,IGND,ICTEMMOD)

5010  FORMAT(2X,6A4)
5020  FORMAT(5F10.2,F7.1,3I5)
5030  FORMAT(4F8.3,8X,4F8.3)
5040  FORMAT(9F8.3)
5050  FORMAT(6F10.2)
5060  FORMAT(7F10.3)
5070  FORMAT(2F10.4,F10.2,F10.3,F10.4,F10.3)
5080  FORMAT(3F10.1)
5090  FORMAT(4E8.1,I8)
5200  FORMAT(4I10)
5300  FORMAT(1X,I2,I3,I5,I6,2F9.2,E14.4,F9.2,E12.3,F8.2,F12.2,3F9.2,
     1       F9.4)
5301  FORMAT(I4,F10.4)
6001  FORMAT('CLASS TEST RUN:     ',6A4)
6002  FORMAT('RESEARCHER:         ',6A4)
6003  FORMAT('INSTITUTION:        ',6A4)
C
C===================== CTEM =============================================== \
C
C     CTEM INITIALIZATIONS.
C
      IF (CTEM1) THEN
C
C     CALCULATE NUMBER OF LEVEL 2 PFTs USING MODELPFT
C
      DO 101 J = 1, ICAN
        ISUMC = 0
        K1C = (J-1)*L2MAX + 1
        K2C = K1C + (L2MAX - 1)
        DO N = K1C, K2C
          IF(MODELPFT(N).EQ.1) ISUMC = ISUMC + 1
        ENDDO
        NOL2PFTS(J)=ISUMC  ! NUMBER OF LEVEL 2 PFTs
101   CONTINUE
C
      DO 110 I=1,NLTEST
       DO 110 M=1,NMTEST
        DO 111 J = 1, ICC
          CO2I1CSROW(I,M,J)=0.0     !INTERCELLULAR CO2 CONCENTRATIONS
          CO2I1CGROW(I,M,J)=0.0
          CO2I2CSROW(I,M,J)=0.0
          CO2I2CGROW(I,M,J)=0.0
          SLAIROW(I,M,J)=0.0        !IF BIO2STR IS NOT CALLED WE NEED TO INITIALIZE THIS TO ZERO
111     CONTINUE
110   CONTINUE
C
      DO 123 I =1, ILG
         FSNOWACC_M(I)=0.0         !DAILY ACCU. FRACTION OF SNOW
         TCANSACC_M(I)=0.0         !DAILY ACCU. CANOPY TEMP. OVER SNOW
         TAACCGAT_M(I)=0.0            
C
         DO 128 J = 1, ICC
           ANCSVGAC_M(I,J)=0.0    !DAILY ACCU. NET PHOTOSYN. FOR CANOPY OVER SNOW SUBAREA
           ANCGVGAC_M(I,J)=0.0    !DAILY ACCU. NET PHOTOSYN. FOR CANOPY OVER GROUND SUBAREA
           RMLCSVGA_M(I,J)=0.0    !DAILY ACCU. LEAF RESPIRATION FOR CANOPY OVER SNOW SUBAREA
           RMLCGVGA_M(I,J)=0.0    !DAILY ACCU. LEAF RESPIRATION FOR CANOPY OVER GROUND SUBAREA
           TODFRAC(I,J)=0.0       
128      CONTINUE
C
         DO 112 J = 1,IGND       !SOIL TEMPERATURE AND MOISTURE OVER DIFFERENT SUBAREAS
            TBARCACC_M (I,J)=0.0
            TBARCSACC_M(I,J)=0.0
            TBARGACC_M (I,J)=0.0
            TBARGSACC_M(I,J)=0.0
            THLIQCACC_M(I,J)=0.0
            THLIQGACC_M(I,J)=0.0
            THICECACC_M(I,J)=0.0
112      CONTINUE
123    CONTINUE
C
C     FIND FCANCMX WITH CLASS' FCANMXs AND DVDFCANs READ FROM CTEM's 
C     INITIALIZATION FILE. THIS IS TO DIVIDE NEEDLE LEAF AND BROAD LEAF 
C     INTO DCD AND EVG, AND CROPS AND GRASSES INTO C3 AND C4.
C
      DO 113 J = 1, ICAN
        DO 114 I=1,NLTEST
        DO 114 M=1,NMTEST 
C
          K1C = (J-1)*L2MAX + 1
          K2C = K1C + (L2MAX - 1)
C
          DO N = K1C, K2C
            IF(MODELPFT(N).EQ.1)THEN
              ICOUNTROW(I,M) = ICOUNTROW(I,M) + 1
              CSUM(I,M,J) = CSUM(I,M,J) + 
     &         DVDFCANROW(I,M,ICOUNTROW(I,M))

              FCANCMXROW(I,M,ICOUNTROW(I,M))=FCANROW(I,M,J)*
     &         DVDFCANROW(I,M,ICOUNTROW(I,M))
            ENDIF
          ENDDO
C
          IF( ABS(CSUM(I,M,J)-1.0).GT.ABSZERO ) THEN
C            WRITE(6,1130)I,J
           WRITE(6,1130)I,M,J
1130       FORMAT('DVDFCANs FOR (',I1,',',I1,',',I1,') MUST ADD TO 1.0')
            CALL XIT('RUNCLASS36CTEM', -3)
          ENDIF
C
114     CONTINUE
113   CONTINUE
C
C     ----------

C     PREPARATION WITH THE INPUT DATASETS PRIOR TO LAUNCHING RUN:

      IYEAR=-99999  ! INITIALIZATION, FORCES ENTRY TO LOOP BELOW

C     FIND THE FIRST YEAR OF MET DATA

       DO WHILE (IYEAR .LT. METCYLYRST) 
C
        DO I=1,NLTEST
          READ(51,5300) IHOUR,IMIN,IDAY,IYEAR,FSDOWN,FDLGRD(I),
     1         PREGRD(I),TAGRD(I),QAGRD(I),UVGRD(I),PRESGRD(I)
        ENDDO
       ENDDO

C      BACK UP ONE SPACE IN THE MET FILE SO IT IS READY FOR THE NEXT READIN  
       BACKSPACE(51)

C      FIND THE POPD DATA TO CYCLE OVER, POPD IS ONLY CYCLED OVER WHEN THE MET IS CYCLED.

       POPYR=-99999  ! INITIALIZATION, FORCES ENTRY TO LOOP BELOW

       IF (CYCLEMET .AND. POPDON) THEN
        DO WHILE (POPYR .LT. CYPOPYR) 
         DO I = 1, NLTEST
          READ(91,5301) POPYR,POPDIN
         ENDDO
        ENDDO 
       ENDIF
C
C     IF LAND USE CHANGE SWITCH IS ON THEN READ THE FRACTIONAL COVERAGES 
C     OF CTEM's 9 PFTs FOR THE FIRST YEAR.
C
      IF (LNDUSEON) THEN

         REACH_EOF=.FALSE.  !FLAG FOR WHEN READ TO END OF LUC INPUT FILE

         CALL INITIALIZE_LUC(NLAT,NMOS,IYEAR,ARGBUFF,NMTEST,NLTEST, 
     1                     MOSAIC,ICC,ICAN,ICP1,NOL2PFTS,CYCLEMET,   
     2                     CYLUCYR,LUCYR,FCANROW,FAREROW,NFCANCMXROW,     
     3                     PFCANCMXROW,FCANCMXROW,REACH_EOF)

         IF (REACH_EOF) GOTO 999

      ENDIF ! IF (LNDUSEON)
C
C     WITH FCANCMX CALCULATED ABOVE AND INITIALIZED VALUES OF ALL CTEM POOLS,
C     FIND MOSAIC TILE (GRID) AVERAGE VEGETATION BIOMASS, LITTER MASS, AND SOIL C MASS. 
C     ALSO INITIALIZE ADDITIONAL VARIABLES WHICH ARE USED BY CTEM.
C 
      DO 115 I = 1,NLTEST
        DO 115 M = 1,NMTEST
          VGBIOMASROW(I,M)=0.0       
          GAVGLAIROW(I,M)=0.0        
          GAVGLTMSROW(I,M)=0.0       
          GAVGSCMSROW(I,M)=0.0       
          LUCEMCOMROW(I,M)=0.0      !LAND USE CHANGE COMBUSTION EMISSION LOSSES
          LUCLTRINROW(I,M)=0.0      !LAND USE CHANGE INPUTS TO LITTER POOL
          LUCSOCINROW(I,M)=0.0      !LAND USE CHANGE INPUTS TO SOIL C POOL
          COLDDAYSROW(I,M,1)=0      !COLD DAYS COUNTER FOR NDL DCD
          COLDDAYSROW(I,M,2)=0      !COLD DAYS COUNTER FOR CROPS
          AVGYRNPP_M(I,M)=0.0       !ANNUAL AVERAGED NPP
          AVGYRGPP_M(I,M)=0.0       !ANNUAL AVERAGED GPP
          AVGYRNEP_M(I,M)=0.0       !ANNUAL AVERAGED NEP
          AVGYRNBP_M(I,M)=0.0       !ANNUAL AVERAGED NBP
          AVGYRLE_M(I,M)=0.0        !ANNUAL AVERAGED LATENT HEAT FLUX

          AVGYRE_CO2_M(I,M)=0.0     !ANNUAL AVERAGED CO2 EMISSIONS DUE TO FIRE
          AVGYRE_CO_M(I,M) =0.0     !ANNUAL AVERAGED CO EMISSIONS DUE TO FIRE
          AVGYRE_CH4_M(I,M) =0.0    !ANNUAL AVERAGED CH4 EMISSIONS DUE TO FIRE
          AVGYRE_NMHC_M(I,M) =0.0   !ANNUAL AVERAGED NON-CH4 HYDROCARBONS FIRE EMISSIONS
          AVGYRE_H2_M(I,M) =0.0     !ANNUAL AVERAGED H2 EMISSIONS DUE TO FIRE
          AVGYRE_NOX_M(I,M) =0.0    !ANNUAL AVERAGED NITROGEN OXIDES FIRE EMISSIONS
          AVGYRE_N2O_M(I,M) =0.0    !ANNUAL AVERAGED N2O EMISSIONS DUE TO FIRE
          AVGYRE_PM25_M(I,M) =0.0   !ANNUAL AVERAGED PARTICULATES BELOW 2.5 uM DUE TO FIRE
          AVGYRE_TPM_M(I,M) =0.0    !ANNUAL AVERAGED FIRE TOTAL PARTICULATE MATTER
          AVGYRE_TC_M(I,M) =0.0     !ANNUAL AVERAGED TOTAL CARBON FIRE AEROSOLS
          AVGYRE_OC_M(I,M) =0.0     !ANNUAL AVERAGED ORGANIC CARBON FIRE AEROSOLS
          AVGYRE_BC_M(I,M) =0.0     !ANNUAL AVERAGED BLACK CARBON FIRE AEROSOLS
          AVGYR_PROBFIRE_M(I,M)=0.0 !ANNUAL AVERAGED FIRE PROBABILITY
          AVGYR_LUC_EMC_M(I,M)=0.0  !ANNUAL AVERAGED LUC CO2 EMISSIONS
          AVGYR_LUCLTRIN_M(I,M)=0.0 !ANNUAL AVERAGED LUC LITTER INPUTS
          AVGYR_LUCSOCIN_M(I,M)=0.0 !ANNUAL AVERAGED LUC SOIL C INPUTS
          AVGYR_BURNFRAC_M(I,M)=0.0 !ANNUAL AVERAGED BURNED PERCENT OF GRID

          DO 116 J = 1, ICC
            VGBIOMASROW(I,M)=VGBIOMASROW(I,M)+FCANCMXROW(I,M,J)*
     &        (GLEAFMASROW(I,M,J)+STEMMASSROW(I,M,J)+
     &         ROOTMASSROW(I,M,J)+BLEAFMASROW(I,M,J))
            GAVGLTMSROW(I,M)=GAVGLTMSROW(I,M)+FCANCMXROW(I,M,J)*
     &                       LITRMASSROW(I,M,J)
            GAVGSCMSROW(I,M)=GAVGSCMSROW(I,M)+FCANCMXROW(I,M,J)*
     &         SOILCMASROW(I,M,J)
            GRWTHEFFROW(I,M,J)=100.0   !SET GROWTH EFFICIENCY TO SOME LARGE NUMBER 
C                                      !SO THAT NO GROWTH RELATED MORTALITY OCCURS IN
C                                      !FIRST YEAR
            FLHRLOSSROW(I,M,J)=0.0     !FALL/HARVEST LOSS
            STMHRLOSROW(I,M,J)=0.0     !STEM HARVEST LOSS FOR CROPS
            ROTHRLOSROW(I,M,J)=0.0     !ROOT DEATH FOR CROPS
            LYSTMMASROW(I,M,J)=STEMMASSROW(I,M,J)
            LYROTMASROW(I,M,J)=ROOTMASSROW(I,M,J)
            TYMAXLAIROW(I,M,J)=0.0
            LAIMAXGVEG_M(I,M,J)=0.0
            ANNPPVEG_M(I,M,J)=0.0
C
            ANNGPPVEG_M(I,M,J)=0.0
            ANNNEPVEG_M(I,M,J)=0.0
116      CONTINUE
C
C *     INITIALIZE ACCUMULATED ARRAY FOR MONTHLY AND YEARLY OUTPUT FOR CTEM
C 
        IF(CTEM2) THEN
          DO J=1,ICC
           LAIMAXGVEG_MN_M(I,M,J)=0.0
          ENDDO
          AVGMNNPP_MN_M(I,M)=0.0
          AVGMNGPP_MN_M(I,M)=0.0
          AVGMNNEP_MN_M(I,M)=0.0
          AVGMNNBP_MN_M(I,M)=0.0
          LAIMAXG_MN_M(I,M)=0.0      

          AVGMNE_CO2_MN_M(I,M)=0.0
          AVGMNE_CO_MN_M(I,M) =0.0
          AVGMNE_CH4_MN_M(I,M) =0.0
          AVGMNE_NMHC_MN_M(I,M) =0.0
          AVGMNE_H2_MN_M(I,M) =0.0
          AVGMNE_NOX_MN_M(I,M) =0.0
          AVGMNE_N2O_MN_M(I,M) =0.0
          AVGMNE_PM25_MN_M(I,M) =0.0
          AVGMNE_TPM_MN_M(I,M) =0.0
          AVGMNE_TC_MN_M(I,M) =0.0
          AVGMNE_OC_MN_M(I,M) =0.0
          AVGMNE_BC_MN_M(I,M) =0.0
          AVGMN_PROBFIRE_MN_M(I,M) =0.0
          AVGMN_LUC_EMC_MN_M(I,M) =0.0
          AVGMN_LUCSOCIN_MN_M(I,M) =0.0
          AVGMN_LUCLTRIN_MN_M(I,M) =0.0
          AVGMN_BURNFRAC_MN_M(I,M) =0.0
C
          DO J=1,ICC
           LAIMAXGVEG_YR_M(I,M,J)=0.0
          ENDDO
          AVGYRNPP_YR_M(I,M)=0.0
          AVGYRGPP_YR_M(I,M)=0.0
          AVGYRNEP_YR_M(I,M)=0.0
          AVGYRNBP_YR_M(I,M)=0.0
          LAIMAXG_YR_M(I,M)=0.0    
          HETRORES_YR_M(I,M)=0.0
          AUTORES_YR_M(I,M)=0.0
          LITRES_YR_M(I,M)=0.0
          SOILRES_YR_M(I,M)=0.0
          AVGYRE_CO2_YR_M(I,M)=0.0
          AVGYRE_CO_YR_M(I,M)=0.0
          AVGYRE_CH4_YR_M(I,M)=0.0
          AVGYRE_NMHC_YR_M(I,M)=0.0
          AVGYRE_H2_YR_M(I,M)=0.0
          AVGYRE_NOX_YR_M(I,M)=0.0
          AVGYRE_N2O_YR_M(I,M)=0.0
          AVGYRE_PM25_YR_M(I,M)=0.0
          AVGYRE_TPM_YR_M(I,M)=0.0
          AVGYRE_TC_YR_M(I,M)=0.0
          AVGYRE_OC_YR_M(I,M)=0.0
          AVGYRE_BC_YR_M(I,M)=0.0
          AVGYR_PROBFIRE_YR_M(I,M)=0.0
          AVGYR_LUC_EMC_YR_M(I,M)=0.0
          AVGYR_LUCSOCIN_YR_M(I,M)=0.0
          AVGYR_LUCLTRIN_YR_M(I,M)=0.0
          AVGYR_BURNFRAC_YR_M(I,M)=0.0
C
        ENDIF ! CTEM2
C
115   CONTINUE
C
      DO 117 I = 1,NLTEST
        DO 117 M = 1,NMTEST
         GAVGLTMSROW(I,M)=GAVGLTMSROW(I,M)+ (1.0-FCANROW(I,M,1)-
     &       FCANROW(I,M,2)-
     &    FCANROW(I,M,3)-FCANROW(I,M,4))*LITRMASSROW(I,M,ICC+1)
         GAVGSCMSROW(I,M)=GAVGSCMSROW(I,M)+ (1.0-FCANROW(I,M,1)-
     &   FCANROW(I,M,2)-
     &    FCANROW(I,M,3)-FCANROW(I,M,4))*SOILCMASROW(I,M,ICC+1)
C
117   CONTINUE
C
      CALL GATPREP(ILMOS,JLMOS,IWMOS,JWMOS,
     1             NML,NMW,GCGRD,FAREROW,MIDROW,
     2             NLAT,NMOS,ILG,1,NLTEST,NMTEST)

C
      CALL CTEMG1(GLEAFMASGAT,BLEAFMASGAT,STEMMASSGAT,ROOTMASSGAT,  
     1      FCANCMXGAT,ZBTWGAT,DLZWGAT,SDEPGAT,AILCGGAT,AILCBGAT,
     2      AILCGAT,ZOLNCGAT,RMATCGAT,RMATCTEMGAT,SLAIGAT,
     3      BMASVEGGAT,CMASVEGCGAT,VEGHGHTGAT,
     4      ROOTDPTHGAT,ALVSCTMGAT,ALIRCTMGAT,
     5      PAICGAT,    SLAICGAT, SANDGAT,CLAYGAT,
     6      ILMOS,JLMOS,IWMOS,JWMOS,
     7      NML,NLAT,NMOS,ILG,IGND,ICAN,ICP1,ICC,
     8      GLEAFMASROW,BLEAFMASROW,STEMMASSROW,ROOTMASSROW,
     9      FCANCMXROW,ZBTWROW,DLZWROW,SDEPROW,AILCGROW,AILCBROW,
     A      AILCROW,ZOLNCROW,RMATCROW,RMATCTEMROW,SLAIROW,
     B      BMASVEGROW,CMASVEGCROW,VEGHGHTROW,
     C      ROOTDPTHROW,ALVSCTMROW,ALIRCTMROW,
     D      PAICROW,    SLAICROW, SANDROW,CLAYROW )
C
C
      CALL  BIO2STR( GLEAFMASGAT,BLEAFMASGAT,STEMMASSGAT,ROOTMASSGAT, 
     1                           ICC,      ILG,        1,      NML,
     2                           IGND,     ICAN,FCANCMXGAT, ZBTWGAT,
     3                        DLZWGAT, NOL2PFTS,    L2MAX,  SDEPGAT,  
     4                       AILCGGAT, AILCBGAT,  AILCGAT, ZOLNCGAT,
     5                       RMATCGAT, RMATCTEMGAT,SLAIGAT,BMASVEGGAT,
     6                 CMASVEGCGAT, VEGHGHTGAT, ROOTDPTHGAT,ALVSCTMGAT,
     7                     ALIRCTMGAT, PAICGAT,  SLAICGAT)
C
C    FIND THE WILTING POINT AND FIELD CAPACITY FOR CLASST
C    (IT WOULD BE PREFERABLE TO HAVE THIS IN A SUBROUTINE 
C    RATHER THAN HERE. JM SEP 06/12)
C
        DO 119 I = 1,ILG
         DO 119 J = 1,IGND

           PSISAT(I,J)= (10.0**(-0.0131*SANDGAT(I,J)+1.88))/100.0
           GRKSAT(I,J)= (10.0**(0.0153*SANDGAT(I,J)-0.884))*7.0556E-6
           THPOR(I,J) = (-0.126*SANDGAT(I,J)+48.9)/100.0
           B(I,J)     = 0.159*CLAYGAT(I,J)+2.91
C
           WILTSM(I,J) = (150./PSISAT(I,J))**(-1.0/B(I,J))
           WILTSM(I,J) = THPOR(I,J) * WILTSM(I,J)
C
           FIELDSM(I,J) = (1.157E-09/GRKSAT(I,J))**
     &      (1.0/(2.0*B(I,J)+3.0))
           FIELDSM(I,J) = THPOR(I,J) *  FIELDSM(I,J)
C
119    CONTINUE
C
      CALL CTEMS1(GLEAFMASROW,BLEAFMASROW,STEMMASSROW,ROOTMASSROW,
     1      FCANCMXROW,ZBTWROW,DLZWROW,SDEPROW,AILCGROW,AILCBROW,
     2      AILCROW,ZOLNCROW,RMATCROW,RMATCTEMROW,SLAIROW,
     3      BMASVEGROW,CMASVEGCROW,VEGHGHTROW,
     4      ROOTDPTHROW,ALVSCTMROW,ALIRCTMROW,
     5      PAICROW,    SLAICROW, SANDROW,CLAYROW,
     6      ILMOS,JLMOS,IWMOS,JWMOS,
     7      NML,NLAT,NMOS,ILG,IGND,ICAN,ICP1,ICC,
     8      GLEAFMASGAT,BLEAFMASGAT,STEMMASSGAT,ROOTMASSGAT,  
     9      FCANCMXGAT,ZBTWGAT,DLZWGAT,SDEPGAT,AILCGGAT,AILCBGAT,
     A      AILCGAT,ZOLNCGAT,RMATCGAT,RMATCTEMGAT,SLAIGAT,
     B      BMASVEGGAT,CMASVEGCGAT,VEGHGHTGAT,
     C      ROOTDPTHGAT,ALVSCTMGAT,ALIRCTMGAT,
     D      PAICGAT,    SLAICGAT, SANDGAT, CLAYGAT )
C
      ENDIF   ! IF (CTEM1)
C
C     CTEM INITIAL PREPARATION DONE


C===================== CTEM ============================================ /
C
C     **** LAUNCH RUN. ****

      N=0
      NCOUNT=1
      NDAY=86400/NINT(DELT)

C===================== CTEM ============================================ \

      RUN_MODEL=.TRUE.
      MET_REWOUND=.FALSE.

C     START UP THE MAIN MODEL LOOP
      
      DO WHILE (RUN_MODEL)


C     IF THE MET FILE HAS BEEN REWOUND (DUE TO CYCLING OVER THE MET DATA)
C     THEN WE NEED TO FIND THE PROPER YEAR IN THE FILE BEFORE WE CONTINUE
C     ON WITH THE RUN
      IF (MET_REWOUND) THEN
        DO WHILE (IYEAR .LT. METCYLYRST) 
         DO I=1,NLTEST
C         THIS READS IN ONE 30 MIN SLICE OF MET DATA, WHEN IT REACHES 
C         THE END OF FILE IT WILL GO TO LABEL 999. 
          READ(51,5300,END=999) IHOUR,IMIN,IDAY,IYEAR,FSDOWN,FDLGRD(I),
     1         PREGRD(I),TAGRD(I),QAGRD(I),UVGRD(I),PRESGRD(I)
         ENDDO
        ENDDO

C       BACK UP ONE SPACE IN THE MET FILE SO IT IS READY FOR THE NEXT READIN
C       BUT ONLY IF IT WAS READ IN DURING THE LOOP ABOVE.    
        IF (METCYLYRST .NE. -9999) BACKSPACE(51)

        MET_REWOUND = .FALSE.

      ENDIF

C===================== CTEM ============================================ /
C
C     * READ IN METEOROLOGICAL FORCING DATA FOR CURRENT TIME STEP;
C     * CALCULATE SOLAR ZENITH ANGLE AND COMPONENTS OF INCOMING SHORT-
C     * WAVE RADIATION FLUX; ESTIMATE FLUX PARTITIONS IF NECESSARY.
C
      N=N+1
C
      DO 250 I=1,NLTEST
C         THIS READS IN ONE 30 MIN SLICE OF MET DATA, WHEN IT REACHES 
C         THE END OF FILE IT WILL GO TO 999. 
          READ(51,5300,END=999) IHOUR,IMIN,IDAY,IYEAR,FSDOWN,FDLGRD(I),
     1         PREGRD(I),TAGRD(I),QAGRD(I),UVGRD(I),PRESGRD(I)

C===================== CTEM ============================================ \

C         ASSIGN THE MET CLIMATE YEAR TO CLIMIYEAR      
          CLIMIYEAR = IYEAR
C
          IF(LOPCOUNT .GT. 1) THEN
            IF (CYCLEMET) THEN
              IYEAR=IYEAR + NUMMETCYLYRS*(LOPCOUNT-1)
            ELSE 
              IYEAR=IYEAR + NCYEAR*(LOPCOUNT-1)
            END IF
          ENDIF   ! LOPCOUNT .GT. 1
C
C         WRITE(0,*)'YEAR=',IYEAR,'DAY=',IDAY,' HOUR=',IHOUR,' MIN=',IMIN
C
C===================== CTEM ============================================ /
          FSVHGRD(I)=0.5*FSDOWN
          FSIHGRD(I)=0.5*FSDOWN
          TAGRD(I)=TAGRD(I)+TFREZ
          ULGRD(I)=UVGRD(I)
          VLGRD(I)=0.0
          VMODGRD(I)=UVGRD(I) 
250   CONTINUE

C
      DAY=REAL(IDAY)+(REAL(IHOUR)+REAL(IMIN)/60.)/24.
      DECL=SIN(2.*PI*(284.+DAY)/365.)*23.45*PI/180.
      HOUR=(REAL(IHOUR)+REAL(IMIN)/60.)*PI/12.-PI
      COSZ=SIN(RADJGRD(1))*SIN(DECL)+COS(RADJGRD(1))*COS(DECL)*COS(HOUR)

      DO 300 I=1,NLTEST
          CSZGRD(I)=SIGN(MAX(ABS(COSZ),1.0E-3),COSZ)
          IF(PREGRD(I).GT.0.) THEN
              XDIFFUS(I)=1.0
          ELSE
              XDIFFUS(I)=MAX(0.0,MIN(1.0-0.9*COSZ,1.0))
          ENDIF
          FCLOGRD(I)=XDIFFUS(I)
300   CONTINUE
C
C===================== CTEM ============================================ \
C
      IF (IDAY.EQ.1.AND.IHOUR.EQ.0.AND.IMIN.EQ.0) THEN
C
C      IF POPDON=TRUE
C      CALCULATE FIRE EXTINGUISHING PROBABILITY AND 
C      PROBABILITY OF FIRE DUE TO HUMAN CAUSES
C      FROM POPULATION DENSITY INPUT DATA
C      OVERWRITE EXTNPROBGRD(I) AND PRBFRHUCGRD(I) 
C      READ FROM .CTM FILE
C      CYPOPYR = -9999 WHEN WE DON'T WANT TO CYCLE OVER THE POPD DATA
C      SO THIS ALLOWS US TO GRAB A NEW VALUE EACH YEAR.

       IF(POPDON .AND. CYPOPYR .EQ. -9999) THEN
         DO WHILE (POPYR .LT. IYEAR) 
          DO I=1,NLTEST
           READ(91,5301,END=999) POPYR,POPDIN
          ENDDO
         ENDDO 
       ENDIF
C
C      IF CO2ON IS TRUE
C      READ CO2CONCIN FROM INPUT DATAFILE AND
C      OVERWRITE CO2CONCROW, OTHERWISE SET TO CONSTANT VALUE
C
       IF(CO2ON) THEN

        DO WHILE (CO2YR .LT. IYEAR) 
          DO I=1,NLTEST  
           READ(99,*,END=999) CO2YR,CO2CONCIN
           DO M=1,NMTEST
            CO2CONCROW(I,M)=CO2CONCIN
           ENDDO !NMTEST
          ENDDO !NLTEST
        ENDDO !CO2YR < IYEAR

       ELSE !CONSTANT CO2

         DO I=1,NLTEST
          DO M=1,NMTEST
           CO2CONCROW(I,M)=SETCO2CONC
          ENDDO
         ENDDO

       ENDIF !CO2ON 

C      IF LNDUSEON IS TRUE AND WE ARE NOT CYCLING THE MET DATA
C      READ IN THE LUC DATA NOW

       IF (CTEM2 .AND. LNDUSEON .AND. .NOT. CYCLEMET) THEN

         CALL READIN_LUC(NLAT,NMOS,IYEAR,NMTEST,NLTEST,MOSAIC,ICC,LUCYR,   
     &                   NFCANCMXROW,REACH_EOF)

         IF (REACH_EOF) GOTO 999

       ELSE ! LNDUSEON = FALSE OR MET IS CYCLING

C          LAND USE IS NOT ON OR THE MET DATA IS BEING CYCLED, SO THE 
C          PFCANCMX VALUE IS ALSO THE NFCANCMX VALUE. 
C        
           NFCANCMXROW=PFCANCMXROW

       ENDIF ! LNDUSEON/CYCLEMET
C 
      ENDIF   ! AT THE FIRST DAY OF EACH YEAR I.E.
C             ! IF (IDAY.EQ.1.AND.IHOUR.EQ.0.AND.IMIN.EQ.0) 
C

C===================== CTEM ============================================ /
C
      CALL CLASSI(VPDGRD,TADPGRD,PADRGRD,RHOAGRD,RHSIGRD,
     1            RPCPGRD,TRPCGRD,SPCPGRD,TSPCGRD,TAGRD,QAGRD,
     2            PREGRD,RPREGRD,SPREGRD,PRESGRD,
     3            IPCP,NLAT,1,NLTEST)
C
      CUMSNO=CUMSNO+SPCPGRD(1)*RHSIGRD(1)*DELT
C
      CALL GATPREP(ILMOS,JLMOS,IWMOS,JWMOS,
     1             NML,NMW,GCGRD,FAREROW,MIDROW,
     2             NLAT,NMOS,ILG,1,NLTEST,NMTEST)
C
      CALL CLASSG (TBARGAT,THLQGAT,THICGAT,TPNDGAT,ZPNDGAT,
     1             TBASGAT,ALBSGAT,TSNOGAT,RHOSGAT,SNOGAT, 
     2             TCANGAT,RCANGAT,SCANGAT,GROGAT, CMAIGAT, 
     3             FCANGAT,LNZ0GAT,ALVCGAT,ALICGAT,PAMXGAT,
     4             PAMNGAT,CMASGAT,ROOTGAT,RSMNGAT,QA50GAT,
     5             VPDAGAT,VPDBGAT,PSGAGAT,PSGBGAT,PAIDGAT,
     6             HGTDGAT,ACVDGAT,ACIDGAT,TSFSGAT,WSNOGAT,
     7             THPGAT, THRGAT, THMGAT, BIGAT,  PSISGAT,
     8             GRKSGAT,THRAGAT,HCPSGAT,TCSGAT,IGDRGAT,
     9             THFCGAT,PSIWGAT,DLZWGAT,ZBTWGAT,VMODGAT,
     A             ZSNLGAT,ZPLGGAT,ZPLSGAT,TACGAT, QACGAT,
     B             DRNGAT, XSLPGAT,GRKFGAT,WFSFGAT,WFCIGAT,
     C             ALGWGAT,ALGDGAT,ASVDGAT,ASIDGAT,AGVDGAT,
     D             AGIDGAT,ISNDGAT,RADJGAT,ZBLDGAT,Z0ORGAT,
     E             ZRFMGAT,ZRFHGAT,ZDMGAT, ZDHGAT, FSVHGAT,
     F             FSIHGAT,CSZGAT, FDLGAT, ULGAT,  VLGAT,  
     G             TAGAT,  QAGAT,  PRESGAT,PREGAT, PADRGAT,
     H             VPDGAT, TADPGAT,RHOAGAT,RPCPGAT,TRPCGAT,
     I             SPCPGAT,TSPCGAT,RHSIGAT,FCLOGAT,DLONGAT,
     J             GGEOGAT,
     K             ILMOS,JLMOS,IWMOS,JWMOS,
     L             NML,NLAT,NMOS,ILG,IGND,ICAN,ICAN+1,
     M             TBARROW,THLQROW,THICROW,TPNDROW,ZPNDROW,
     N             TBASROW,ALBSROW,TSNOROW,RHOSROW,SNOROW, 
     O             TCANROW,RCANROW,SCANROW,GROROW, CMAIROW,
     P             FCANROW,LNZ0ROW,ALVCROW,ALICROW,PAMXROW,
     Q             PAMNROW,CMASROW,ROOTROW,RSMNROW,QA50ROW,
     R             VPDAROW,VPDBROW,PSGAROW,PSGBROW,PAIDROW,
     S             HGTDROW,ACVDROW,ACIDROW,TSFSROW,WSNOROW,
     T             THPROW, THRROW, THMROW, BIROW,  PSISROW,
     U             GRKSROW,THRAROW,HCPSROW,TCSROW, IGDRROW,
     V             THFCROW,PSIWROW,DLZWROW,ZBTWROW,VMODGRD,
     W             ZSNLROW,ZPLGROW,ZPLSROW,TACROW, QACROW,
     X             DRNROW, XSLPROW,GRKFROW,WFSFROW,WFCIROW,
     Y             ALGWROW,ALGDROW,ASVDROW,ASIDROW,AGVDROW,
     Z             AGIDROW,ISNDROW,RADJGRD,ZBLDGRD,Z0ORGRD,
     +             ZRFMGRD,ZRFHGRD,ZDMGRD, ZDHGRD, FSVHGRD,
     +             FSIHGRD,CSZGRD, FDLGRD, ULGRD,  VLGRD,  
     +             TAGRD,  QAGRD,  PRESGRD,PREGRD, PADRGRD,
     +             VPDGRD, TADPGRD,RHOAGRD,RPCPGRD,TRPCGRD,
     +             SPCPGRD,TSPCGRD,RHSIGRD,FCLOGRD,DLONGRD,
     +             GGEOGRD  )
C
C    * INITIALIZATION OF DIAGNOSTIC VARIABLES SPLIT OUT OF CLASSG
C    * FOR CONSISTENCY WITH GCM APPLICATIONS.
C
      DO 330 K=1,ILG
          CDHGAT (K)=0.0
          CDMGAT (K)=0.0
          HFSGAT (K)=0.0
          TFXGAT (K)=0.0
          QEVPGAT(K)=0.0
          QFSGAT (K)=0.0
          QFXGAT (K)=0.0
          PETGAT (K)=0.0
          GAGAT  (K)=0.0
          EFGAT  (K)=0.0
          GTGAT  (K)=0.0
          QGGAT  (K)=0.0
          ALVSGAT(K)=0.0
          ALIRGAT(K)=0.0
          SFCTGAT(K)=0.0
          SFCUGAT(K)=0.0
          SFCVGAT(K)=0.0
          SFCQGAT(K)=0.0
          FSNOGAT(K)=0.0
          FSGVGAT(K)=0.0
          FSGSGAT(K)=0.0
          FSGGGAT(K)=0.0
          FLGVGAT(K)=0.0
          FLGSGAT(K)=0.0
          FLGGGAT(K)=0.0
          HFSCGAT(K)=0.0
          HFSSGAT(K)=0.0
          HFSGGAT(K)=0.0
          HEVCGAT(K)=0.0
          HEVSGAT(K)=0.0
          HEVGGAT(K)=0.0
          HMFCGAT(K)=0.0
          HMFNGAT(K)=0.0
          HTCCGAT(K)=0.0
          HTCSGAT(K)=0.0
          PCFCGAT(K)=0.0
          PCLCGAT(K)=0.0
          PCPNGAT(K)=0.0
          PCPGGAT(K)=0.0
          QFGGAT (K)=0.0
          QFNGAT (K)=0.0
          QFCFGAT(K)=0.0
          QFCLGAT(K)=0.0
          ROFGAT (K)=0.0
          ROFOGAT(K)=0.0
          ROFSGAT(K)=0.0
          ROFBGAT(K)=0.0
          TROFGAT(K)=0.0
          TROOGAT(K)=0.0
          TROSGAT(K)=0.0
          TROBGAT(K)=0.0
          ROFCGAT(K)=0.0
          ROFNGAT(K)=0.0
          ROVGGAT(K)=0.0
          WTRCGAT(K)=0.0
          WTRSGAT(K)=0.0
          WTRGGAT(K)=0.0
          DRGAT  (K)=0.0
330   CONTINUE
C
      DO 334 L=1,IGND
      DO 332 K=1,ILG
          HMFGGAT(K,L)=0.0
          HTCGAT (K,L)=0.0
          QFCGAT (K,L)=0.0
          GFLXGAT(K,L)=0.0
332   CONTINUE
334   CONTINUE
C
      DO 340 M=1,50
          DO 338 L=1,6
              DO 336 K=1,NML
                  ITCTGAT(K,L,M)=0
336           CONTINUE
338       CONTINUE
340   CONTINUE
C
C========================================================================
C
      CALL CLASSZ (0,      CTVSTP, CTSSTP, CT1STP, CT2STP, CT3STP, 
     1             WTVSTP, WTSSTP, WTGSTP,
     2             FSGVGAT,FLGVGAT,HFSCGAT,HEVCGAT,HMFCGAT,HTCCGAT,
     3             FSGSGAT,FLGSGAT,HFSSGAT,HEVSGAT,HMFNGAT,HTCSGAT,
     4             FSGGGAT,FLGGGAT,HFSGGAT,HEVGGAT,HMFGGAT,HTCGAT,
     5             PCFCGAT,PCLCGAT,QFCFGAT,QFCLGAT,ROFCGAT,WTRCGAT,
     6             PCPNGAT,QFNGAT, ROFNGAT,WTRSGAT,PCPGGAT,QFGGAT,
     7             QFCGAT, ROFGAT, WTRGGAT,CMAIGAT,RCANGAT,SCANGAT,   
     8             TCANGAT,SNOGAT, WSNOGAT,TSNOGAT,THLQGAT,THICGAT,  
     9             HCPSGAT,THPGAT, DLZWGAT,TBARGAT,ZPNDGAT,TPNDGAT,  
     A             DELZ,   FCS,    FGS,    FC,     FG,
     B             1,      NML,    ILG,    IGND,   N    )
C
C
C===================== CTEM ============================================ \
C
      CALL CTEMG2(FCANCMXGAT,RMATCGAT,ZOLNCGAT,PAICGAT,
     1      AILCGAT,     AILCGGAT,    CMASVEGCGAT,  SLAICGAT,
     2      AILCGSGAT,   FCANCSGAT,   FCANCGAT,     RMATCTEMGAT,
     3      CO2CONCGAT,  CO2I1CGGAT,  CO2I1CSGAT,   CO2I2CGGAT, 
     4      CO2I2CSGAT,  XDIFFUSGAT,  SLAIGAT,      CFLUXCGGAT, 
     5      CFLUXCSGAT,  ANCSVEGGAT,  ANCGVEGGAT,   RMLCSVEGGAT,
     6      RMLCGVEGGAT, CANRESGAT,   SDEPGAT,
     7      SANDGAT,     CLAYGAT,     ORGMGAT,
     8      ANVEGGAT,    RMLVEGGAT,   TCANOACCGAT_M,TBARACCGAT_M,
     9      UVACCGAT_M,  VVACCGAT_M,  MLIGHTNGGAT,  PRBFRHUCGAT,
     A      EXTNPROBGAT, STDALNGAT,   PFCANCMXGAT,  NFCANCMXGAT,
     B      STEMMASSGAT, ROOTMASSGAT, LITRMASSGAT,  GLEAFMASGAT,
     C      BLEAFMASGAT, SOILCMASGAT, AILCBGAT,     FLHRLOSSGAT,
     D      PANDAYSGAT,  LFSTATUSGAT, GRWTHEFFGAT,  LYSTMMASGAT,
     E      LYROTMASGAT, TYMAXLAIGAT, VGBIOMASGAT,  GAVGLTMSGAT,
     F      STMHRLOSGAT, BMASVEGGAT,  COLDDAYSGAT,  ROTHRLOSGAT,
     G      ALVSCTMGAT,  ALIRCTMGAT,  GAVGLAIGAT,   NPPGAT,
     H      NEPGAT,      HETRORESGAT, AUTORESGAT,   SOILRESPGAT,
     I      RMGAT,       RGGAT,       NBPGAT,       LITRESGAT,
     J      SOCRESGAT,   GPPGAT,      DSTCEMLSGAT,  LITRFALLGAT,
     K      HUMIFTRSGAT, VEGHGHTGAT,  ROOTDPTHGAT,  RMLGAT,
     L      RMSGAT,      RMRGAT,      TLTRLEAFGAT,  TLTRSTEMGAT,
     M      TLTRROOTGAT, LEAFLITRGAT, ROOTTEMPGAT,  AFRLEAFGAT,
     N      AFRSTEMGAT,  AFRROOTGAT,  WTSTATUSGAT,  LTSTATUSGAT,
     O      BURNFRACGAT, PROBFIREGAT, LUCEMCOMGAT,  LUCLTRINGAT,
     P      LUCSOCINGAT, NPPVEGGAT,   GRCLAREAGAT,  DSTCEMLS3GAT,
     Q      FAREGAT,     GAVGSCMSGAT, RMLVEGACCGAT,
     &      RMSVEGGAT,   RMRVEGGAT,   RGVEGGAT,    VGBIOMAS_VEGGAT,
     &      GPPVEGGAT,   NEPVEGGAT,   AILCMINGAT,   AILCMAXGAT,
     &      EMIT_CO2GAT,  EMIT_COGAT, EMIT_CH4GAT,  EMIT_NMHCGAT,
     &      EMIT_H2GAT,   EMIT_NOXGAT,EMIT_N2OGAT,  EMIT_PM25GAT,
     &      EMIT_TPMGAT,  EMIT_TCGAT, EMIT_OCGAT,   EMIT_BCGAT,
C
     R      ILMOS,       JLMOS,       IWMOS,        JWMOS,
     S      NML,         NLAT,        NMOS,         ILG, 
     T      IGND,        ICAN,        ICP1,         ICC,
     U      FCANCMXROW,  RMATCROW,    ZOLNCROW,     PAICROW,
     V      AILCROW,     AILCGROW,    CMASVEGCROW,  SLAICROW,
     W      AILCGSROW,   FCANCSROW,   FCANCROW,     RMATCTEMROW,
     X      CO2CONCROW,  CO2I1CGROW,  CO2I1CSROW,   CO2I2CGROW,
     Y      CO2I2CSROW,  XDIFFUS,     SLAIROW,      CFLUXCGROW,
     Z      CFLUXCSROW,  ANCSVEGROW,  ANCGVEGROW,   RMLCSVEGROW,
     1      RMLCGVEGROW, CANRESROW,   SDEPROW,
     2      SANDROW,     CLAYROW,     ORGMROW,
     3      ANVEGROW,    RMLVEGROW,   TCANOACCROW_M,TBARACCROW_M,
     4      UVACCROW_M,  VVACCROW_M,  MLIGHTNGGRD,  PRBFRHUCGRD,
     5      EXTNPROBGRD, STDALNGRD,   PFCANCMXROW,  NFCANCMXROW,
     6      STEMMASSROW, ROOTMASSROW, LITRMASSROW,  GLEAFMASROW,
     7      BLEAFMASROW, SOILCMASROW, AILCBROW,     FLHRLOSSROW,
     8      PANDAYSROW,  LFSTATUSROW, GRWTHEFFROW,  LYSTMMASROW,
     9      LYROTMASROW, TYMAXLAIROW, VGBIOMASROW,  GAVGLTMSROW,
     A      STMHRLOSROW, BMASVEGROW,  COLDDAYSROW,  ROTHRLOSROW,
     B      ALVSCTMROW,  ALIRCTMROW,  GAVGLAIROW,   NPPROW,
     C      NEPROW,      HETRORESROW, AUTORESROW,   SOILRESPROW,
     D      RMROW,       RGROW,       NBPROW,       LITRESROW,
     E      SOCRESROW,   GPPROW,      DSTCEMLSROW,  LITRFALLROW,
     F      HUMIFTRSROW, VEGHGHTROW,  ROOTDPTHROW,  RMLROW,
     G      RMSROW,      RMRROW,      TLTRLEAFROW,  TLTRSTEMROW,
     H      TLTRROOTROW, LEAFLITRROW, ROOTTEMPROW,  AFRLEAFROW,
     I      AFRSTEMROW,  AFRROOTROW,  WTSTATUSROW,  LTSTATUSROW,
     J      BURNFRACROW, PROBFIREROW, LUCEMCOMROW,  LUCLTRINROW,
     K      LUCSOCINROW, NPPVEGROW,   GRCLAREAROW,  DSTCEMLS3ROW,
     L      FAREROW,     GAVGSCMSROW, RMLVEGACCROW,
     &      RMSVEGROW,   RMRVEGROW,   RGVEGROW,    VGBIOMAS_VEGROW,
     &      GPPVEGROW,   NEPVEGROW,   AILCMINROW,   AILCMAXROW,
     &      EMIT_CO2ROW,  EMIT_COROW, EMIT_CH4ROW,  EMIT_NMHCROW,
     &      EMIT_H2ROW,   EMIT_NOXROW,EMIT_N2OROW,  EMIT_PM25ROW,
     &      EMIT_TPMROW,  EMIT_TCROW, EMIT_OCROW,   EMIT_BCROW )
C
C===================== CTEM ============================================ /
C
C-----------------------------------------------------------------------
C     * ALBEDO AND TRANSMISSIVITY CALCULATIONS; GENERAL VEGETATION
C     * CHARACTERISTICS.
C     * ADAPTED TO COUPLING OF CLASS3.6 AND CTEM
C
      CALL CLASSA    (FC,     FG,     FCS,    FGS,    ALVSCN, ALIRCN,
     1                ALVSG,  ALIRG,  ALVSCS, ALIRCS, ALVSSN, ALIRSN,           
     2                ALVSGC, ALIRGC, ALVSSC, ALIRSC, TRVSCN, TRIRCN, 
     3                TRVSCS, TRIRCS, FSVF,   FSVFS,  
     4                RAICAN, RAICNS, SNOCAN, SNOCNS, FRAINC, FSNOWC, 
     5                FRAICS, FSNOCS, DISP,   DISPS,  ZOMLNC, ZOMLCS, 
     6                ZOELNC, ZOELCS, ZOMLNG, ZOMLNS, ZOELNG, ZOELNS, 
     7                CHCAP,  CHCAPS, CMASSC, CMASCS, CWLCAP, CWFCAP,
     8                CWLCPS, CWFCPS, RC,     RCS,    RBCOEF, FROOT,  
     9                ZPLIMC, ZPLIMG, ZPLMCS, ZPLMGS, TRSNOW, ZSNOW,  
     A                WSNOGAT,ALVSGAT,ALIRGAT,HTCCGAT,HTCSGAT,HTCGAT, 
     B                WTRCGAT,WTRSGAT,WTRGGAT,CMAIGAT,FSNOGAT,
     C                FCANGAT,LNZ0GAT,ALVCGAT,ALICGAT,PAMXGAT,PAMNGAT,
     D                CMASGAT,ROOTGAT,RSMNGAT,QA50GAT,VPDAGAT,VPDBGAT,
     E                PSGAGAT,PSGBGAT,PAIDGAT,HGTDGAT,ACVDGAT,ACIDGAT, 
     F                ASVDGAT,ASIDGAT,AGVDGAT,AGIDGAT,ALGWGAT,ALGDGAT, 
     G                THLQGAT,THICGAT,TBARGAT,RCANGAT,SCANGAT,TCANGAT,   
     H                GROGAT, SNOGAT, TSNOGAT,RHOSGAT,ALBSGAT,ZBLDGAT,
     I                Z0ORGAT,ZSNLGAT,ZPLGGAT,ZPLSGAT,
     J                FCLOGAT,TAGAT,  VPDGAT, RHOAGAT,CSZGAT, 
     K                FSVHGAT,RADJGAT,DLONGAT,RHSIGAT,DELZ,   DLZWGAT,
     L                ZBTWGAT,THPGAT, THMGAT, PSISGAT,BIGAT,  PSIWGAT,
     M                HCPSGAT,ISNDGAT,
     P                FCANCMXGAT,ICC,ICTEMMOD,RMATCGAT,ZOLNCGAT, 
     Q                CMASVEGCGAT,AILCGAT,PAICGAT,L2MAX, NOL2PFTS,
     R                SLAICGAT,AILCGGAT,AILCGSGAT,FCANCGAT,FCANCSGAT,
     R                IDAY,   ILG,    1,      NML,      
     N                JLAT,N, ICAN,   ICAN+1, IGND,   IDISP,  IZREF,
     O                IWF,    IPAI,   IHGT,   IALC,   IALS,   IALG,
     P                ALVSCTMGAT, ALIRCTMGAT )
C
C===================== CTEM ============================================ \
C
C     IF ONLY CTEM1 IS ON THEN USE FRACTION OF ROOT IN EACH SOIL LAYER
C     FOR EACH OF CTEM PFT FROM CLASS.
C
      IF ( CTEM1 .AND. (.NOT.CTEM2) ) THEN
        DO 375 K = 1, IGND
          K1C=0
          DO 350 J = 1, ICAN
            IF(J.EQ.1) THEN
              K1C = K1C + 1
            ELSE
              K1C = K1C + NOL2PFTS(J-1)
            ENDIF
            K2C = K1C + NOL2PFTS(J) - 1
            DO 360 M = K1C, K2C
              DO 365 I = 1, NML
                RMATCTEMGAT(I,M,K)=RMATCGAT(I,J,K)
365           CONTINUE
360         CONTINUE
350       CONTINUE
375     CONTINUE
      ENDIF
C
C===================== CTEM ============================================ /
C
C-----------------------------------------------------------------------
C          * SURFACE TEMPERATURE AND FLUX CALCULATIONS.
C          * ADAPTED TO COUPLING OF CLASS3.6 AND CTEM
C

      CALL CLASST     (TBARC,  TBARG,  TBARCS, TBARGS, THLIQC, THLIQG,
     1  THICEC, THICEG, HCPC,   HCPG,   TCTOPC, TCBOTC, TCTOPG, TCBOTG, 
     2  GZEROC, GZEROG, GZROCS, GZROGS, G12C,   G12G,   G12CS,  G12GS,  
     3  G23C,   G23G,   G23CS,  G23GS,  QFREZC, QFREZG, QMELTC, QMELTG, 
     4  EVAPC,  EVAPCG, EVAPG,  EVAPCS, EVPCSG, EVAPGS, TCANO,  TCANS,  
     5  RAICAN, SNOCAN, RAICNS, SNOCNS, CHCAP,  CHCAPS, TPONDC, TPONDG, 
     6  TPNDCS, TPNDGS, TSNOCS, TSNOGS, WSNOCS, WSNOGS, RHOSCS, RHOSGS,
     7  ITCTGAT,CDHGAT, CDMGAT, HFSGAT, TFXGAT, QEVPGAT,QFSGAT, QFXGAT, 
     8  PETGAT, GAGAT,  EFGAT,  GTGAT,  QGGAT,  SFCTGAT,SFCUGAT,SFCVGAT,
     9  SFCQGAT,SFRHGAT,FSGVGAT,FSGSGAT,FSGGGAT,FLGVGAT,FLGSGAT,FLGGGAT,
     A  HFSCGAT,HFSSGAT,HFSGGAT,HEVCGAT,HEVSGAT,HEVGGAT,HMFCGAT,HMFNGAT,
     B  HTCCGAT,HTCSGAT,HTCGAT, QFCFGAT,QFCLGAT,DRGAT,  WTABGAT,ILMOGAT,
     C  UEGAT,  HBLGAT, TACGAT, QACGAT, ZRFMGAT,ZRFHGAT,ZDMGAT, ZDHGAT, 
     D  VPDGAT, TADPGAT,RHOAGAT,FSVHGAT,FSIHGAT,FDLGAT, ULGAT,  VLGAT,  
     E  TAGAT,  QAGAT,  PADRGAT,FC,     FG,     FCS,    FGS,    RBCOEF,
     F  FSVF,   FSVFS,  PRESGAT,VMODGAT,ALVSCN, ALIRCN, ALVSG,  ALIRG,  
     G  ALVSCS, ALIRCS, ALVSSN, ALIRSN, ALVSGC, ALIRGC, ALVSSC, ALIRSC,
     H  TRVSCN, TRIRCN, TRVSCS, TRIRCS, RC,     RCS,    WTRGGAT,QLWOGAT,
     I  FRAINC, FSNOWC, FRAICS, FSNOCS, CMASSC, CMASCS, DISP,   DISPS,  
     J  ZOMLNC, ZOELNC, ZOMLNG, ZOELNG, ZOMLCS, ZOELCS, ZOMLNS, ZOELNS, 
     K  TBARGAT,THLQGAT,THICGAT,TPNDGAT,ZPNDGAT,TBASGAT,TCANGAT,TSNOGAT,
     L  ZSNOW,  TRSNOW, RHOSGAT,WSNOGAT,THPGAT, THRGAT, THMGAT, THFCGAT,
     M  RADJGAT,PREGAT, HCPSGAT,TCSGAT, TSFSGAT,DELZ,   DLZWGAT,ZBTWGAT,
     N  FTEMP,  FVAP,   RIB,    ISNDGAT,
     O  AILCGGAT,  AILCGSGAT, FCANCGAT,FCANCSGAT,CO2CONCGAT,CO2I1CGGAT,
     P  CO2I1CSGAT,CO2I2CGGAT,CO2I2CSGAT,CSZGAT,XDIFFUSGAT,SLAIGAT,ICC,
     Q  ICTEMMOD,RMATCTEMGAT,FCANCMXGAT,L2MAX,  NOL2PFTS,CFLUXCGGAT,
     R  CFLUXCSGAT,ANCSVEGGAT,ANCGVEGGAT,RMLCSVEGGAT,RMLCGVEGGAT,
     S  FIELDSM,WILTSM,ITC,ITCG,ITG,    ILG,    1,NML,  JLAT,N, ICAN,   
     T  IGND,   IZREF,  ISLFD,  NLANDCS,NLANDGS,NLANDC, NLANDG, NLANDI) 
C
C-----------------------------------------------------------------------
C          * WATER BUDGET CALCULATIONS.
C
          CALL CLASSW  (THLQGAT,THICGAT,TBARGAT,TCANGAT,RCANGAT,SCANGAT,
     1                  ROFGAT, TROFGAT,SNOGAT, TSNOGAT,RHOSGAT,ALBSGAT,
     2                  WSNOGAT,ZPNDGAT,TPNDGAT,GROGAT, TBASGAT,GFLXGAT,
     3                  PCFCGAT,PCLCGAT,PCPNGAT,PCPGGAT,QFCFGAT,QFCLGAT,
     4                  QFNGAT, QFGGAT, QFCGAT, HMFCGAT,HMFGGAT,HMFNGAT,
     5                  HTCCGAT,HTCSGAT,HTCGAT, ROFCGAT,ROFNGAT,ROVGGAT,
     6                  WTRSGAT,WTRGGAT,ROFOGAT,ROFSGAT,ROFBGAT,
     7                  TROOGAT,TROSGAT,TROBGAT,QFSGAT, 
     8                  TBARC,  TBARG,  TBARCS, TBARGS, THLIQC, THLIQG, 
     9                  THICEC, THICEG, HCPC,   HCPG,   RPCPGAT,TRPCGAT,  
     A                  SPCPGAT,TSPCGAT,PREGAT, TAGAT,  RHSIGAT,GGEOGAT,
     B                  FC,     FG,     FCS,    FGS,    TPONDC, TPONDG,
     C                  TPNDCS, TPNDGS, EVAPC,  EVAPCG, EVAPG,  EVAPCS,
     D                  EVPCSG, EVAPGS, QFREZC, QFREZG, QMELTC, QMELTG,
     E                  RAICAN, SNOCAN, RAICNS, SNOCNS, FROOT,  FSVF,   
     F                  FSVFS,  CWLCAP, CWFCAP, CWLCPS, CWFCPS, TCANO,  
     G                  TCANS,  CHCAP,  CHCAPS, CMASSC, CMASCS, ZSNOW,  
     H                  GZEROC, GZEROG, GZROCS, GZROGS, G12C,   G12G,
     I                  G12CS,  G12GS,  G23C,   G23G,   G23CS,  G23GS,
     J                  TSNOCS, TSNOGS, WSNOCS, WSNOGS, RHOSCS, RHOSGS,
     K                  ZPLIMC, ZPLIMG, ZPLMCS, ZPLMGS, TSFSGAT,
     L                  TCTOPC, TCBOTC, TCTOPG, TCBOTG, 
     M                  THPGAT, THRGAT, THMGAT, BIGAT,  PSISGAT,GRKSGAT,
     N                  THRAGAT,THFCGAT,DRNGAT, HCPSGAT,DELZ,   
     O                  DLZWGAT,ZBTWGAT,XSLPGAT,GRKFGAT,WFSFGAT,WFCIGAT,
     P                  ISNDGAT,IGDRGAT,
     Q                  IWF,    ILG,    1,      NML,    N,
     R                  JLAT,   ICAN,   IGND,   IGND+1, IGND+2,
     S                  NLANDCS,NLANDGS,NLANDC, NLANDG, NLANDI )

C-----------------------------------------------------------------------
C
      CALL CLASSZ (1,      CTVSTP, CTSSTP, CT1STP, CT2STP, CT3STP, 
     1             WTVSTP, WTSSTP, WTGSTP,
     2             FSGVGAT,FLGVGAT,HFSCGAT,HEVCGAT,HMFCGAT,HTCCGAT,
     3             FSGSGAT,FLGSGAT,HFSSGAT,HEVSGAT,HMFNGAT,HTCSGAT,
     4             FSGGGAT,FLGGGAT,HFSGGAT,HEVGGAT,HMFGGAT,HTCGAT,
     5             PCFCGAT,PCLCGAT,QFCFGAT,QFCLGAT,ROFCGAT,WTRCGAT,
     6             PCPNGAT,QFNGAT, ROFNGAT,WTRSGAT,PCPGGAT,QFGGAT,
     7             QFCGAT, ROFGAT, WTRGGAT,CMAIGAT,RCANGAT,SCANGAT,   
     8             TCANGAT,SNOGAT, WSNOGAT,TSNOGAT,THLQGAT,THICGAT,  
     9             HCPSGAT,THPGAT, DLZWGAT,TBARGAT,ZPNDGAT,TPNDGAT,  
     A             DELZ,   FCS,    FGS,    FC,     FG,
     B             1,      NML,    ILG,    IGND,   N    )
C
C-----------------------------------------------------------------------
C
C===================== CTEM ============================================ \
C
C     USE NET PHOTOSYNTHETIC RATES FROM CANOPY OVER SNOW AND CANOPY OVER 
C     GROUND SUB-AREAS TO FIND AVERAGE NET PHOTOSYNTHETIC RATE FOR EACH
C     PFT. AND SIMILARLY FOR LEAF RESPIRATION.
C
      IF (CTEM1) THEN
        DO 605 J = 1, ICC
          DO 610 I = 1, NML
            IF ( (FCANCGAT(I,J)+FCANCSGAT(I,J)).GT.ABSZERO) THEN
              ANVEGGAT(I,J)=(FCANCGAT(I,J)*ANCGVEGGAT(I,J) + 
     &                   FCANCSGAT(I,J)*ANCSVEGGAT(I,J)) / 
     &                   (FCANCGAT(I,J)+FCANCSGAT(I,J))   
              RMLVEGGAT(I,J)=(FCANCGAT(I,J)*RMLCGVEGGAT(I,J) + 
     &                    FCANCSGAT(I,J)*RMLCSVEGGAT(I,J)) / 
     &                    (FCANCGAT(I,J)+FCANCSGAT(I,J))   
            ELSE
              ANVEGGAT(I,J)=0.0
              RMLVEGGAT(I,J)=0.0
            ENDIF
610       CONTINUE
605     CONTINUE
      ENDIF 

C     * ACCUMULATE OUTPUT DATA FOR RUNNING CTEM.
C
      DO 660 I=1,NML
         UVACCGAT_M(I)=UVACCGAT_M(I)+ULGAT(I)
660   CONTINUE
C
C     ACCUMULATE VARIABLES NOT ALREADY ACCUMULATED BUT WHICH ARE REQUIRED BY
C     CTEM.
C
      IF (CTEM2) THEN
        DO 700 I = 1, NML
C
          ALSWACC_GAT(I)=ALSWACC_GAT(I)+ALVSGAT(I)*FSVHGAT(I)
          ALLWACC_GAT(I)=ALLWACC_GAT(I)+ALIRGAT(I)*FSIHGAT(I)
          FSINACC_GAT(I)=FSINACC_GAT(I)+FSDOWN
          FLINACC_GAT(I)=FLINACC_GAT(I)+FDLGAT(I)
          FLUTACC_GAT(I)=FLUTACC_GAT(I)+SBC*GTGAT(I)**4
          PREGACC_GAT(I)=PREGACC_GAT(I)+PREGAT(I)*DELT
C
          FSNOWACC_M(I)=FSNOWACC_M(I)+FSNOGAT(I)
          TCANOACCGAT_M(I)=TCANOACCGAT_M(I)+TCANO(I)
          TCANSACC_M(I)=TCANSACC_M(I)+TCANS(I)
          TAACCGAT_M(I)=TAACCGAT_M(I)+TAGAT(I)
          VVACCGAT_M(I)=VVACCGAT_M(I)+ VLGAT(I)
C
          DO 710 J=1,IGND
             TBARACCGAT_M(I,J)=TBARACCGAT_M(I,J)+TBARGAT(I,J)     
             TBARCACC_M(I,J)=TBARCACC_M(I,J)+TBARC(I,J)
             TBARCSACC_M(I,J)=TBARCSACC_M(I,J)+TBARCS(I,J)
             TBARGACC_M(I,J)=TBARGACC_M(I,J)+TBARG(I,J)
             TBARGSACC_M(I,J)=TBARGSACC_M(I,J)+TBARGS(I,J)
             THLIQCACC_M(I,J)=THLIQCACC_M(I,J)+THLIQC(I,J)
             THLIQGACC_M(I,J)=THLIQGACC_M(I,J)+THLIQG(I,J)
             THICECACC_M(I,J)=THICECACC_M(I,J)+THICEC(I,J)
710       CONTINUE
C
          DO 713 J = 1, ICC
            ANCSVGAC_M(I,J)=ANCSVGAC_M(I,J)+ANCSVEGGAT(I,J) 
            ANCGVGAC_M(I,J)=ANCGVGAC_M(I,J)+ANCGVEGGAT(I,J) 
            RMLCSVGA_M(I,J)=RMLCSVGA_M(I,J)+RMLCSVEGGAT(I,J) 
            RMLCGVGA_M(I,J)=RMLCGVGA_M(I,J)+RMLCGVEGGAT(I,J) 
713       CONTINUE
C
700     CONTINUE
      ENDIF !IF (CTEM2)   
C
      IF(NCOUNT.EQ.NDAY) THEN 
C
      DO 855 I=1,NML
          UVACCGAT_M(I)=UVACCGAT_M(I)/REAL(NDAY)
          VVACCGAT_M(I)=VVACCGAT_M(I)/REAL(NDAY)
C
C         DAILY AVERAGES OF ACCUMULATED VARIABLES FOR CTEM
C
          IF (CTEM2) THEN
C
C           NET RADIATION AND PRECIPITATION ESTIMATES FOR CTEM's BIOCLIM
C
            IF(FSINACC_GAT(I).GT.0.0) THEN
              ALSWACC_GAT(I)=ALSWACC_GAT(I)/(FSINACC_GAT(I)*0.5)
              ALLWACC_GAT(I)=ALLWACC_GAT(I)/(FSINACC_GAT(I)*0.5)
            ELSE
              ALSWACC_GAT(I)=0.0
              ALLWACC_GAT(I)=0.0
            ENDIF
C
            FSINACC_GAT(I)=FSINACC_GAT(I)/REAL(NDAY)
            FLINACC_GAT(I)=FLINACC_GAT(I)/REAL(NDAY)
            FLUTACC_GAT(I)=FLUTACC_GAT(I)/REAL(NDAY)
C    
            ALTOT_GAT=(ALSWACC_GAT(I)+ALLWACC_GAT(I))/2.0
            FSSTAR_GAT=FSINACC_GAT(I)*(1.-ALTOT_GAT)
            FLSTAR_GAT=FLINACC_GAT(I)-FLUTACC_GAT(I)
            NETRAD_GAT(I)=FSSTAR_GAT+FLSTAR_GAT
            PREACC_GAT(I)=PREGACC_GAT(I)
C
            FSNOWACC_M(I)=FSNOWACC_M(I)/REAL(NDAY)
            TCANOACCGAT_M(I)=TCANOACCGAT_M(I)/REAL(NDAY)
            TCANSACC_M(I)=TCANSACC_M(I)/REAL(NDAY)
            TAACCGAT_M(I)=TAACCGAT_M(I)/REAL(NDAY)
C
            DO 831 J=1,IGND
              TBARACCGAT_M(I,J)=TBARACCGAT_M(I,J)/REAL(NDAY)    
              TBARCACC_M(I,J) = TBARACCGAT_M(I,J)
              TBARCSACC_M(I,J) = TBARACCGAT_M(I,J)
              TBARGACC_M(I,J) = TBARACCGAT_M(I,J)
              TBARGSACC_M(I,J) = TBARACCGAT_M(I,J)
C              
              THLIQCACC_M(I,J)=THLIQCACC_M(I,J)/REAL(NDAY)
              THLIQGACC_M(I,J)=THLIQGACC_M(I,J)/REAL(NDAY)
              THICECACC_M(I,J)=THICECACC_M(I,J)/REAL(NDAY)
831         CONTINUE   
C
            DO 832 J = 1, ICC
              ANCSVGAC_M(I,J)=ANCSVGAC_M(I,J)/REAL(NDAY)
              ANCGVGAC_M(I,J)=ANCGVGAC_M(I,J)/REAL(NDAY)
              RMLCSVGA_M(I,J)=RMLCSVGA_M(I,J)/REAL(NDAY)
              RMLCGVGA_M(I,J)=RMLCGVGA_M(I,J)/REAL(NDAY)
832         CONTINUE
C
C           PASS ON MEAN MONTHLY LIGHTNING FOR THE CURRENT MONTH TO CTEM
C           LIGHTNG(I)=MLIGHTNG(I,MONTH)
C
C           IN A VERY SIMPLE WAY TRY TO INTERPOLATE MONTHLY LIGHTNING TO
C           DAILY LIGHTNING
C
            IF(IDAY.GE.15.AND.IDAY.LE.45)THEN ! Mid Jan - Mid Feb
              MONTH1=1
              MONTH2=2
              XDAY=IDAY-15
            ELSE IF(IDAY.GE.46.AND.IDAY.LE.74)THEN ! Mid Feb - Mid Mar
              MONTH1=2
              MONTH2=3
              XDAY=IDAY-46
            ELSE IF(IDAY.GE.75.AND.IDAY.LE.105)THEN ! Mid Mar - Mid Apr
              MONTH1=3
              MONTH2=4
              XDAY=IDAY-75
            ELSE IF(IDAY.GE.106.AND.IDAY.LE.135)THEN ! Mid Apr - Mid May
              MONTH1=4
              MONTH2=5
              XDAY=IDAY-106
            ELSE IF(IDAY.GE.136.AND.IDAY.LE.165)THEN ! Mid May - Mid June
              MONTH1=5
              MONTH2=6
              XDAY=IDAY-136
            ELSE IF(IDAY.GE.166.AND.IDAY.LE.196)THEN ! Mid June - Mid July
              MONTH1=6
              MONTH2=7
              XDAY=IDAY-166
            ELSE IF(IDAY.GE.197.AND.IDAY.LE.227)THEN ! Mid July - Mid Aug
              MONTH1=7
              MONTH2=8
              XDAY=IDAY-197
            ELSE IF(IDAY.GE.228.AND.IDAY.LE.258)THEN ! Mid Aug - Mid Sep
              MONTH1=8
              MONTH2=9
              XDAY=IDAY-228
            ELSE IF(IDAY.GE.259.AND.IDAY.LE.288)THEN ! Mid Sep - Mid Oct
              MONTH1=9
              MONTH2=10
              XDAY=IDAY-259
            ELSE IF(IDAY.GE.289.AND.IDAY.LE.319)THEN ! Mid Oct - Mid Nov
              MONTH1=10
              MONTH2=11
              XDAY=IDAY-289
            ELSE IF(IDAY.GE.320.AND.IDAY.LE.349)THEN ! Mid Nov - Mid Dec
              MONTH1=11
              MONTH2=12
              XDAY=IDAY-320
            ELSE IF(IDAY.GE.350.OR.IDAY.LT.14)THEN ! Mid Nov - Mid Dec
              MONTH1=12
              MONTH2=1
              XDAY=IDAY-350
              IF(XDAY.LT.0)XDAY=IDAY
            ENDIF
C
            LIGHTNG(I)=MLIGHTNGGAT(I,MONTH1)+(REAL(XDAY)/30.0)*
     &                 (MLIGHTNGGAT(I,MONTH2)-MLIGHTNGGAT(I,MONTH1))
C
          ENDIF ! IF(CTEM2)  
C
855   CONTINUE       
C 
C     CALL CANADIAN TERRESTRIAL ECOSYSTEM MODEL WHICH OPERATES AT A
C     DAILY TIME STEP, AND USES DAILY ACCUMULATED VALUES OF VARIABLES
C     SIMULATED BY CLASS.
C
      IF (CTEM2) THEN
C
        CALL CTEM ( FCANCMXGAT, FSNOWACC_M,    SANDGAT,    CLAYGAT,   
     2                   ICAN,         ILG,          1,        NML,
     3                   IGND,         ICC,       IDAY,    RADJGAT,
     4          TCANOACCGAT_M,  TCANSACC_M, TBARCACC_M,TBARCSACC_M,
     5             TBARGACC_M, TBARGSACC_M, TAACCGAT_M,    DLZWGAT,
     6             ANCSVGAC_M,  ANCGVGAC_M, RMLCSVGA_M, RMLCGVGA_M,
     7                ZBTWGAT, THLIQCACC_M,THLIQGACC_M,     DELTAT,
     8             UVACCGAT_M,  VVACCGAT_M,    LIGHTNG,PRBFRHUCGAT,
     9            EXTNPROBGAT,   STDALNGAT,TBARACCGAT_M,     L2MAX,
     A               NOL2PFTS, PFCANCMXGAT, NFCANCMXGAT,  LNDUSEON,
     B            THICECACC_M,     SDEPGAT,    SPINFAST,   TODFRAC,  
     &                COMPETE,  NETRAD_GAT,  PREACC_GAT,  
     &                 POPDIN,      DOFIRE,   ISNDGAT,
     &                FAREGAT,      MOSAIC,
C    -------------- INPUTS USED BY CTEM ARE ABOVE THIS LINE ---------
     C            STEMMASSGAT, ROOTMASSGAT, LITRMASSGAT, GLEAFMASGAT,
     D            BLEAFMASGAT, SOILCMASGAT,    AILCGGAT,    AILCGAT,
     E               ZOLNCGAT,  RMATCTEMGAT,   RMATCGAT,  AILCBGAT,
     F            FLHRLOSSGAT,  PANDAYSGAT, LFSTATUSGAT, GRWTHEFFGAT,
     G            LYSTMMASGAT, LYROTMASGAT, TYMAXLAIGAT, VGBIOMASGAT,
     H            GAVGLTMSGAT, GAVGSCMSGAT, STMHRLOSGAT,     SLAIGAT,
     I             BMASVEGGAT, CMASVEGCGAT,  COLDDAYSGAT, ROTHRLOSGAT,
     J                FCANGAT,  ALVSCTMGAT,   ALIRCTMGAT,  GAVGLAIGAT,
     &               TCURMGAT, SRPCURYRGAT,  DFTCURYRGAT,    INIBOCLM,
     &              TMONTHGAT, ANPCPCURGAT,   ANPECURGAT,  GDD5CURGAT,
     &            SURMNCURGAT, DEFMNCURGAT,  SRPLSCURGAT, DEFCTCURGAT,
     &            GEREMORTGAT, INTRMORTGAT,   LAMBDAGAT,  LYGLFMASGAT,
     &            PFTEXISTGAT,
C    -------------- INPUTS UPDATED BY CTEM ARE ABOVE THIS LINE ------
     K                 NPPGAT,      NEPGAT, HETRORESGAT, AUTORESGAT,
     L            SOILRESPGAT,       RMGAT,       RGGAT,      NBPGAT,
     M              LITRESGAT,    SOCRESGAT,     GPPGAT, DSTCEMLSGAT,
     N            LITRFALLGAT,  HUMIFTRSGAT, VEGHGHTGAT, ROOTDPTHGAT,
     O                 RMLGAT,      RMSGAT,     RMRGAT,  TLTRLEAFGAT,
     P            TLTRSTEMGAT, TLTRROOTGAT, LEAFLITRGAT, ROOTTEMPGAT,
     Q             AFRLEAFGAT,  AFRSTEMGAT,  AFRROOTGAT, WTSTATUSGAT,
     R            LTSTATUSGAT, BURNFRACGAT, PROBFIREGAT, LUCEMCOMGAT,
     S            LUCLTRINGAT, LUCSOCINGAT,   NPPVEGGAT, GRCLAREAGAT,
     T            DSTCEMLS3GAT,PAICGAT,  SLAICGAT,
     U            EMIT_CO2GAT,  EMIT_COGAT,  EMIT_CH4GAT, EMIT_NMHCGAT,
     V             EMIT_H2GAT, EMIT_NOXGAT,  EMIT_N2OGAT, EMIT_PM25GAT,
     W            EMIT_TPMGAT,  EMIT_TCGAT,   EMIT_OCGAT,   EMIT_BCGAT,
     &            BURNVEGGAT,   CCGAT, MMGAT,
     &          RMLVEGACCGAT,    RMSVEGGAT,  RMRVEGGAT,  RGVEGGAT,
     &       VGBIOMAS_VEGGAT, GPPVEGGAT,  NEPVEGGAT,
     &           NLAT, NMOS, NML, ILMOS, JLMOS )
C    ---------------- OUTPUTS ARE LISTED ABOVE THIS LINE ------------
C

      ENDIF  !IF(CTEM2)
C
C     RESET MOSAIC ACCUMULATOR ARRAYS.
C
      DO 655 I=1,NML
         UVACCGAT_M(I)=0.0
655   CONTINUE
C
      IF (CTEM2) THEN
        DO 705 I = 1, NML
C
C         COMPETITITION RELATED VARIABLES ADDED BY Y. PENG \\
          FSINACC_GAT(I)=0.
          FLINACC_GAT(I)=0.     
          FLUTACC_GAT(I)=0.   
          ALSWACC_GAT(I)=0.
          ALLWACC_GAT(I)=0. 
          PREGACC_GAT(I)=0.
C         COMPETITITION RELATED VARIABLES ADDED BY Y. PENG //
C
          FSNOWACC_M(I)=0.0
          TCANOACCGAT_OUT(I)=TCANOACCGAT_M(I)
          TCANOACCGAT_M(I)=0.0
C
          TCANSACC_M(I)=0.0
          TAACCGAT_M(I)=0.0
          VVACCGAT_M(I)=0.0
C
          DO 715 J=1,IGND
             TBARACCGAT_M(I,J)=0.0    
             TBARCACC_M(I,J)=0.0
             TBARCSACC_M(I,J)=0.0
             TBARGACC_M(I,J)=0.0
             TBARGSACC_M(I,J)=0.0
             THLIQCACC_M(I,J)=0.0
             THLIQGACC_M(I,J)=0.0
             THICECACC_M(I,J)=0.0
715       CONTINUE
C
          DO 716 J = 1, ICC
            ANCSVGAC_M(I,J)=0.0
            ANCGVGAC_M(I,J)=0.0
            RMLCSVGA_M(I,J)=0.0
            RMLCGVGA_M(I,J)=0.0
716       CONTINUE
C
705     CONTINUE
      ENDIF  ! IF(CTEM2)
      ENDIF  ! IF(NCOUNT.EQ.NDAY)
C===================== CTEM ============================================ /
C
      CALL CLASSS (TBARROW,THLQROW,THICROW,GFLXROW,TSFSROW,
     1             TPNDROW,ZPNDROW,TBASROW,ALBSROW,TSNOROW,
     2             RHOSROW,SNOROW, TCANROW,RCANROW,SCANROW,
     3             GROROW, CMAIROW,TACROW, QACROW, WSNOROW,
     4             ILMOS,JLMOS,IWMOS,JWMOS,
     5             NML,NLAT,NMOS,ILG,IGND,ICAN,ICAN+1,
     6             TBARGAT,THLQGAT,THICGAT,GFLXGAT,TSFSGAT,
     7             TPNDGAT,ZPNDGAT,TBASGAT,ALBSGAT,TSNOGAT,
     8             RHOSGAT,SNOGAT, TCANGAT,RCANGAT,SCANGAT,
     9             GROGAT, CMAIGAT,TACGAT, QACGAT, WSNOGAT)

C    * SCATTER OPERATION ON DIAGNOSTIC VARIABLES SPLIT OUT OF 
C    * CLASSS FOR CONSISTENCY WITH GCM APPLICATIONS.
C
      DO 380 K=1,NML
          CDHROW (ILMOS(K),JLMOS(K))=CDHGAT (K)  
          CDMROW (ILMOS(K),JLMOS(K))=CDMGAT (K)  
          HFSROW (ILMOS(K),JLMOS(K))=HFSGAT (K)  
          TFXROW (ILMOS(K),JLMOS(K))=TFXGAT (K)  
          QEVPROW(ILMOS(K),JLMOS(K))=QEVPGAT(K)  
          QFSROW (ILMOS(K),JLMOS(K))=QFSGAT (K)  
          QFXROW (ILMOS(K),JLMOS(K))=QFXGAT (K)  
          PETROW (ILMOS(K),JLMOS(K))=PETGAT (K)  
          GAROW  (ILMOS(K),JLMOS(K))=GAGAT  (K)  
          EFROW  (ILMOS(K),JLMOS(K))=EFGAT  (K)  
          GTROW  (ILMOS(K),JLMOS(K))=GTGAT  (K)  
          QGROW  (ILMOS(K),JLMOS(K))=QGGAT  (K)  
          ALVSROW(ILMOS(K),JLMOS(K))=ALVSGAT(K)  
          ALIRROW(ILMOS(K),JLMOS(K))=ALIRGAT(K)  
          SFCTROW(ILMOS(K),JLMOS(K))=SFCTGAT(K)  
          SFCUROW(ILMOS(K),JLMOS(K))=SFCUGAT(K)  
          SFCVROW(ILMOS(K),JLMOS(K))=SFCVGAT(K)  
          SFCQROW(ILMOS(K),JLMOS(K))=SFCQGAT(K)  
          FSNOROW(ILMOS(K),JLMOS(K))=FSNOGAT(K)  
          FSGVROW(ILMOS(K),JLMOS(K))=FSGVGAT(K)  
          FSGSROW(ILMOS(K),JLMOS(K))=FSGSGAT(K)  
          FSGGROW(ILMOS(K),JLMOS(K))=FSGGGAT(K)  
          FLGVROW(ILMOS(K),JLMOS(K))=FLGVGAT(K)  
          FLGSROW(ILMOS(K),JLMOS(K))=FLGSGAT(K)  
          FLGGROW(ILMOS(K),JLMOS(K))=FLGGGAT(K)  
          HFSCROW(ILMOS(K),JLMOS(K))=HFSCGAT(K)  
          HFSSROW(ILMOS(K),JLMOS(K))=HFSSGAT(K)  
          HFSGROW(ILMOS(K),JLMOS(K))=HFSGGAT(K)  
          HEVCROW(ILMOS(K),JLMOS(K))=HEVCGAT(K)  
          HEVSROW(ILMOS(K),JLMOS(K))=HEVSGAT(K)  
          HEVGROW(ILMOS(K),JLMOS(K))=HEVGGAT(K)  
          HMFCROW(ILMOS(K),JLMOS(K))=HMFCGAT(K)  
          HMFNROW(ILMOS(K),JLMOS(K))=HMFNGAT(K)  
          HTCCROW(ILMOS(K),JLMOS(K))=HTCCGAT(K)  
          HTCSROW(ILMOS(K),JLMOS(K))=HTCSGAT(K)  
          PCFCROW(ILMOS(K),JLMOS(K))=PCFCGAT(K)  
          PCLCROW(ILMOS(K),JLMOS(K))=PCLCGAT(K)  
          PCPNROW(ILMOS(K),JLMOS(K))=PCPNGAT(K)  
          PCPGROW(ILMOS(K),JLMOS(K))=PCPGGAT(K)  
          QFGROW (ILMOS(K),JLMOS(K))=QFGGAT (K)  
          QFNROW (ILMOS(K),JLMOS(K))=QFNGAT (K)  
          QFCLROW(ILMOS(K),JLMOS(K))=QFCLGAT(K)  
          QFCFROW(ILMOS(K),JLMOS(K))=QFCFGAT(K)  
          ROFROW (ILMOS(K),JLMOS(K))=ROFGAT (K)  
          ROFOROW(ILMOS(K),JLMOS(K))=ROFOGAT(K)  
          ROFSROW(ILMOS(K),JLMOS(K))=ROFSGAT(K)  
          ROFBROW(ILMOS(K),JLMOS(K))=ROFBGAT(K)  
          TROFROW(ILMOS(K),JLMOS(K))=TROFGAT(K)  
          TROOROW(ILMOS(K),JLMOS(K))=TROOGAT(K)  
          TROSROW(ILMOS(K),JLMOS(K))=TROSGAT(K)  
          TROBROW(ILMOS(K),JLMOS(K))=TROBGAT(K)  
          ROFCROW(ILMOS(K),JLMOS(K))=ROFCGAT(K)  
          ROFNROW(ILMOS(K),JLMOS(K))=ROFNGAT(K)  
          ROVGROW(ILMOS(K),JLMOS(K))=ROVGGAT(K)  
          WTRCROW(ILMOS(K),JLMOS(K))=WTRCGAT(K)  
          WTRSROW(ILMOS(K),JLMOS(K))=WTRSGAT(K)  
          WTRGROW(ILMOS(K),JLMOS(K))=WTRGGAT(K)  
          DRROW  (ILMOS(K),JLMOS(K))=DRGAT  (K)  
          WTABROW(ILMOS(K),JLMOS(K))=WTABGAT(K)  
          ILMOROW(ILMOS(K),JLMOS(K))=ILMOGAT(K)  
          UEROW  (ILMOS(K),JLMOS(K))=UEGAT(K)  
          HBLROW (ILMOS(K),JLMOS(K))=HBLGAT(K)  
380   CONTINUE
C
      DO 390 L=1,IGND
      DO 390 K=1,NML
          HMFGROW(ILMOS(K),JLMOS(K),L)=HMFGGAT(K,L)
          HTCROW (ILMOS(K),JLMOS(K),L)=HTCGAT (K,L)
          QFCROW (ILMOS(K),JLMOS(K),L)=QFCGAT (K,L)
390   CONTINUE
C
      DO 430 M=1,50
          DO 420 L=1,6
              DO 410 K=1,NML
                  ITCTROW(ILMOS(K),JLMOS(K),L,M)=ITCTGAT(K,L,M)
410           CONTINUE
420       CONTINUE
430   CONTINUE
C

C
C===================== CTEM ============================================ \
C
      CALL CTEMS2(FCANCMXROW,RMATCROW,ZOLNCROW,PAICROW,
     1      AILCROW,     AILCGROW,    CMASVEGCROW,  SLAICROW,
     2      AILCGSROW,   FCANCSROW,   FCANCROW,     RMATCTEMROW,
     3      CO2CONCROW,  CO2I1CGROW,  CO2I1CSROW,   CO2I2CGROW,
     4      CO2I2CSROW,  XDIFFUS,     SLAIROW,      CFLUXCGROW,
     5      CFLUXCSROW,  ANCSVEGROW,  ANCGVEGROW,   RMLCSVEGROW,
     6      RMLCGVEGROW, CANRESROW,   SDEPROW,
     7      SANDROW,     CLAYROW,     ORGMROW,
     8      ANVEGROW,    RMLVEGROW,   TCANOACCROW_M,TBARACCROW_M,
     9      UVACCROW_M,  VVACCROW_M,  MLIGHTNGGRD,  PRBFRHUCGRD,
     A      EXTNPROBGRD, STDALNGRD,   PFCANCMXROW,  NFCANCMXROW,
     B      STEMMASSROW, ROOTMASSROW, LITRMASSROW,  GLEAFMASROW,
     C      BLEAFMASROW, SOILCMASROW, AILCBROW,     FLHRLOSSROW,
     D      PANDAYSROW,  LFSTATUSROW, GRWTHEFFROW,  LYSTMMASROW,
     E      LYROTMASROW, TYMAXLAIROW, VGBIOMASROW,  GAVGLTMSROW,
     F      STMHRLOSROW, BMASVEGROW,  COLDDAYSROW,  ROTHRLOSROW,
     G      ALVSCTMROW,  ALIRCTMROW,  GAVGLAIROW,   NPPROW,
     H      NEPROW,      HETRORESROW, AUTORESROW,   SOILRESPROW,
     I      RMROW,       RGROW,       NBPROW,       LITRESROW,
     J      SOCRESROW,   GPPROW,      DSTCEMLSROW,  LITRFALLROW,
     K      HUMIFTRSROW, VEGHGHTROW,  ROOTDPTHROW,  RMLROW,
     L      RMSROW,      RMRROW,      TLTRLEAFROW,  TLTRSTEMROW,
     M      TLTRROOTROW, LEAFLITRROW, ROOTTEMPROW,  AFRLEAFROW,
     N      AFRSTEMROW,  AFRROOTROW,  WTSTATUSROW,  LTSTATUSROW,
     O      BURNFRACROW, PROBFIREROW, LUCEMCOMROW,  LUCLTRINROW,
     P      LUCSOCINROW, NPPVEGROW,   GRCLAREAROW,  DSTCEMLS3ROW,
     Q      FAREROW,     GAVGSCMSROW, TCANOACCROW_OUT,
     &      RMLVEGACCROW, RMSVEGROW,  RMRVEGROW,    RGVEGROW,
     &      VGBIOMAS_VEGROW,GPPVEGROW,NEPVEGROW,AILCMINROW,AILCMAXROW,
     &      FCANROW,  
     &      EMIT_CO2ROW,  EMIT_COROW, EMIT_CH4ROW,  EMIT_NMHCROW,
     &      EMIT_H2ROW,   EMIT_NOXROW,EMIT_N2OROW,  EMIT_PM25ROW,
     &      EMIT_TPMROW,  EMIT_TCROW, EMIT_OCROW,   EMIT_BCROW,
C    ----
     R      ILMOS,       JLMOS,       IWMOS,        JWMOS,
     S      NML,         NLAT,        NMOS,         ILG, 
     T      IGND,        ICAN,        ICP1,         ICC,
     U      FCANCMXGAT,  RMATCGAT,    ZOLNCGAT,     PAICGAT,
     V      AILCGAT,     AILCGGAT,    CMASVEGCGAT,  SLAICGAT,
     W      AILCGSGAT,   FCANCSGAT,   FCANCGAT,     RMATCTEMGAT,
     X      CO2CONCGAT,  CO2I1CGGAT,  CO2I1CSGAT,   CO2I2CGGAT, 
     Y      CO2I2CSGAT,  XDIFFUSGAT,  SLAIGAT,      CFLUXCGGAT, 
     Z      CFLUXCSGAT,  ANCSVEGGAT,  ANCGVEGGAT,   RMLCSVEGGAT,
     1      RMLCGVEGGAT, CANRESGAT,   SDEPGAT,
     2      SANDGAT,     CLAYGAT,     ORGMGAT,
     3      ANVEGGAT,    RMLVEGGAT,   TCANOACCGAT_M,TBARACCGAT_M,
     4      UVACCGAT_M,  VVACCGAT_M,  MLIGHTNGGAT,  PRBFRHUCGAT,
     5      EXTNPROBGAT, STDALNGAT,   PFCANCMXGAT,  NFCANCMXGAT,
     6      STEMMASSGAT, ROOTMASSGAT, LITRMASSGAT,  GLEAFMASGAT,
     7      BLEAFMASGAT, SOILCMASGAT, AILCBGAT,     FLHRLOSSGAT,
     8      PANDAYSGAT,  LFSTATUSGAT, GRWTHEFFGAT,  LYSTMMASGAT,
     9      LYROTMASGAT, TYMAXLAIGAT, VGBIOMASGAT,  GAVGLTMSGAT,
     A      STMHRLOSGAT, BMASVEGGAT,  COLDDAYSGAT,  ROTHRLOSGAT,
     B      ALVSCTMGAT,  ALIRCTMGAT,  GAVGLAIGAT,   NPPGAT,
     C      NEPGAT,      HETRORESGAT, AUTORESGAT,   SOILRESPGAT,
     D      RMGAT,       RGGAT,       NBPGAT,       LITRESGAT,
     E      SOCRESGAT,   GPPGAT,      DSTCEMLSGAT,  LITRFALLGAT,
     F      HUMIFTRSGAT, VEGHGHTGAT,  ROOTDPTHGAT,  RMLGAT,
     G      RMSGAT,      RMRGAT,      TLTRLEAFGAT,  TLTRSTEMGAT,
     H      TLTRROOTGAT, LEAFLITRGAT, ROOTTEMPGAT,  AFRLEAFGAT,
     I      AFRSTEMGAT,  AFRROOTGAT,  WTSTATUSGAT,  LTSTATUSGAT,
     J      BURNFRACGAT, PROBFIREGAT, LUCEMCOMGAT,  LUCLTRINGAT,
     K      LUCSOCINGAT, NPPVEGGAT,   GRCLAREAGAT,  DSTCEMLS3GAT,
     L      FAREGAT,     GAVGSCMSGAT, TCANOACCGAT_OUT,
     &      RMLVEGACCGAT, RMSVEGGAT,  RMRVEGGAT,    RGVEGGAT,
     &      VGBIOMAS_VEGGAT,GPPVEGGAT,NEPVEGGAT,AILCMINGAT,AILCMAXGAT,
     &      FCANGAT,
     &      EMIT_CO2GAT,  EMIT_COGAT, EMIT_CH4GAT,  EMIT_NMHCGAT,
     &      EMIT_H2GAT,   EMIT_NOXGAT,EMIT_N2OGAT,  EMIT_PM25GAT,
     &      EMIT_TPMGAT,  EMIT_TCGAT, EMIT_OCGAT,   EMIT_BCGAT)
C
C===================== CTEM ============================================ /
C
C=======================================================================
C     * WRITE FIELDS FROM CURRENT TIME STEP TO OUTPUT FILES.

6100  FORMAT(1X,I4,I5,9F8.2,2F8.3,F12.4,2(A5,I2))
6200  FORMAT(1X,I4,I5,3(F8.2,2F6.3),F8.2,2F8.4,F8.2,F8.3,2(A5,I2))
6201  FORMAT(1X,I4,I5,5(F7.2,2F6.3),2(A5,I2))
6300  FORMAT(1X,I4,I5,3F9.2,F8.2,F10.2,E12.3,2F12.3,A5,I2)   
6400  FORMAT(1X,I2,I3,I5,I6,9F8.2,2F7.3,E11.3,F8.2,F12.4,F9.2,2(A5,I2))
6500  FORMAT(1X,I2,I3,I5,I6,3(F7.2,2F6.3),F8.2,2F8.4,F8.2,F8.3,
     &    2(A5,I2))
6600  FORMAT(1X,I2,I3,I5,2F10.2,E12.3,F10.2,F8.2,F10.2,E12.3,2(A5,I2))
6501  FORMAT(1X,I2,I3,I5,I6,5(F7.2,2F6.3),2(A5,I2))
6601  FORMAT(1X,I2,I3,I5,I6,7(F7.2,2F6.3),10F9.4,2(A5,I2))  
6700  FORMAT(1X,I2,I3,I5,I6,2X,12E11.4,2(A5,I2))       
6800  FORMAT(1X,I2,I3,I5,I6,2X,22(F10.4,2X),2(A5,I2))   
6900  FORMAT(1X,I2,I3,I5,I6,2X,18(E12.4,2X),2(A5,I2))   
C
C===================== CTEM ============================================ \
C
C  FC,FG,FCS AND FGS ARE ONE_DIMENSIONAL IN CLASS SUBROUTINES
C  THE TRANSFORMATIONS HERE TO GRID_CELL MEAN FC_G,FG_G,FCS_G AND FGS_G  
C  ARE ONLY APPLICABLE WHEN NLTEST=1 (E.G., ONE GRID CELL)
C
      DO I=1,NLTEST
        FC_G(I)=0.0
        FG_G(I)=0.0
        FCS_G(I)=0.0
        FGS_G(I)=0.0 
        DO M=1,NMTEST
          FC_G(I)=FC_G(I)+FC(M)
          FG_G(I)=FG_G(I)+FG(M)
          FCS_G(I)=FCS_G(I)+FCS(M)
          FGS_G(I)=FGS_G(I)+FGS(M)
        ENDDO
      ENDDO
C
      IF (.NOT. PARALLELRUN) THEN ! STAND ALONE MODE, INCLUDE HALF-HOURLY 
C                                 ! OUTPUT FOR CLASS & CTEM
C
C===================== CTEM =====================================/
      DO 450 I=1,NLTEST
C===================== CTEM =====================================\
C       INITIALIZATION OF VARIOUS GRID-AVERAGED VARIABLES
        FSSTAR_G    =0.0
        FLSTAR_G    =0.0
        QH_G        =0.0
        QE_G        =0.0
        SNOMLT_G    =0.0
        BEG_G       =0.0
        GTOUT_G     =0.0
        SNOROW_G(I) =0.0
        RHOSROW_G(I)=0.0
        WSNOROW_G(I)=0.0
        ALTOT_G     =0.0
        ROFROW_G(I) =0.0
        TPN_G       =0.0
        ZPNDROW_G(I)=0.0
C
        DO J=1,IGND
         TBARROW_G(I,J)=0.0
         THLQROW_G(I,J)=0.0
         THICROW_G(I,J)=0.0
         GFLXROW_G(I,J)=0.0
        ENDDO
C
        TCN_G=0.0
        RCANROW_G(I) =0.0
        SCANROW_G(I) =0.0
        TSN_G=0.0
        ZSN_G=0.0
        TROFROW_G(I)=0.0
        TROOROW_G(I)=0.0
        TROSROW_G(I)=0.0
        TROBROW_G(I)=0.0
        ROFOROW_G(I)=0.0
        ROFSROW_G(I)=0.0
        ROFBROW_G(I)=0.0
        FSGVROW_G(I)=0.0
        FSGSROW_G(I)=0.0
        FSGGROW_G(I)=0.0
        FLGVROW_G(I)=0.0
        FLGSROW_G(I)=0.0
        FLGGROW_G(I)=0.0
        HFSCROW_G(I)=0.0
        HFSSROW_G(I)=0.0
        HFSGROW_G(I)=0.0
        HEVCROW_G(I)=0.0
        HEVSROW_G(I)=0.0
        HEVGROW_G(I)=0.0
        HMFCROW_G(I)=0.0
        HMFNROW_G(I)=0.0
C
        DO J=1,IGND    
         HMFGROW_G(I,J)=0.0
         HTCROW_G(I,J)=0.0
        ENDDO
C               
        HTCCROW_G(I)=0.0
        HTCSROW_G(I)=0.0
        PCFCROW_G(I)=0.0
        PCLCROW_G(I)=0.0
        PCPNROW_G(I)=0.0
        PCPGROW_G(I)=0.0
        QFCFROW_G(I)=0.0
        QFCLROW_G(I)=0.0
        QFNROW_G(I)=0.0
        QFGROW_G(I)=0.0
C       
        DO J=1,IGND    
         QFCROW_G(I,J)=0.0
        ENDDO        
C       
        ROFCROW_G(I)=0.0
        ROFNROW_G(I)=0.0
        WTRCROW_G(I)=0.0
        WTRSROW_G(I)=0.0
        WTRGROW_G(I)=0.0
C
       IF (CTEM1) THEN
          DO J=1,ICC
            ANVEGROW_G(I,J)=0.0
            RMLVEGROW_G(I,J)=0.0
          ENDDO
       ENDIF   !IF (CTEM1) 
C
C===================== CTEM =====================================/
C
       DO 425 M=1,NMTEST
          IF(FSDOWN.GT.0.0) THEN
              ALTOT=(ALVSROW(I,M)+ALIRROW(I,M))/2.0
          ELSE
              ALTOT=0.0
          ENDIF
          FSSTAR=FSDOWN*(1.0-ALTOT)
          FLSTAR=FDLGRD(I)-SBC*GTROW(I,M)**4
          QH=HFSROW(I,M)
          QE=QEVPROW(I,M)
          BEG=FSSTAR+FLSTAR-QH-QE
C         BEG=GFLXGAT(1,1)
          SNOMLT=HMFNROW(I,M)
          IF(RHOSROW(I,M).GT.0.0) THEN
              ZSN=SNOROW(I,M)/RHOSROW(I,M)
          ELSE
              ZSN=0.0
          ENDIF
          IF(TCANROW(I,M).GT.0.01) THEN
              TCN=TCANROW(I,M)-TFREZ
          ELSE
              TCN=0.0
          ENDIF
          IF(TSNOROW(I,M).GT.0.01) THEN
              TSN=TSNOROW(I,M)-TFREZ
          ELSE
              TSN=0.0
          ENDIF
          IF(TPNDROW(I,M).GT.0.01) THEN
              TPN=TPNDROW(I,M)-TFREZ
          ELSE
              TPN=0.0
          ENDIF
          GTOUT=GTROW(I,M)-TFREZ
C 
C===================== CTEM =====================================\
C         START WRITING OUTPUT
C
          IYD=IYEAR*1000+IDAY                         
          IF ((IYD.GE.JHHST).AND.(IYD.LE.JHHEND)) THEN 
C===================== CTEM =====================================/
          WRITE(64,6400) IHOUR,IMIN,IDAY,IYEAR,FSSTAR,FLSTAR,QH,QE,
     1                   SNOMLT,BEG,GTOUT,SNOROW(I,M),RHOSROW(I,M),
     2                   WSNOROW(I,M),ALTOT,ROFROW(I,M),
     3                   TPN,ZPNDROW(I,M),CANRESROW(I,M),'TILE',M
          IF(IGND.GT.3) THEN
C===================== CTEM =====================================\
              WRITE(65,6500) IHOUR,IMIN,IDAY,IYEAR,(TBARROW(I,M,J)-
     1                   TFREZ,THLQROW(I,M,J),THICROW(I,M,J),J=1,3),
     2                   TCN,RCANROW(I,M),SCANROW(I,M),TSN,ZSN,'TILE',M
              WRITE(66,6601) IHOUR,IMIN,IDAY,IYEAR,(TBARROW(I,M,J)-
     1                   TFREZ,THLQROW(I,M,J),THICROW(I,M,J),J=4,10),
     2                   (GFLXROW(I,M,J),J=1,10),
     3                   'TILE',M
          ELSE
              WRITE(65,6500) IHOUR,IMIN,IDAY,IYEAR,(TBARROW(I,M,J)-
     1                   TFREZ,THLQROW(I,M,J),THICROW(I,M,J),J=1,3),
     2                   TCN,RCANROW(I,M),SCANROW(I,M),TSN,ZSN,'TILE',M
C===================== CTEM =====================================/
          ENDIF
C
          WRITE(67,6700) IHOUR,IMIN,IDAY,IYEAR,                    
     1                   TROFROW(I,M),TROOROW(I,M),TROSROW(I,M),
     2                   TROBROW(I,M),ROFROW(I,M),ROFOROW(I,M),
     3                   ROFSROW(I,M),ROFBROW(I,M),
     4                   FCS(M),FGS(M),FC(M),FG(M),'TILE',M
          WRITE(68,6800) IHOUR,IMIN,IDAY,IYEAR,                    
     1                   FSGVROW(I,M),FSGSROW(I,M),FSGGROW(I,M),
     2                   FLGVROW(I,M),FLGSROW(I,M),FLGGROW(I,M),
     3                   HFSCROW(I,M),HFSSROW(I,M),HFSGROW(I,M),
     4                   HEVCROW(I,M),HEVSROW(I,M),HEVGROW(I,M),
     5                   HMFCROW(I,M),HMFNROW(I,M),
     6                   (HMFGROW(I,M,J),J=1,3),
     7                   HTCCROW(I,M),HTCSROW(I,M),
     8                   (HTCROW(I,M,J),J=1,3),'TILE',M
          WRITE(69,6900) IHOUR,IMIN,IDAY,IYEAR,                   
     1                   PCFCROW(I,M),PCLCROW(I,M),PCPNROW(I,M),
     2                   PCPGROW(I,M),QFCFROW(I,M),QFCLROW(I,M),
     3                   QFNROW(I,M),QFGROW(I,M),(QFCROW(I,M,J),J=1,3),
     4                   ROFCROW(I,M),ROFNROW(I,M),ROFOROW(I,M),
     5                   ROFROW(I,M),WTRCROW(I,M),WTRSROW(I,M),
     6                   WTRGROW(I,M),'TILE',M
C===================== CTEM =====================================\
C
          ENDIF ! IF ((IYD.GE.JHHST).AND.(IYD.LE.JHHEND))
C
C         WRITE HALF-HOURLY CTEM RESULTS TO FILE *.CT01H
C
C         NET PHOTOSYNTHETIC RATES AND LEAF MAINTENANCE RESPIRATION FOR
C         EACH PFT. HOWEVER, IF CTEM2 OPTION IS ON THEN PHYSYN SUBROUTINE
C         IS USING STORAGE LAI WHILE ACTUAL LAI IS ZERO. IF ACTUAL LAI IS
C         ZERO THEN WE MAKE ANVEG AND RMLVEG ZERO AS WELL BECAUSE THESE
C         ARE IMAGINARY JUST LIKE STORAGE LAI. NOTE THAT ANVEG AND RMLVEG
C         ARE NOT PASSED TO CTEM. RATHER ANCSVEG, ANCGVEG, RMLCSVEG, AND
C         RMLCGVEG ARE PASSED.
C
          IF (CTEM1) THEN
            DO 760 J = 1,ICC
             IF(AILCGROW(I,M,J).LE.0.0) THEN       
                ANVEGROW(I,M,J)=0.0
                RMLVEGROW(I,M,J)=0.0
              ELSE                                 
                ANVEGROW(I,M,J)=ANVEGROW(I,M,J)    
                RMLVEGROW(I,M,J)=RMLVEGROW(I,M,J)  
              ENDIF
760         CONTINUE
C
              IYD=IYEAR*1000+IDAY                  
              IF ((IYD.GE.JHHST).AND.(IYD.LE.JHHEND)) THEN 
              WRITE(71,7200)IHOUR,IMIN,IDAY,(ANVEGROW(I,M,J),J=1,ICC),
     1                    (RMLVEGROW(I,M,J),J=1,ICC),'TILE',M
              ENDIF
          ENDIF  ! IF(CTEM1) 
C
7200      FORMAT(1X,I2,1X,I2,I5,9F11.3,9F11.3,2(A5,I2))
C
          IF (CTEM1) THEN
            DO J = 1,ICC
              ANVEGROW_G(I,J)=ANVEGROW_G(I,J)+ANVEGROW(I,M,J)
     1                                        *FAREROW(I,M)
              RMLVEGROW_G(I,J)=RMLVEGROW_G(I,J)+RMLVEGROW(I,M,J)
     1                                         *FAREROW(I,M)
            ENDDO
          ENDIF   
C
          FSSTAR_G    =FSSTAR_G + FSSTAR*FAREROW(I,M)
          FLSTAR_G    =FLSTAR_G + FLSTAR*FAREROW(I,M)
          QH_G        =QH_G     + QH*FAREROW(I,M)
          QE_G        =QE_G     + QE*FAREROW(I,M)
          SNOMLT_G    =SNOMLT_G + SNOMLT*FAREROW(I,M)
          BEG_G       =BEG_G    + BEG*FAREROW(I,M)
          GTOUT_G     =GTOUT_G  + GTOUT*FAREROW(I,M)
          TCN_G=TCN_G + TCN*FAREROW(I,M)
          TSN_G=TSN_G + TSN*FAREROW(I,M)
          ZSN_G=ZSN_G + ZSN*FAREROW(I,M)
          ALTOT_G     =ALTOT_G   + ALTOT*FAREROW(I,M)
          TPN_G       =TPN_G       + TPN*FAREROW(I,M)
C
          DO J=1,IGND
            TBARROW_G(I,J)=TBARROW_G(I,J) + TBARROW(I,M,J)*FAREROW(I,M)
            THLQROW_G(I,J)=THLQROW_G(I,J) + THLQROW(I,M,J)*FAREROW(I,M)
            THICROW_G(I,J)=THICROW_G(I,J) + THICROW(I,M,J)*FAREROW(I,M)
            GFLXROW_G(I,J)=GFLXROW_G(I,J) + GFLXROW(I,M,J)*FAREROW(I,M)
            HMFGROW_G(I,J)=HMFGROW_G(I,J) + HMFGROW(I,M,J)*FAREROW(I,M)
            HTCROW_G(I,J)=HTCROW_G(I,J) + HTCROW(I,M,J)*FAREROW(I,M)
            QFCROW_G(I,J)=QFCROW_G(I,J) + QFCROW(I,M,J)*FAREROW(I,M)
          ENDDO
C
          ZPNDROW_G(I)=ZPNDROW_G(I) + ZPNDROW(I,M)*FAREROW(I,M) 
          RHOSROW_G(I)=RHOSROW_G(I) + RHOSROW(I,M)*FAREROW(I,M)
          WSNOROW_G(I)=WSNOROW_G(I) + WSNOROW(I,M)*FAREROW(I,M)
          RCANROW_G(I)=RCANROW_G(I) + RCANROW(I,M)*FAREROW(I,M)
          SCANROW_G(I)=SCANROW_G(I) + SCANROW(I,M)*FAREROW(I,M)
          TROFROW_G(I)=TROFROW_G(I) + TROFROW(I,M)*FAREROW(I,M)
          TROOROW_G(I)=TROOROW_G(I) + TROOROW(I,M)*FAREROW(I,M)
          TROSROW_G(I)=TROSROW_G(I) + TROSROW(I,M)*FAREROW(I,M)
          TROBROW_G(I)=TROBROW_G(I) + TROBROW(I,M)*FAREROW(I,M)
          ROFOROW_G(I)=ROFOROW_G(I) + ROFOROW(I,M)*FAREROW(I,M)
          ROFSROW_G(I)=ROFSROW_G(I) + ROFSROW(I,M)*FAREROW(I,M)
          ROFBROW_G(I)=ROFBROW_G(I) + ROFBROW(I,M)*FAREROW(I,M)
          FSGVROW_G(I)=FSGVROW_G(I) + FSGVROW(I,M)*FAREROW(I,M)
          FSGSROW_G(I)=FSGSROW_G(I) + FSGSROW(I,M)*FAREROW(I,M)
          FSGGROW_G(I)=FSGGROW_G(I) + FSGGROW(I,M)*FAREROW(I,M)
          FLGVROW_G(I)=FLGVROW_G(I) + FLGVROW(I,M)*FAREROW(I,M)
          FLGSROW_G(I)=FLGSROW_G(I) + FLGSROW(I,M)*FAREROW(I,M)
          FLGGROW_G(I)=FLGGROW_G(I) + FLGGROW(I,M)*FAREROW(I,M)
          HFSCROW_G(I)=HFSCROW_G(I) + HFSCROW(I,M)*FAREROW(I,M)
          HFSSROW_G(I)=HFSSROW_G(I) + HFSSROW(I,M)*FAREROW(I,M)
          HFSGROW_G(I)=HFSGROW_G(I) + HFSGROW(I,M)*FAREROW(I,M)
          HEVCROW_G(I)=HEVCROW_G(I) + HEVCROW(I,M)*FAREROW(I,M)
          HEVSROW_G(I)=HEVSROW_G(I) + HEVSROW(I,M)*FAREROW(I,M)
          HEVGROW_G(I)=HEVGROW_G(I) + HEVGROW(I,M)*FAREROW(I,M)
          HMFCROW_G(I)=HMFCROW_G(I) + HMFCROW(I,M)*FAREROW(I,M)
          HMFNROW_G(I)=HMFNROW_G(I) + HMFNROW(I,M)*FAREROW(I,M)               
          HTCCROW_G(I)=HTCCROW_G(I) + HTCCROW(I,M)*FAREROW(I,M)
          HTCSROW_G(I)=HTCSROW_G(I) + HTCSROW(I,M)*FAREROW(I,M)
          PCFCROW_G(I)=PCFCROW_G(I) + PCFCROW(I,M)*FAREROW(I,M)
          PCLCROW_G(I)=PCLCROW_G(I) + PCLCROW(I,M)*FAREROW(I,M)
          PCPNROW_G(I)=PCPNROW_G(I) + PCPNROW(I,M)*FAREROW(I,M)
          PCPGROW_G(I)=PCPGROW_G(I) + PCPGROW(I,M)*FAREROW(I,M)
          QFCFROW_G(I)=QFCFROW_G(I) + QFCFROW(I,M)*FAREROW(I,M)
          QFCLROW_G(I)=QFCLROW_G(I) + QFCLROW(I,M)*FAREROW(I,M)
          ROFCROW_G(I)=ROFCROW_G(I) + ROFCROW(I,M)*FAREROW(I,M)
          ROFNROW_G(I)=ROFNROW_G(I) + ROFNROW(I,M)*FAREROW(I,M)
          WTRCROW_G(I)=WTRCROW_G(I) + WTRCROW(I,M)*FAREROW(I,M)
          WTRSROW_G(I)=WTRSROW_G(I) + WTRSROW(I,M)*FAREROW(I,M)
          WTRGROW_G(I)=WTRGROW_G(I) + WTRGROW(I,M)*FAREROW(I,M)
          QFNROW_G(I) =QFNROW_G(I) + QFNROW(I,M)*FAREROW(I,M)
          QFGROW_G(I) =QFGROW_G(I) + QFGROW(I,M)*FAREROW(I,M)
          ROFROW_G(I) =ROFROW_G(I) + ROFROW(I,M)*FAREROW(I,M)
          SNOROW_G(I) =SNOROW_G(I) + SNOROW(I,M)*FAREROW(I,M)
C
C======================== CTEM =====================================/
425    CONTINUE
C===================== CTEM =====================================\
C      WRITE CTEM OUTPUT FILES
C
       IF (CTEM1) THEN
           IF ((IYD.GE.JHHST).AND.(IYD.LE.JHHEND)) THEN  
           WRITE(711,7200)IHOUR,IMIN,IDAY,(ANVEGROW_G(I,J),J=1,ICC),
     1                 (RMLVEGROW_G(I,J),J=1,ICC)
           ENDIF   !IF ((IYD.GE.JHHST).AND.(IYD.LE.JHHEND)) THEN 
       ENDIF   !IF (CTEM1) THEN

       IF ((IYD.GE.JHHST).AND.(IYD.LE.JHHEND)) THEN 
         WRITE(641,6400) IHOUR,IMIN,IDAY,IYEAR,FSSTAR_G,FLSTAR_G,QH_G,
     1      QE_G,SNOMLT_G,BEG_G,GTOUT_G,SNOROW_G(I),RHOSROW_G(I),
     2                   WSNOROW_G(I),ALTOT_G,ROFROW_G(I),
     3                   TPN_G,ZPNDROW_G(I)
         WRITE(651,6500) IHOUR,IMIN,IDAY,IYEAR,(TBARROW_G(I,J)-
     1                   TFREZ,THLQROW_G(I,J),THICROW_G(I,J),J=1,3),
     2                   TCN_G,RCANROW_G(I),SCANROW_G(I),TSN_G,ZSN_G
C
         IF(IGND.GT.3) THEN
          WRITE(661,6601) IHOUR,IMIN,IDAY,IYEAR,(TBARROW_G(I,J)-
     1                   TFREZ,THLQROW_G(I,J),THICROW_G(I,J),J=4,10),
     2                   (GFLXROW_G(I,J),J=1,10)
         ELSE
          WRITE(661,6600) IHOUR,IMIN,IDAY,FSDOWN,FDLGRD(I),PREGRD(I),
     1                   TAGRD(I)-TFREZ,UVGRD(I),PRESGRD(I),QAGRD(I)
         ENDIF
C
         WRITE(671,6700) IHOUR,IMIN,IDAY,IYEAR,                    
     &                   TROFROW_G(I),TROOROW_G(I),TROSROW_G(I),
     1                   TROBROW_G(I),ROFROW_G(I),ROFOROW_G(I),
     2                   ROFSROW_G(I),ROFBROW_G(I),
     3                   FCS_G(I),FGS_G(I),FC_G(I),FG_G(I)
         WRITE(681,6800) IHOUR,IMIN,IDAY,IYEAR,                   
     &                   FSGVROW_G(I),FSGSROW_G(I),FSGGROW_G(I),
     1                   FLGVROW_G(I),FLGSROW_G(I),FLGGROW_G(I),
     2                   HFSCROW_G(I),HFSSROW_G(I),HFSGROW_G(I),
     3                   HEVCROW_G(I),HEVSROW_G(I),HEVGROW_G(I),
     4                   HMFCROW_G(I),HMFNROW_G(I),
     5                   (HMFGROW_G(I,J),J=1,3),
     6                   HTCCROW_G(I),HTCSROW_G(I),
     7                   (HTCROW_G(I,J),J=1,3)
         WRITE(691,6900) IHOUR,IMIN,IDAY,IYEAR,                   
     &                   PCFCROW_G(I),PCLCROW_G(I),PCPNROW_G(I),
     1                   PCPGROW_G(I),QFCFROW_G(I),QFCLROW_G(I),
     2                   QFNROW_G(I),QFGROW_G(I),(QFCROW_G(I,J),J=1,3),
     3                   ROFCROW_G(I),ROFNROW_G(I),ROFOROW_G(I),
     4                   ROFROW_G(I),WTRCROW_G(I),WTRSROW_G(I),
     5                   WTRGROW_G(I)
C
       ENDIF ! IF ((IYD.GE.JHHST).AND.(IYD.LE.JHHEND))
C===================== CTEM =====================================/
450   CONTINUE
C
C===================== CTEM =====================================\

      ENDIF ! NOT PARALLELRUN
C===================== CTEM =====================================/
C
C=======================================================================
C     * CALCULATE GRID CELL AVERAGE DIAGNOSTIC FIELDS.
C
C===================== CTEM =====================================\

      IF(.NOT.PARALLELRUN) THEN ! STAND ALONE MODE, INCLUDES 
C                               ! DIAGNOSTIC FIELDS
C===================== CTEM =====================================/
C
      DO 525 I=1,NLTEST
          CDHGRD(I)=0.
          CDMGRD(I)=0.
          HFSGRD(I)=0.
          TFXGRD(I)=0.
          QEVPGRD(I)=0.
          QFSGRD(I)=0.
          QFXGRD(I)=0.
          PETGRD(I)=0.
          GAGRD(I)=0.
          EFGRD(I)=0.
          GTGRD(I)=0.
          QGGRD(I)=0.
          TSFGRD(I)=0.
          ALVSGRD(I)=0.
          ALIRGRD(I)=0.
          SFCTGRD(I)=0.
          SFCUGRD(I)=0.
          SFCVGRD(I)=0.
          SFCQGRD(I)=0.
          FSNOGRD(I)=0.
          FSGVGRD(I)=0.
          FSGSGRD(I)=0.
          FSGGGRD(I)=0.
          FLGVGRD(I)=0.
          FLGSGRD(I)=0.
          FLGGGRD(I)=0.
          HFSCGRD(I)=0.
          HFSSGRD(I)=0.
          HFSGGRD(I)=0.
          HEVCGRD(I)=0.
          HEVSGRD(I)=0.
          HEVGGRD(I)=0.
          HMFCGRD(I)=0.
          HMFNGRD(I)=0.
          HTCCGRD(I)=0.
          HTCSGRD(I)=0.
          PCFCGRD(I)=0.
          PCLCGRD(I)=0.
          PCPNGRD(I)=0.
          PCPGGRD(I)=0.
          QFGGRD(I)=0.
          QFNGRD(I)=0.
          QFCLGRD(I)=0.
          QFCFGRD(I)=0.
          ROFGRD(I)=0.
          ROFOGRD(I)=0.
          ROFSGRD(I)=0.
          ROFBGRD(I)=0.
          ROFCGRD(I)=0.
          ROFNGRD(I)=0.
          ROVGGRD(I)=0.
          WTRCGRD(I)=0.
          WTRSGRD(I)=0.
          WTRGGRD(I)=0.
          DRGRD(I)=0.
          WTABGRD(I)=0.
          ILMOGRD(I)=0.
          UEGRD(I)=0.
          HBLGRD(I)=0.
          DO 500 J=1,IGND
              HMFGGRD(I,J)=0.
              HTCGRD(I,J)=0.
              QFCGRD(I,J)=0.
              GFLXGRD(I,J)=0.
500       CONTINUE
525   CONTINUE
C
      DO 600 I=1,NLTEST
      DO 575 M=1,NMTEST
          CDHGRD(I)=CDHGRD(I)+CDHROW(I,M)*FAREROW(I,M)
          CDMGRD(I)=CDMGRD(I)+CDMROW(I,M)*FAREROW(I,M)
          HFSGRD(I)=HFSGRD(I)+HFSROW(I,M)*FAREROW(I,M)
          TFXGRD(I)=TFXGRD(I)+TFXROW(I,M)*FAREROW(I,M)
          QEVPGRD(I)=QEVPGRD(I)+QEVPROW(I,M)*FAREROW(I,M)
          QFSGRD(I)=QFSGRD(I)+QFSROW(I,M)*FAREROW(I,M)
          QFXGRD(I)=QFXGRD(I)+QFXROW(I,M)*FAREROW(I,M)
          PETGRD(I)=PETGRD(I)+PETROW(I,M)*FAREROW(I,M)
          GAGRD(I)=GAGRD(I)+GAROW(I,M)*FAREROW(I,M)
          EFGRD(I)=EFGRD(I)+EFROW(I,M)*FAREROW(I,M)
          GTGRD(I)=GTGRD(I)+GTROW(I,M)*FAREROW(I,M)
          QGGRD(I)=QGGRD(I)+QGROW(I,M)*FAREROW(I,M)
          TSFGRD(I)=TSFGRD(I)+TSFROW(I,M)*FAREROW(I,M)
          ALVSGRD(I)=ALVSGRD(I)+ALVSROW(I,M)*FAREROW(I,M)
          ALIRGRD(I)=ALIRGRD(I)+ALIRROW(I,M)*FAREROW(I,M)
          SFCTGRD(I)=SFCTGRD(I)+SFCTROW(I,M)*FAREROW(I,M)
          SFCUGRD(I)=SFCUGRD(I)+SFCUROW(I,M)*FAREROW(I,M)
          SFCVGRD(I)=SFCVGRD(I)+SFCVROW(I,M)*FAREROW(I,M)
          SFCQGRD(I)=SFCQGRD(I)+SFCQROW(I,M)*FAREROW(I,M)
          FSNOGRD(I)=FSNOGRD(I)+FSNOROW(I,M)*FAREROW(I,M)
          FSGVGRD(I)=FSGVGRD(I)+FSGVROW(I,M)*FAREROW(I,M)
          FSGSGRD(I)=FSGSGRD(I)+FSGSROW(I,M)*FAREROW(I,M)
          FSGGGRD(I)=FSGGGRD(I)+FSGGROW(I,M)*FAREROW(I,M)
          FLGVGRD(I)=FLGVGRD(I)+FLGVROW(I,M)*FAREROW(I,M)
          FLGSGRD(I)=FLGSGRD(I)+FLGSROW(I,M)*FAREROW(I,M)
          FLGGGRD(I)=FLGGGRD(I)+FLGGROW(I,M)*FAREROW(I,M)
          HFSCGRD(I)=HFSCGRD(I)+HFSCROW(I,M)*FAREROW(I,M)
          HFSSGRD(I)=HFSSGRD(I)+HFSSROW(I,M)*FAREROW(I,M)
          HFSGGRD(I)=HFSGGRD(I)+HFSGROW(I,M)*FAREROW(I,M)
          HEVCGRD(I)=HEVCGRD(I)+HEVCROW(I,M)*FAREROW(I,M)
          HEVSGRD(I)=HEVSGRD(I)+HEVSROW(I,M)*FAREROW(I,M)
          HEVGGRD(I)=HEVGGRD(I)+HEVGROW(I,M)*FAREROW(I,M)
          HMFCGRD(I)=HMFCGRD(I)+HMFCROW(I,M)*FAREROW(I,M)
          HMFNGRD(I)=HMFNGRD(I)+HMFNROW(I,M)*FAREROW(I,M)
          HTCCGRD(I)=HTCCGRD(I)+HTCCROW(I,M)*FAREROW(I,M)
          HTCSGRD(I)=HTCSGRD(I)+HTCSROW(I,M)*FAREROW(I,M)
          PCFCGRD(I)=PCFCGRD(I)+PCFCROW(I,M)*FAREROW(I,M)
          PCLCGRD(I)=PCLCGRD(I)+PCLCROW(I,M)*FAREROW(I,M)
          PCPNGRD(I)=PCPNGRD(I)+PCPNROW(I,M)*FAREROW(I,M)
          PCPGGRD(I)=PCPGGRD(I)+PCPGROW(I,M)*FAREROW(I,M)
          QFGGRD(I)=QFGGRD(I)+QFGROW(I,M)*FAREROW(I,M)
          QFNGRD(I)=QFNGRD(I)+QFNROW(I,M)*FAREROW(I,M)
          QFCLGRD(I)=QFCLGRD(I)+QFCLROW(I,M)*FAREROW(I,M)
          QFCFGRD(I)=QFCFGRD(I)+QFCFROW(I,M)*FAREROW(I,M)
          ROFGRD(I)=ROFGRD(I)+ROFROW(I,M)*FAREROW(I,M)
          ROFOGRD(I)=ROFOGRD(I)+ROFOROW(I,M)*FAREROW(I,M)
          ROFSGRD(I)=ROFSGRD(I)+ROFSROW(I,M)*FAREROW(I,M)
          ROFBGRD(I)=ROFBGRD(I)+ROFBROW(I,M)*FAREROW(I,M)
          ROFCGRD(I)=ROFCGRD(I)+ROFCROW(I,M)*FAREROW(I,M)
          ROFNGRD(I)=ROFNGRD(I)+ROFNROW(I,M)*FAREROW(I,M)
          ROVGGRD(I)=ROVGGRD(I)+ROVGROW(I,M)*FAREROW(I,M)
          WTRCGRD(I)=WTRCGRD(I)+WTRCROW(I,M)*FAREROW(I,M)
          WTRSGRD(I)=WTRSGRD(I)+WTRSROW(I,M)*FAREROW(I,M)
          WTRGGRD(I)=WTRGGRD(I)+WTRGROW(I,M)*FAREROW(I,M)
          DRGRD(I)=DRGRD(I)+DRROW(I,M)*FAREROW(I,M)
          WTABGRD(I)=WTABGRD(I)+WTABROW(I,M)*FAREROW(I,M)
          ILMOGRD(I)=ILMOGRD(I)+ILMOROW(I,M)*FAREROW(I,M)
          UEGRD(I)=UEGRD(I)+UEROW(I,M)*FAREROW(I,M)
          HBLGRD(I)=HBLGRD(I)+HBLROW(I,M)*FAREROW(I,M)
          DO 550 J=1,IGND
              HMFGGRD(I,J)=HMFGGRD(I,J)+HMFGROW(I,M,J)*FAREROW(I,M)        
              HTCGRD(I,J)=HTCGRD(I,J)+HTCROW(I,M,J)*FAREROW(I,M)        
              QFCGRD(I,J)=QFCGRD(I,J)+QFCROW(I,M,J)*FAREROW(I,M)        
              GFLXGRD(I,J)=GFLXGRD(I,J)+GFLXROW(I,M,J)*FAREROW(I,M)        
550       CONTINUE
575   CONTINUE
600   CONTINUE
C
C===================== CTEM =====================================\

      ENDIF ! NOT PARALLELRUN, FOR DIAGNOSTIC FIELDS
C
      IF(.NOT.PARALLELRUN) THEN ! STAND ALONE MODE, INCLUDES DAILY OUTPUT FOR CLASS
C===================== CTEM =====================================/
C
C     * ACCUMULATE OUTPUT DATA FOR DIURNALLY AVERAGED FIELDS. BOTH GRID
C       MEAN AND MOSAIC MEAN
C
      DO 675 I=1,NLTEST
      DO 650 M=1,NMTEST
          PREACC(I)=PREACC(I)+PREGRD(I)*FAREROW(I,M)*DELT
          GTACC(I)=GTACC(I)+GTROW(I,M)*FAREROW(I,M)
          QEVPACC(I)=QEVPACC(I)+QEVPROW(I,M)*FAREROW(I,M)
          EVAPACC(I)=EVAPACC(I)+QFSROW(I,M)*FAREROW(I,M)*DELT
          HFSACC(I)=HFSACC(I)+HFSROW(I,M)*FAREROW(I,M)
          HMFNACC(I)=HMFNACC(I)+HMFNROW(I,M)*FAREROW(I,M)
          ROFACC(I)=ROFACC(I)+ROFROW(I,M)*FAREROW(I,M)*DELT
          OVRACC(I)=OVRACC(I)+ROFOROW(I,M)*FAREROW(I,M)*DELT
          WTBLACC(I)=WTBLACC(I)+WTABROW(I,M)*FAREROW(I,M)
          DO 625 J=1,IGND
              TBARACC(I,J)=TBARACC(I,J)+TBARROW(I,M,J)*FAREROW(I,M)
              THLQACC(I,J)=THLQACC(I,J)+THLQROW(I,M,J)*FAREROW(I,M)
              THICACC(I,J)=THICACC(I,J)+THICROW(I,M,J)*FAREROW(I,M)
              THALACC(I,J)=THALACC(I,J)+(THLQROW(I,M,J)+THICROW(I,M,J))
     1                    *FAREROW(I,M)
625       CONTINUE
          ALVSACC(I)=ALVSACC(I)+ALVSROW(I,M)*FAREROW(I,M)*FSVHGRD(I)
          ALIRACC(I)=ALIRACC(I)+ALIRROW(I,M)*FAREROW(I,M)*FSIHGRD(I)
          IF(SNOROW(I,M).GT.0.0) THEN
              RHOSACC(I)=RHOSACC(I)+RHOSROW(I,M)*FAREROW(I,M)
              TSNOACC(I)=TSNOACC(I)+TSNOROW(I,M)*FAREROW(I,M)
              WSNOACC(I)=WSNOACC(I)+WSNOROW(I,M)*FAREROW(I,M)
              SNOARE(I)=SNOARE(I)+FAREROW(I,M)
          ENDIF
          IF(TCANROW(I,M).GT.0.5) THEN
              TCANACC(I)=TCANACC(I)+TCANROW(I,M)*FAREROW(I,M)
              CANARE(I)=CANARE(I)+FAREROW(I,M)
          ENDIF
          SNOACC(I)=SNOACC(I)+SNOROW(I,M)*FAREROW(I,M)
          RCANACC(I)=RCANACC(I)+RCANROW(I,M)*FAREROW(I,M)
          SCANACC(I)=SCANACC(I)+SCANROW(I,M)*FAREROW(I,M)
          GROACC(I)=GROACC(I)+GROROW(I,M)*FAREROW(I,M)
          FSINACC(I)=FSINACC(I)+FSDOWN*FAREROW(I,M)
          FLINACC(I)=FLINACC(I)+FDLGRD(I)*FAREROW(I,M)
          FLUTACC(I)=FLUTACC(I)+SBC*GTROW(I,M)**4*FAREROW(I,M)
          TAACC(I)=TAACC(I)+TAGRD(I)*FAREROW(I,M)
          UVACC(I)=UVACC(I)+UVGRD(I)*FAREROW(I,M)
          PRESACC(I)=PRESACC(I)+PRESGRD(I)*FAREROW(I,M)
          QAACC(I)=QAACC(I)+QAGRD(I)*FAREROW(I,M)
650   CONTINUE
675   CONTINUE
C
C     * CALCULATE AND PRINT DAILY AVERAGES.
C 
      IF(NCOUNT.EQ.NDAY) THEN

      DO 800 I=1,NLTEST
          PREACC(I)=PREACC(I)
          GTACC(I)=GTACC(I)/REAL(NDAY)
          QEVPACC(I)=QEVPACC(I)/REAL(NDAY)
          EVAPACC(I)=EVAPACC(I)
          HFSACC(I)=HFSACC(I)/REAL(NDAY)
          HMFNACC(I)=HMFNACC(I)/REAL(NDAY)
          ROFACC(I)=ROFACC(I)
          OVRACC(I)=OVRACC(I)
          WTBLACC(I)=WTBLACC(I)/REAL(NDAY)
          DO 725 J=1,IGND
              TBARACC(I,J)=TBARACC(I,J)/REAL(NDAY)
              THLQACC(I,J)=THLQACC(I,J)/REAL(NDAY)
              THICACC(I,J)=THICACC(I,J)/REAL(NDAY)
              THALACC(I,J)=THALACC(I,J)/REAL(NDAY)
725       CONTINUE
          IF(FSINACC(I).GT.0.0) THEN
              ALVSACC(I)=ALVSACC(I)/(FSINACC(I)*0.5)
              ALIRACC(I)=ALIRACC(I)/(FSINACC(I)*0.5)
          ELSE
              ALVSACC(I)=0.0
              ALIRACC(I)=0.0
          ENDIF
          IF(SNOARE(I).GT.0.0) THEN
              RHOSACC(I)=RHOSACC(I)/SNOARE(I)
              TSNOACC(I)=TSNOACC(I)/SNOARE(I)
              WSNOACC(I)=WSNOACC(I)/SNOARE(I)
          ENDIF
          IF(CANARE(I).GT.0.0) THEN
              TCANACC(I)=TCANACC(I)/CANARE(I)
          ENDIF
          SNOACC(I)=SNOACC(I)/REAL(NDAY)
          RCANACC(I)=RCANACC(I)/REAL(NDAY)
          SCANACC(I)=SCANACC(I)/REAL(NDAY)
          GROACC(I)=GROACC(I)/REAL(NDAY)
          FSINACC(I)=FSINACC(I)/REAL(NDAY)
          FLINACC(I)=FLINACC(I)/REAL(NDAY)
          FLUTACC(I)=FLUTACC(I)/REAL(NDAY)
          TAACC(I)=TAACC(I)/REAL(NDAY)
          UVACC(I)=UVACC(I)/REAL(NDAY)
          PRESACC(I)=PRESACC(I)/REAL(NDAY)
          QAACC(I)=QAACC(I)/REAL(NDAY)

              ALTOT=(ALVSACC(I)+ALIRACC(I))/2.0
              FSSTAR=FSINACC(I)*(1.-ALTOT)
              FLSTAR=FLINACC(I)-FLUTACC(I)
              QH=HFSACC(I)
              QE=QEVPACC(I)
              BEG=FSSTAR+FLSTAR-QH-QE
              SNOMLT=HMFNACC(I)
              IF(RHOSACC(I).GT.0.0) THEN
                  ZSN=SNOACC(I)/RHOSACC(I)
              ELSE
                  ZSN=0.0
              ENDIF
              IF(TCANACC(I).GT.0.01) THEN
                  TCN=TCANACC(I)-TFREZ
              ELSE
                  TCN=0.0
              ENDIF
              IF(TSNOACC(I).GT.0.01) THEN
                  TSN=TSNOACC(I)-TFREZ
              ELSE
                  TSN=0.0
              ENDIF
              GTOUT=GTACC(I)-TFREZ
C
             IYD=IYEAR*1000+IDAY                         
             IF ((IYD.GE.JDST).AND.(IYD.LE.JDEND)) THEN  
              WRITE(61,6100) IDAY,IYEAR,FSSTAR,FLSTAR,QH,QE,SNOMLT,
     1                       BEG,GTOUT,SNOACC(I),RHOSACC(I),
     2                       WSNOACC(I),ALTOT,ROFACC(I)
              IF(IGND.GT.3) THEN
                  WRITE(62,6201) IDAY,IYEAR,(TBARACC(I,J)-TFREZ,
     1                       THLQACC(I,J),THICACC(I,J),J=1,5)
                  WRITE(63,6201) IDAY,IYEAR,(TBARACC(I,J)-TFREZ,
     1                       THLQACC(I,J),THICACC(I,J),J=6,10)
              ELSE
                  WRITE(62,6200) IDAY,IYEAR,(TBARACC(I,J)-TFREZ,
     1                       THLQACC(I,J),THICACC(I,J),J=1,3),
     2                       TCN,RCANACC(I),SCANACC(I),TSN,ZSN
                  WRITE(63,6300) IDAY,IYEAR,FSINACC(I),FLINACC(I),
     1                       TAACC(I)-TFREZ,UVACC(I),PRESACC(I),
     2                       QAACC(I),PREACC(I),EVAPACC(I)
              ENDIF
             ENDIF
C
C     * RESET ACCUMULATOR ARRAYS.
C
          PREACC(I)=0.
          GTACC(I)=0.
          QEVPACC(I)=0.
          HFSACC(I)=0.
          HMFNACC(I)=0.
          ROFACC(I)=0.
          SNOACC(I)=0.
          CANARE(I)=0.
          SNOARE(I)=0.
          OVRACC(I)=0.
          WTBLACC(I)=0.
          DO 750 J=1,IGND
              TBARACC(I,J)=0.
              THLQACC(I,J)=0.
              THICACC(I,J)=0.
              THALACC(I,J)=0.
750       CONTINUE
          ALVSACC(I)=0.
          ALIRACC(I)=0.
          RHOSACC(I)=0.
          TSNOACC(I)=0.
          WSNOACC(I)=0.
          TCANACC(I)=0.
          RCANACC(I)=0.
          SCANACC(I)=0.
          GROACC(I)=0.
          FSINACC(I)=0.
          FLINACC(I)=0.
          TAACC(I)=0.
          UVACC(I)=0.
          PRESACC(I)=0.
          QAACC(I)=0.
          EVAPACC(I)=0.
          FLUTACC(I)=0.
800   CONTINUE

      ENDIF ! IF(NCOUNT.EQ.NDAY) 

C===================== CTEM =====================================\
C
C     CALCULATE AND PRINT MOSAIC DAILY AVERAGES.
C
      DO 676 I=1,NLTEST
      DO 658 M=1,NMTEST
          PREACC_M(I,M)=PREACC_M(I,M)+PREGRD(I)*DELT
          GTACC_M(I,M)=GTACC_M(I,M)+GTROW(I,M)
          QEVPACC_M(I,M)=QEVPACC_M(I,M)+QEVPROW(I,M)
          EVAPACC_M(I,M)=EVAPACC_M(I,M)+QFSROW(I,M)*DELT
          HFSACC_M(I,M)=HFSACC_M(I,M)+HFSROW(I,M)
          HMFNACC_M(I,M)=HMFNACC_M(I,M)+HMFNROW(I,M)
          ROFACC_M(I,M)=ROFACC_M(I,M)+ROFROW(I,M)*DELT
          OVRACC_M(I,M)=OVRACC_M(I,M)+ROFOROW(I,M)*DELT
          WTBLACC_M(I,M)=WTBLACC_M(I,M)+WTABROW(I,M)
          DO 626 J=1,IGND
              TBARACC_M(I,M,J)=TBARACC_M(I,M,J)+TBARROW(I,M,J)
              THLQACC_M(I,M,J)=THLQACC_M(I,M,J)+THLQROW(I,M,J)
              THICACC_M(I,M,J)=THICACC_M(I,M,J)+THICROW(I,M,J)
              THALACC_M(I,M,J)=THALACC_M(I,M,J)+(THLQROW(I,M,J)+
     1           THICROW(I,M,J))
626       CONTINUE
          ALVSACC_M(I,M)=ALVSACC_M(I,M)+ALVSROW(I,M)*FSVHGRD(I)
          ALIRACC_M(I,M)=ALIRACC_M(I,M)+ALIRROW(I,M)*FSIHGRD(I)
          IF(SNOROW(I,M).GT.0.0) THEN
              RHOSACC_M(I,M)=RHOSACC_M(I,M)+RHOSROW(I,M)
              TSNOACC_M(I,M)=TSNOACC_M(I,M)+TSNOROW(I,M)
              WSNOACC_M(I,M)=WSNOACC_M(I,M)+WSNOROW(I,M)
          ENDIF
          IF(TCANROW(I,M).GT.0.5) THEN
              TCANACC_M(I,M)=TCANACC_M(I,M)+TCANROW(I,M)
C              CANARE(I)=CANARE(I)+FAREROW(I,M)
          ENDIF
          SNOACC_M(I,M)=SNOACC_M(I,M)+SNOROW(I,M)
          RCANACC_M(I,M)=RCANACC_M(I,M)+RCANROW(I,M)
          SCANACC_M(I,M)=SCANACC_M(I,M)+SCANROW(I,M)
          GROACC_M(I,M)=GROACC_M(I,M)+GROROW(I,M)
          FSINACC_M(I,M)=FSINACC_M(I,M)+FSDOWN
          FLINACC_M(I,M)=FLINACC_M(I,M)+FDLGRD(I)
          FLUTACC_M(I,M)=FLUTACC_M(I,M)+SBC*GTROW(I,M)**4
          TAACC_M(I,M)=TAACC_M(I,M)+TAGRD(I)
          UVACC_M(I,M)=UVACC_M(I,M)+UVGRD(I)
          PRESACC_M(I,M)=PRESACC_M(I,M)+PRESGRD(I)
          QAACC_M(I,M)=QAACC_M(I,M)+QAGRD(I)
658   CONTINUE
676   CONTINUE
C
C     CALCULATE AND PRINT DAILY AVERAGES.
C 
      IF(NCOUNT.EQ.NDAY) THEN

      DO 808 I=1,NLTEST
        DO 809 M=1,NMTEST
          PREACC_M(I,M)=PREACC_M(I,M)     !became [kg m-2 day-1] instead of [kg m-2 s-1]
          GTACC_M(I,M)=GTACC_M(I,M)/REAL(NDAY)
          QEVPACC_M(I,M)=QEVPACC_M(I,M)/REAL(NDAY)
          EVAPACC_M(I,M)=EVAPACC_M(I,M)   !became [kg m-2 day-1] instead of [kg m-2 s-1]
          HFSACC_M(I,M)=HFSACC_M(I,M)/REAL(NDAY)
          HMFNACC_M(I,M)=HMFNACC_M(I,M)/REAL(NDAY)
          ROFACC_M(I,M)=ROFACC_M(I,M)   !became [kg m-2 day-1] instead of [kg m-2 s-1
          OVRACC_M(I,M)=OVRACC_M(I,M)   !became [kg m-2 day-1] instead of [kg m-2 s-1]
          WTBLACC_M(I,M)=WTBLACC_M(I,M)/REAL(NDAY)
          DO 726 J=1,IGND
            TBARACC_M(I,M,J)=TBARACC_M(I,M,J)/REAL(NDAY)
            THLQACC_M(I,M,J)=THLQACC_M(I,M,J)/REAL(NDAY)
            THICACC_M(I,M,J)=THICACC_M(I,M,J)/REAL(NDAY)
            THALACC_M(I,M,J)=THALACC_M(I,M,J)/REAL(NDAY)
726       CONTINUE
C
          IF(FSINACC_M(I,M).GT.0.0) THEN
            ALVSACC_M(I,M)=ALVSACC_M(I,M)/(FSINACC_M(I,M)*0.5)
            ALIRACC_M(I,M)=ALIRACC_M(I,M)/(FSINACC_M(I,M)*0.5)
          ELSE
            ALVSACC_M(I,M)=0.0
            ALIRACC_M(I,M)=0.0
          ENDIF
C
          RHOSACC_M(I,M)=RHOSACC_M(I,M)/REAL(NDAY)  
          TSNOACC_M(I,M)=TSNOACC_M(I,M)/REAL(NDAY)  
          WSNOACC_M(I,M)=WSNOACC_M(I,M)/REAL(NDAY) 
          TCANACC_M(I,M)=TCANACC_M(I,M)/REAL(NDAY)  
          SNOACC_M(I,M)=SNOACC_M(I,M)/REAL(NDAY)
          RCANACC_M(I,M)=RCANACC_M(I,M)/REAL(NDAY)
          SCANACC_M(I,M)=SCANACC_M(I,M)/REAL(NDAY)
          GROACC_M(I,M)=GROACC_M(I,M)/REAL(NDAY)
          FSINACC_M(I,M)=FSINACC_M(I,M)/REAL(NDAY)
          FLINACC_M(I,M)=FLINACC_M(I,M)/REAL(NDAY)
          FLUTACC_M(I,M)=FLUTACC_M(I,M)/REAL(NDAY)
          TAACC_M(I,M)=TAACC_M(I,M)/REAL(NDAY)
          UVACC_M(I,M)=UVACC_M(I,M)/REAL(NDAY)
          PRESACC_M(I,M)=PRESACC_M(I,M)/REAL(NDAY)
          QAACC_M(I,M)=QAACC_M(I,M)/REAL(NDAY)
          ALTOT=(ALVSACC_M(I,M)+ALIRACC_M(I,M))/2.0
          FSSTAR=FSINACC_M(I,M)*(1.-ALTOT)
          FLSTAR=FLINACC_M(I,M)-FLUTACC_M(I,M)
          QH=HFSACC_M(I,M)
          QE=QEVPACC_M(I,M)
          QEVPACC_M_SAVE(I,M)=QEVPACC_M(I,M)  
          BEG=FSSTAR+FLSTAR-QH-QE
          SNOMLT=HMFNACC_M(I,M)
C
          IF(RHOSACC_M(I,M).GT.0.0) THEN
              ZSN=SNOACC_M(I,M)/RHOSACC_M(I,M)
          ELSE
              ZSN=0.0
          ENDIF
C
          IF(TCANACC_M(I,M).GT.0.01) THEN
              TCN=TCANACC_M(I,M)-TFREZ
          ELSE
              TCN=0.0
          ENDIF
C
          IF(TSNOACC_M(I,M).GT.0.01) THEN
              TSN=TSNOACC_M(I,M)-TFREZ
          ELSE
              TSN=0.0
          ENDIF
C
          GTOUT=GTACC_M(I,M)-TFREZ
C 
          IYD=IYEAR*1000+IDAY                        
          IF ((IYD.GE.JDST).AND.(IYD.LE.JDEND)) THEN
C
C         WRITE TO OUTPUT FILES
C
          WRITE(611,6100) IDAY,IYEAR,FSSTAR,FLSTAR,QH,QE,SNOMLT,
     1                    BEG,GTOUT,SNOACC_M(I,M),RHOSACC_M(I,M),
     2                    WSNOACC_M(I,M),ALTOT,ROFACC_M(I,M),'TILE',M
            IF(IGND.GT.3) THEN
               WRITE(621,6201) IDAY,IYEAR,(TBARACC_M(I,M,J)-TFREZ,
     1                  THLQACC_M(I,M,J),THICACC_M(I,M,J),J=1,5),
     2                  'TILE',M
               WRITE(631,6201) IDAY,IYEAR,(TBARACC_M(I,M,J)-TFREZ,
     1                  THLQACC_M(I,M,J),THICACC_M(I,M,J),J=6,10),
     2                  'TILE',M
            ELSE
               WRITE(621,6200) IDAY,IYEAR,(TBARACC_M(I,M,J)-TFREZ,
     1                  THLQACC_M(I,M,J),THICACC_M(I,M,J),J=1,3),
     2                  TCN,RCANACC_M(I,M),SCANACC_M(I,M),TSN,ZSN,
     3                  'TILE',M
               WRITE(631,6300) IDAY,IYEAR,FSINACC_M(I,M),FLINACC_M(I,M),
     1                  TAACC_M(I,M)-TFREZ,UVACC_M(I,M),PRESACC_M(I,M),
     2                  QAACC_M(I,M),PREACC_M(I,M),EVAPACC_M(I,M),
     3                  'TILE',M 
            ENDIF
C
           ENDIF ! IF ((IYD.GE.JDST).AND.(IYD.LE.JDEND))
C
C          INITIALIZTION FOR MOSAIC TILE AND GRID VARIABLES
C
           PREACC_M(I,M)=0.
           GTACC_M(I,M)=0.
           QEVPACC_M(I,M)=0.
           HFSACC_M(I,M)=0.
           HMFNACC_M(I,M)=0.
           ROFACC_M(I,M)=0.
           SNOACC_M(I,M)=0.
           OVRACC_M(I,M)=0.
           WTBLACC_M(I,M)=0.
           ALVSACC_M(I,M)=0.
           ALIRACC_M(I,M)=0.
           RHOSACC_M(I,M)=0.
           TSNOACC_M(I,M)=0.
           WSNOACC_M(I,M)=0.
           TCANACC_M(I,M)=0.
           RCANACC_M(I,M)=0.
           SCANACC_M(I,M)=0.
           GROACC_M(I,M)=0.
           FSINACC_M(I,M)=0.
           FLINACC_M(I,M)=0.
           TAACC_M(I,M)=0.
           UVACC_M(I,M)=0.
           PRESACC_M(I,M)=0.
           QAACC_M(I,M)=0.
           EVAPACC_M(I,M)=0.
           FLUTACC_M(I,M)=0.
C
           DO 759 J=1,IGND
             TBARACC_M(I,M,J)=0.
             THLQACC_M(I,M,J)=0.
             THICACC_M(I,M,J)=0.
             THALACC_M(I,M,J)=0.
759        CONTINUE
C
809   CONTINUE
808   CONTINUE

      ENDIF ! IF(NCOUNT.EQ.NDAY)
C
      ENDIF !  IF(.NOT.PARALLELRUN)
C
C=======================================================================
C
C     ACCUMULATE OUTPUT DATA FOR MONTHLY AVERAGED FIELDS FOR CLASS GRID-MEAN.
C     FOR BOTH PARALLEL MODE AND STAND ALONE MODE
C
      FSSTAR_MN   =0.0
      FLSTAR_MN   =0.0
      QH_MN       =0.0
      QE_MN       =0.0
      ALTOT_MN    =0.0
C
      DO 820 I=1,NLTEST
       DO 821 M=1,NMTEST
          ALVSACC_MN(I)=ALVSACC_MN(I)+ALVSROW(I,M)*FAREROW(I,M)
     1                  *FSVHGRD(I)
          ALIRACC_MN(I)=ALIRACC_MN(I)+ALIRROW(I,M)*FAREROW(I,M)
     1                  *FSIHGRD(I) 
          FLUTACC_MN(I)=FLUTACC_MN(I)+SBC*GTROW(I,M)**4*FAREROW(I,M)
          FSINACC_MN(I)=FSINACC_MN(I)+FSDOWN*FAREROW(I,M)
          FLINACC_MN(I)=FLINACC_MN(I)+FDLGRD(I)*FAREROW(I,M)
          HFSACC_MN(I) =HFSACC_MN(I)+HFSROW(I,M)*FAREROW(I,M)
          QEVPACC_MN(I)=QEVPACC_MN(I)+QEVPROW(I,M)*FAREROW(I,M)
          SNOACC_MN(I) =SNOACC_MN(I)+SNOROW(I,M)*FAREROW(I,M)
          TAACC_MN(I)=TAACC_MN(I)+TAGRD(I)*FAREROW(I,M)
C
          IF(SNOROW(I,M).GT.0.0) THEN
           WSNOACC_MN(I)=WSNOACC_MN(I)+WSNOROW(I,M)*FAREROW(I,M)
          ENDIF
C
          ROFACC_MN(I) =ROFACC_MN(I)+ROFROW(I,M)*FAREROW(I,M)*DELT
          PREACC_MN(I) =PREACC_MN(I)+PREGRD(I)*FAREROW(I,M)*DELT
          EVAPACC_MN(I)=EVAPACC_MN(I)+QFSROW(I,M)*FAREROW(I,M)*DELT
C
          DO 823 J=1,IGND
           TBARACC_MN(I,J)=TBARACC_MN(I,J)+TBARROW(I,M,J)*FAREROW(I,M)
           THLQACC_MN(I,J)=THLQACC_MN(I,J)+THLQROW(I,M,J)*FAREROW(I,M)
           THICACC_MN(I,J)=THICACC_MN(I,J)+THICROW(I,M,J)*FAREROW(I,M)
823       CONTINUE
C
821    CONTINUE
820   CONTINUE 
C
      DO NT=1,NMON
       IF(IDAY.EQ.MDAY(NT+1).AND.NCOUNT.EQ.NDAY)THEN
        IMONTH=NT
        NDMONTH=(MDAY(NT+1)-MDAY(NT))*NDAY
C
        DO 824 I=1,NLTEST
         IF(FSINACC_MN(I).GT.0.0) THEN
          ALVSACC_MN(I)=ALVSACC_MN(I)/(FSINACC_MN(I)*0.5)
          ALIRACC_MN(I)=ALIRACC_MN(I)/(FSINACC_MN(I)*0.5)
         ELSE
          ALVSACC_MN(I)=0.0
          ALIRACC_MN(I)=0.0
         ENDIF
         FLUTACC_MN(I)=FLUTACC_MN(I)/REAL(NDMONTH)
         FSINACC_MN(I)=FSINACC_MN(I)/REAL(NDMONTH)
         FLINACC_MN(I)=FLINACC_MN(I)/REAL(NDMONTH)
         HFSACC_MN(I) =HFSACC_MN(I)/REAL(NDMONTH)
         QEVPACC_MN(I)=QEVPACC_MN(I)/REAL(NDMONTH)
         SNOACC_MN(I) =SNOACC_MN(I)/REAL(NDMONTH)
         WSNOACC_MN(I)=WSNOACC_MN(I)/REAL(NDMONTH)
         ROFACC_MN(I) =ROFACC_MN(I)
         PREACC_MN(I) =PREACC_MN(I)
         EVAPACC_MN(I)=EVAPACC_MN(I)
         TAACC_MN(I)=TAACC_MN(I)/REAL(NDMONTH)
         DO J=1,IGND
          TBARACC_MN(I,J)=TBARACC_MN(I,J)/REAL(NDMONTH)
          THLQACC_MN(I,J)=THLQACC_MN(I,J)/REAL(NDMONTH)
          THICACC_MN(I,J)=THICACC_MN(I,J)/REAL(NDMONTH)
         ENDDO
C
         ALTOT_MN=(ALVSACC_MN(I)+ALIRACC_MN(I))/2.0
         FSSTAR_MN=FSINACC_MN(I)*(1.-ALTOT_MN)
         FLSTAR_MN=FLINACC_MN(I)-FLUTACC_MN(I)
         QH_MN=HFSACC_MN(I)
         QE_MN=QEVPACC_MN(I)
C
         WRITE(81,8100)IMONTH,IYEAR,FSSTAR_MN,FLSTAR_MN,QH_MN,
     1                 QE_MN,SNOACC_MN(I),WSNOACC_MN(I),
     2                 ROFACC_MN(I),PREACC_MN(I),EVAPACC_MN(I),
     3                 TAACC_MN(I)-TFREZ
         IF (IGND.GT.3) THEN
          WRITE(82,8101)IMONTH,IYEAR,(TBARACC_MN(I,J)-TFREZ,
     1                  THLQACC_MN(I,J),THICACC_MN(I,J),J=1,5)
          WRITE(82,8101)IMONTH,IYEAR,(TBARACC_MN(I,J)-TFREZ,
     1                  THLQACC_MN(I,J),THICACC_MN(I,J),J=6,10)
         ELSE
          WRITE(82,8102)IMONTH,IYEAR,(TBARACC_MN(I,J)-TFREZ,
     1                  THLQACC_MN(I,J),THICACC_MN(I,J),J=1,3)
         ENDIF     
C
C ADD INITIALIZTION FOR MONTHLY ACCUMULATED ARRAYS
C
         ALVSACC_MN(I)=0.0
         ALIRACC_MN(I)=0.0  
         FLUTACC_MN(I)=0.0
         FSINACC_MN(I)=0.0
         FLINACC_MN(I)=0.0
         HFSACC_MN(I)=0.0
         QEVPACC_MN(I)=0.0
         SNOACC_MN(I)=0.0
         WSNOACC_MN(I)=0.0
         ROFACC_MN(I)=0.0
         PREACC_MN(I)=0.0
         EVAPACC_MN(I)=0.0
         TAACC_MN(I)=0.0
         DO 826 J=1,IGND
           TBARACC_MN(I,J)=0.
           THLQACC_MN(I,J)=0.
           THICACC_MN(I,J)=0.
826      CONTINUE   
C
824     CONTINUE ! I
C               
       ENDIF ! IF(IDAY.EQ.MDAY(NT+1).AND.NCOUNT.EQ.NDAY)
      ENDDO ! NMON
C
8100  FORMAT(1X,I4,I5,5F8.2,F8.3,F12.4,3F12.3,2(A5,I2))
8101  FORMAT(1X,I4,I5,5(F7.2,2F6.3),2(A5,I2))
8102  FORMAT(1X,I4,I5,3(F8.2,2F6.3),2(A5,I2))
C
C     ACCUMULATE OUTPUT DATA FOR YEARLY AVERAGED FIELDS FOR CLASS GRID-MEAN.
C     FOR BOTH PARALLEL MODE AND STAND ALONE MODE
C
      FSSTAR_YR   =0.0
      FLSTAR_YR   =0.0
      QH_YR       =0.0
      QE_YR       =0.0
      ALTOT_YR    =0.0
C
      DO 827 I=1,NLTEST
       DO 828 M=1,NMTEST
          ALVSACC_YR(I)=ALVSACC_YR(I)+ALVSROW(I,M)*FAREROW(I,M)
     1                  *FSVHGRD(I)
          ALIRACC_YR(I)=ALIRACC_YR(I)+ALIRROW(I,M)*FAREROW(I,M)
     1                  *FSIHGRD(I) 
          FLUTACC_YR(I)=FLUTACC_YR(I)+SBC*GTROW(I,M)**4*FAREROW(I,M)
          FSINACC_YR(I)=FSINACC_YR(I)+FSDOWN*FAREROW(I,M)
          FLINACC_YR(I)=FLINACC_YR(I)+FDLGRD(I)*FAREROW(I,M)
          HFSACC_YR(I) =HFSACC_YR(I)+HFSROW(I,M)*FAREROW(I,M)
          QEVPACC_YR(I)=QEVPACC_YR(I)+QEVPROW(I,M)*FAREROW(I,M)
          TAACC_YR(I)=TAACC_YR(I)+TAGRD(I)*FAREROW(I,M)
          ROFACC_YR(I) =ROFACC_YR(I)+ROFROW(I,M)*FAREROW(I,M)*DELT
          PREACC_YR(I) =PREACC_YR(I)+PREGRD(I)*FAREROW(I,M)*DELT
          EVAPACC_YR(I)=EVAPACC_YR(I)+QFSROW(I,M)*FAREROW(I,M)*DELT
828    CONTINUE
827   CONTINUE
C
      IF (IDAY.EQ.365.AND.NCOUNT.EQ.NDAY) THEN
C
       DO 829 I=1,NLTEST
         IF(FSINACC_YR(I).GT.0.0) THEN
          ALVSACC_YR(I)=ALVSACC_YR(I)/(FSINACC_YR(I)*0.5)
          ALIRACC_YR(I)=ALIRACC_YR(I)/(FSINACC_YR(I)*0.5)
         ELSE
          ALVSACC_YR(I)=0.0
          ALIRACC_YR(I)=0.0
         ENDIF
         FLUTACC_YR(I)=FLUTACC_YR(I)/(REAL(NDAY)*365.)
         FSINACC_YR(I)=FSINACC_YR(I)/(REAL(NDAY)*365.)
         FLINACC_YR(I)=FLINACC_YR(I)/(REAL(NDAY)*365.)
         HFSACC_YR(I) =HFSACC_YR(I)/(REAL(NDAY)*365.)
         QEVPACC_YR(I)=QEVPACC_YR(I)/(REAL(NDAY)*365.)
         ROFACC_YR(I) =ROFACC_YR(I)
         PREACC_YR(I) =PREACC_YR(I)
         EVAPACC_YR(I)=EVAPACC_YR(I)
         TAACC_YR(I)=TAACC_YR(I)/(REAL(NDAY)*365.)
C
         ALTOT_YR=(ALVSACC_YR(I)+ALIRACC_YR(I))/2.0
         FSSTAR_YR=FSINACC_YR(I)*(1.-ALTOT_YR)
         FLSTAR_YR=FLINACC_YR(I)-FLUTACC_YR(I)
         QH_YR=HFSACC_YR(I)
         QE_YR=QEVPACC_YR(I)
C
         WRITE(0,*) 'IYEAR=',IYEAR,' CLIMATE YEAR=',CLIMIYEAR
         WRITE(83,8103)IYEAR,FSSTAR_YR,FLSTAR_YR,QH_YR,
     1                  QE_YR,ROFACC_YR(I),PREACC_YR(I),
     2                  EVAPACC_YR(I) 
C
C ADD INITIALIZTION FOR YEARLY ACCUMULATED ARRAYS
C
         ALVSACC_YR(I)=0.0
         ALIRACC_YR(I)=0.0  
         FLUTACC_YR(I)=0.0
         FSINACC_YR(I)=0.0
         FLINACC_YR(I)=0.0
         HFSACC_YR(I)=0.0
         QEVPACC_YR(I)=0.0
         ROFACC_YR(I)=0.0
         PREACC_YR(I)=0.0
         EVAPACC_YR(I)=0.0
         TAACC_YR(I)=0.0
C
829    CONTINUE ! I
C
      ENDIF ! IDAY.EQ.365 .AND. NDAY
C
8103  FORMAT(1X,I5,4F8.2,F12.4,2F12.3,2(A5,I1))
C
C     CTEM OUTPUT AND WRITE OUT
C
      IF(.NOT.PARALLELRUN) THEN ! STAND ALONE MODE, INCLUDES DAILY AND YEARLY MOSAIC-MEAN OUTPUT FOR CTEM
C
C     CALCULATE DAILY OUTPUTS FROM CTEM
C
      IF (CTEM2) THEN
      IF(NCOUNT.EQ.NDAY) THEN
C
        DO I=1,NLTEST
           DO J=1,ICC
             IFCANCMX_G(I,J)=0   
           ENDDO
        ENDDO
C
        DO I=1,NLTEST
           DO M=1,NMTEST
              IFCANCMX_M(I,M)=0   !0=BARE SOIL TILE; 1=TILE WITH VEGETATION
              LEAFLITR_M(I,M)=0.0
              TLTRLEAF_M(I,M)=0.0
              TLTRSTEM_M(I,M)=0.0
              TLTRROOT_M(I,M)=0.0
              AILCG_M(I,M)=0.0
              AILCB_M(I,M)=0.0
              AFRLEAF_M(I,M)=0.0
              AFRSTEM_M(I,M)=0.0
              AFRROOT_M(I,M)=0.0
              VEGHGHT_M(I,M)=0.0
              ROOTDPTH_M(I,M)=0.0
              ROOTTEMP_M(I,M)=0.0
              SLAI_M(I,M)=0.0
C
              DO J=1,ICC
                IF (FCANCMXROW(I,M,J) .GT.0.0) THEN
                IFCANCMX_G(I,J)=1
                IFCANCMX_M(I,M)=1
                ENDIF 
              ENDDO
C
              DO K=1,IGND
                RMATCTEM_M(I,M,K)=0.0
              ENDDO
C
           ENDDO ! M
        ENDDO  ! I
C
C       ---------------------------------------------------------
C
        DO 851 I=1,NLTEST
          GPP_G(I) =0.0
          NPP_G(I) =0.0
          NEP_G(I) =0.0
          NBP_G(I) =0.0
          AUTORES_G(I) =0.0
          HETRORES_G(I)=0.0
          LITRES_G(I) =0.0
          SOCRES_G(I) =0.0
          DSTCEMLS_G(I)=0.0
          DSTCEMLS3_G(I)=0.0
          LITRFALL_G(I)=0.0
          HUMIFTRS_G(I)=0.0
          RML_G(I) =0.0
          RMS_G(I) =0.0
          RMR_G(I) =0.0
          RG_G(I) =0.0
          VGBIOMAS_G(I) =0.0
          TOTCMASS_G(I) =0.0
          GAVGLAI_G(I) =0.0
          GAVGLTMS_G(I) =0.0
          GAVGSCMS_G(I) =0.0
          AILCG_G(I)=0.0
          AILCB_G(I)=0.0
          TCANOACC_OUT_G(I) =0.0
          BURNFRAC_G(I) =0.0
          PROBFIRE_G(I) =0.0
          LUCEMCOM_G(I) =0.0
          LUCLTRIN_G(I) =0.0
          LUCSOCIN_G(I) =0.0
          GRCLAREA_G(I) =0.0
          EMIT_CO2_G(I) =0.0
          EMIT_CO_G(I)  =0.0
          EMIT_CH4_G(I) =0.0  
          EMIT_NMHC_G(I) =0.0
          EMIT_H2_G(I) =0.0
          EMIT_NOX_G(I) =0.0
          EMIT_N2O_G(I) =0.0 
          EMIT_PM25_G(I) =0.0
          EMIT_TPM_G(I) =0.0 
          EMIT_TC_G(I) =0.0
          EMIT_OC_G(I) =0.0  
          EMIT_BC_G(I) =0.0
C
          DO J=1,ICC        
            LEAFLITR_G(I,J)=0.0
            TLTRLEAF_G(I,J)=0.0
            TLTRSTEM_G(I,J)=0.0
            TLTRROOT_G(I,J)=0.0
            GLEAFMAS_G(I,J)=0.0
            BLEAFMAS_G(I,J)=0.0
            STEMMASS_G(I,J)=0.0
            ROOTMASS_G(I,J)=0.0
            LITRMASS_G(I,J)=0.0
            SOILCMAS_G(I,J)=0.0
            VEGHGHT_G(I,J)=0.0
            ROOTDPTH_G(I,J)=0.0
            ROOTTEMP_G(I,J)=0.0
            SLAI_G(I,J)=0.0
            AFRLEAF_G(I,J)=0.0
            AFRSTEM_G(I,J)=0.0
            AFRROOT_G(I,J)=0.0
            ANNPPVEG_G(I,J)=0.0
            DO K=1,IGND
              RMATCTEM_G(I,J,K)=0.0
            ENDDO
          ENDDO
C
          DO 852 M=1,NMTEST
C
           DO J=1,ICC
             LEAFLITR_M(I,M)=LEAFLITR_M(I,M)+
     &                       LEAFLITRROW(I,M,J)*FCANCMXROW(I,M,J)
             TLTRLEAF_M(I,M)=TLTRLEAF_M(I,M)+
     &                       TLTRLEAFROW(I,M,J)*FCANCMXROW(I,M,J)
             TLTRSTEM_M(I,M)=TLTRSTEM_M(I,M)+
     &                       TLTRSTEMROW(I,M,J)*FCANCMXROW(I,M,J)
             TLTRROOT_M(I,M)=TLTRROOT_M(I,M)+
     &                       TLTRROOTROW(I,M,J)*FCANCMXROW(I,M,J)
             VEGHGHT_M(I,M)=VEGHGHT_M(I,M)+
     &                            VEGHGHTROW(I,M,J)*FCANCMXROW(I,M,J)
             ROOTDPTH_M(I,M)=ROOTDPTH_M(I,M)+
     &                            ROOTDPTHROW(I,M,J)*FCANCMXROW(I,M,J)
             ROOTTEMP_M(I,M)=ROOTTEMP_M(I,M)+
     &                            ROOTTEMPROW(I,M,J)*FCANCMXROW(I,M,J)
             SLAI_M(I,M)=SLAI_M(I,M)+SLAIROW(I,M,J)*FCANCMXROW(I,M,J)
C
             AFRLEAF_M(I,M)=AFRLEAF_M(I,M)+
     &                              AFRLEAFROW(I,M,J)*FCANCMXROW(I,M,J)
             AFRSTEM_M(I,M)=AFRSTEM_M(I,M)+
     &                              AFRSTEMROW(I,M,J)*FCANCMXROW(I,M,J)
             AFRROOT_M(I,M)=AFRROOT_M(I,M)+
     &                              AFRROOTROW(I,M,J)*FCANCMXROW(I,M,J)
C
             AILCG_M(I,M)=AILCG_M(I,M)+AILCGROW(I,M,J)*FCANCMXROW(I,M,J)
             AILCB_M(I,M)=AILCB_M(I,M)+AILCBROW(I,M,J)*FCANCMXROW(I,M,J)
C
             DO K=1,IGND
                RMATCTEM_M(I,M,K)=RMATCTEM_M(I,M,K)+
     &                            RMATCTEMROW(I,M,J,K)*FCANCMXROW(I,M,J)
             ENDDO
           ENDDO
C
           NPPROW(I,M)     =NPPROW(I,M)*1.0377 ! CONVERT TO gC/M2.DAY
           GPPROW(I,M)     =GPPROW(I,M)*1.0377 ! CONVERT TO gC/M2.DAY
           NEPROW(I,M)     =NEPROW(I,M)*1.0377 ! CONVERT TO gC/M2.DAY
           NBPROW(I,M)     =NBPROW(I,M)*1.0377 ! CONVERT TO gC/M2.DAY
           LUCEMCOMROW(I,M)=LUCEMCOMROW(I,M)*1.0377 ! CONVERT TO gC/M2.DAY
           LUCLTRINROW(I,M)=LUCLTRINROW(I,M)*1.0377 ! CONVERT TO gC/M2.DAY
           LUCSOCINROW(I,M)=LUCSOCINROW(I,M)*1.0377 ! CONVERT TO gC/M2.DAY
C
           HETRORESROW(I,M)=HETRORESROW(I,M)*1.0377 ! CONVERT TO gC/M2.DAY
           AUTORESROW(I,M) =AUTORESROW(I,M)*1.0377  ! CONVERT TO gC/M2.DAY
           LITRESROW(I,M)  =LITRESROW(I,M)*1.0377   ! CONVERT TO gC/M2.DAY
           SOCRESROW(I,M)  =SOCRESROW(I,M)*1.0377   ! CONVERT TO gC/M2.DAY
C
C          WRITE DAILY CTEM RESULTS
C
           IF ((IYD.GE.JDST).AND.(IYD.LE.JDEND)) THEN   
C
C             WRITE GRID-AVERAGED FLUXES OF BASIC QUANTITIES TO 
C             FILE *.CT01D_M
C
              WRITE(72,8200)IDAY,IYEAR,GPPROW(I,M),NPPROW(I,M),
     1                NEPROW(I,M),NBPROW(I,M),AUTORESROW(I,M),
     2                HETRORESROW(I,M),LITRESROW(I,M),SOCRESROW(I,M),
     3                (DSTCEMLSROW(I,M)+DSTCEMLS3ROW(I,M)),
     4                LITRFALLROW(I,M),HUMIFTRSROW(I,M),'TILE',M,'AVGE'

C             WRITE BREAKDOWN OF SOME OF BASIC FLUXES TO FILE *.CT3 
C             AND SELECTED LITTER FLUXES FOR SELECTED PFT
C
              DO 853 J=1,ICC
C
                IF (FCANCMXROW(I,M,J) .GT.0.0) THEN
C
                 GPPVEGROW(I,M,J)=GPPVEGROW(I,M,J)*1.0377 ! CONVERT TO gC/M2.DAY
                 NPPVEGROW(I,M,J)=NPPVEGROW(I,M,J)*1.0377 ! CONVERT TO gC/M2.DAY
                 NEPVEGROW(I,M,J)=NEPVEGROW(I,M,J)*1.0377 ! CONVERT TO gC/M2.DAY
 
C                WRITE TO FILE .CT01D_M 
                 WRITE(72,8201)IDAY,IYEAR,GPPVEGROW(I,M,J),
     1           NPPVEGROW(I,M,J),NEPVEGROW(I,M,J),
     2           'TILE',M,'PFT',J

C                WRITE TO FILE .CT02D_M 
                 WRITE(73,8300)IDAY,IYEAR,RMLVEGACCROW(I,M,J), 
     1           RMSVEGROW(I,M,J),RMRVEGROW(I,M,J),RGVEGROW(I,M,J),
     2           LEAFLITRROW(I,M,J),TLTRLEAFROW(I,M,J),
     3           TLTRSTEMROW(I,M,J),TLTRROOTROW(I,M,J),'TILE',M,'PFT',J
C
C
C                WRITE GRID-AVERAGED POOL SIZES AND COMPONENT SIZES FOR
C                SELECED CTEM PFT TO FILE *.CT03D_M
C
                 WRITE(74,8401)IDAY,IYEAR,VGBIOMAS_VEGROW(I,M,J),
     1               AILCGROW(I,M,J),GLEAFMASROW(I,M,J),
     3               BLEAFMASROW(I,M,J), STEMMASSROW(I,M,J),
     4               ROOTMASSROW(I,M,J), LITRMASSROW(I,M,J), 
     5               SOILCMASROW(I,M,J),'TILE',M,'PFT',J
C
C                WRITE LAI, RMATCTEM, & STRUCTURAL ATTRIBUTES FOR SELECTED 
C                PFT TO FILE *.CT04D_M
C
                 WRITE(75,8500)IDAY,IYEAR, AILCGROW(I,M,J), 
     1                AILCBROW(I,M,J),(RMATCTEMROW(I,M,J,K),K=1,3),
     2                VEGHGHTROW(I,M,J),ROOTDPTHROW(I,M,J),
     3                ROOTTEMPROW(I,M,J),SLAIROW(I,M,J),'TILE',M,'PFT',J
C
C                WRITE ALLOCATION FRACTIONS FOR SELECTED PFT TO 
C                FILE *.CT05D_M
C
                 WRITE(76,8600)IDAY,IYEAR, AFRLEAFROW(I,M,J), 
     1                AFRSTEMROW(I,M,J),AFRROOTROW(I,M,J), 
     2                TCANOACCROW_OUT(I,M), LFSTATUSROW(I,M,J),
     3                'TILE',M,'PFT',J
C
                ENDIF  !IF (FCANCMXROW(I,M,J) .GT.0.0) THEN
C
853           CONTINUE
C
              IF (IFCANCMX_M(I,M) .GT. 0) THEN
C               WRITE TO FILE .CT02D_M 
                WRITE(73,8300)IDAY,IYEAR,RMLROW(I,M),RMSROW(I,M),
     1          RMRROW(I,M),RGROW(I,M),LEAFLITR_M(I,M),TLTRLEAF_M(I,M),
     2          TLTRSTEM_M(I,M),TLTRROOT_M(I,M),'TILE',M,'AVGE'
C
C               WRITE TO FILE .CT03D_M 
                WRITE(74,8402)IDAY,IYEAR,VGBIOMASROW(I,M),
     1               GAVGLAIROW(I,M),GAVGLTMSROW(I,M),
     2               GAVGSCMSROW(I,M),'TILE',M, 'AVGE'
C
C               WRITE TO FILE .CT04D_M
                WRITE(75,8500)IDAY,IYEAR,AILCG_M(I,M),
     1                AILCB_M(I,M),(RMATCTEM_M(I,M,K),K=1,3),
     2                VEGHGHT_M(I,M),ROOTDPTH_M(I,M),
     3                ROOTTEMP_M(I,M),SLAI_M(I,M),'TILE',M, 'AVGE'
C
C               WRITE TO FILE .CT05D_M
                WRITE(76,8601)IDAY,IYEAR, AFRLEAF_M(I,M), 
     1                AFRSTEM_M(I,M),AFRROOT_M(I,M), 
     2                TCANOACCROW_OUT(I,M), 
     3                'TILE',M,'AVGE'
              ENDIF !IF (IFCANCMX_M(I,M) .GT.0.0) THEN
C
C             WRITE FIRE AND LUC RESULTS TO FILE *.CT06D_M
C
              WRITE(78,8800)IDAY,IYEAR,
     1          EMIT_CO2ROW(I,M),EMIT_COROW(I,M),EMIT_CH4ROW(I,M),
     2          EMIT_NMHCROW(I,M),EMIT_H2ROW(I,M),EMIT_NOXROW(I,M),
     3          EMIT_N2OROW(I,M),EMIT_PM25ROW(I,M),EMIT_TPMROW(I,M),
     4          EMIT_TCROW(I,M),EMIT_OCROW(I,M),EMIT_BCROW(I,M),
     5          BURNFRACROW(I,M), PROBFIREROW(I,M),LUCEMCOMROW(I,M), 
     6          LUCLTRINROW(I,M), LUCSOCINROW(I,M),
     7          GRCLAREAROW(I,M),'TILE',M
C
           ENDIF ! IF ((IYD.GE.JDST).AND.(IYD.LE.JDEND))
C
8200       FORMAT(1X,I4,I5,11F10.5,2(A5,I2))
8201       FORMAT(1X,I4,I5,3F10.5,80x,2(A5,I2))
8300       FORMAT(1X,I4,I5,8F10.5,2(A5,I2))
8301       FORMAT(1X,I4,I5,4F10.5,40x,2(A5,I2)) 
8400       FORMAT(1X,I4,I5,10F10.5,2(A5,I2))
8401       FORMAT(1X,I4,I5,2F10.5,6F10.5,2(A5,I2))
8402       FORMAT(1X,I4,I5,2F10.5,40X,2F10.5,2(A5,I2))
8500       FORMAT(1X,I4,I5,9F10.5,2(A5,I2))
8501       FORMAT(1X,I4,I5,2F10.5,2(A5,I2))
8600       FORMAT(1X,I4,I5,4F10.5,I8,2(A5,I2))
8601       FORMAT(1X,I4,I5,4F10.5,8x,2(A5,I2))   
8800       FORMAT(1X,I4,I5,17F11.4,2X,F9.2,2(A5,I2))
C
C          CALCULATION OF GRID AVERAGED VARIABLES
C
           GPP_G(I) =GPP_G(I) + GPPROW(I,M)*FAREROW(I,M)
           NPP_G(I) =NPP_G(I) + NPPROW(I,M)*FAREROW(I,M)
           NEP_G(I) =NEP_G(I) + NEPROW(I,M)*FAREROW(I,M)
           NBP_G(I) =NBP_G(I) + NBPROW(I,M)*FAREROW(I,M)
           AUTORES_G(I) =AUTORES_G(I) +AUTORESROW(I,M)*FAREROW(I,M)
           HETRORES_G(I)=HETRORES_G(I)+HETRORESROW(I,M)*FAREROW(I,M)
           LITRES_G(I) =LITRES_G(I) + LITRESROW(I,M)*FAREROW(I,M)
           SOCRES_G(I) =SOCRES_G(I) + SOCRESROW(I,M)*FAREROW(I,M)
           DSTCEMLS_G(I)=DSTCEMLS_G(I)+DSTCEMLSROW(I,M)*FAREROW(I,M)
           DSTCEMLS3_G(I)=DSTCEMLS3_G(I)
     &                      +DSTCEMLS3ROW(I,M)*FAREROW(I,M)

           LITRFALL_G(I)=LITRFALL_G(I)+LITRFALLROW(I,M)*FAREROW(I,M)
           HUMIFTRS_G(I)=HUMIFTRS_G(I)+HUMIFTRSROW(I,M)*FAREROW(I,M)
           RML_G(I) =RML_G(I) + RMLROW(I,M)*FAREROW(I,M)
           RMS_G(I) =RMS_G(I) + RMSROW(I,M)*FAREROW(I,M)
           RMR_G(I) =RMR_G(I) + RMRROW(I,M)*FAREROW(I,M)
           RG_G(I) =RG_G(I) + RGROW(I,M)*FAREROW(I,M)
           VGBIOMAS_G(I) =VGBIOMAS_G(I) + VGBIOMASROW(I,M)*FAREROW(I,M)
           GAVGLAI_G(I) =GAVGLAI_G(I) + GAVGLAIROW(I,M)*FAREROW(I,M)
           GAVGLTMS_G(I) =GAVGLTMS_G(I) + GAVGLTMSROW(I,M)*FAREROW(I,M)
           GAVGSCMS_G(I) =GAVGSCMS_G(I) + GAVGSCMSROW(I,M)*FAREROW(I,M)
           TCANOACC_OUT_G(I) =TCANOACC_OUT_G(I)+
     1                        TCANOACCROW_OUT(I,M)*FAREROW(I,M)
           TOTCMASS_G(I) =VGBIOMAS_G(I) + GAVGLTMS_G(I) + GAVGSCMS_G(I)
C
           BURNFRAC_G(I) =BURNFRAC_G(I)+ BURNFRACROW(I,M)*FAREROW(I,M) 
           EMIT_CO2_G(I) =EMIT_CO2_G(I)+ EMIT_CO2ROW(I,M)*FAREROW(I,M)
           EMIT_CO_G(I)  =EMIT_CO_G(I) + EMIT_COROW(I,M)*FAREROW(I,M)
           EMIT_CH4_G(I) =EMIT_CH4_G(I)+ EMIT_CH4ROW(I,M)*FAREROW(I,M)
           EMIT_NMHC_G(I)=EMIT_NMHC_G(I)+EMIT_NMHCROW(I,M)*FAREROW(I,M)
           EMIT_H2_G(I)  =EMIT_H2_G(I) + EMIT_H2ROW(I,M)*FAREROW(I,M)
           EMIT_NOX_G(I) =EMIT_NOX_G(I)+ EMIT_NOXROW(I,M)*FAREROW(I,M)
           EMIT_N2O_G(I) =EMIT_N2O_G(I)+ EMIT_N2OROW(I,M)*FAREROW(I,M)
           EMIT_PM25_G(I)=EMIT_PM25_G(I)+EMIT_PM25ROW(I,M)*FAREROW(I,M)
           EMIT_TPM_G(I) =EMIT_TPM_G(I)+ EMIT_TPMROW(I,M)*FAREROW(I,M)
           EMIT_TC_G(I)  =EMIT_TC_G(I) + EMIT_TCROW(I,M)*FAREROW(I,M)
           EMIT_OC_G(I)  =EMIT_OC_G(I) + EMIT_OCROW(I,M)*FAREROW(I,M)
           EMIT_BC_G(I)  =EMIT_BC_G(I) + EMIT_BCROW(I,M)*FAREROW(I,M)

           PROBFIRE_G(I) =PROBFIRE_G(I)+PROBFIREROW(I,M)*FAREROW(I,M)
           LUCEMCOM_G(I) =LUCEMCOM_G(I)+LUCEMCOMROW(I,M)*FAREROW(I,M)
           LUCLTRIN_G(I) =LUCLTRIN_G(I)+LUCLTRINROW(I,M)*FAREROW(I,M)
           LUCSOCIN_G(I) =LUCSOCIN_G(I)+LUCSOCINROW(I,M)*FAREROW(I,M)
           GRCLAREA_G(I) =GRCLAREA_G(I)+GRCLAREAROW(I,M)*FAREROW(I,M)           
C
           DO J=1,ICC    
             LEAFLITR_G(I,J)=LEAFLITR_G(I,J)+
     1                       LEAFLITRROW(I,M,J)*FAREROW(I,M)
             TLTRLEAF_G(I,J)=TLTRLEAF_G(I,J)+
     1                       TLTRLEAFROW(I,M,J)*FAREROW(I,M)
             TLTRSTEM_G(I,J)=TLTRSTEM_G(I,J)+
     1                       TLTRSTEMROW(I,M,J)*FAREROW(I,M)
             TLTRROOT_G(I,J)=TLTRROOT_G(I,J)+
     1                       TLTRROOTROW(I,M,J)*FAREROW(I,M)
             GLEAFMAS_G(I,J)=GLEAFMAS_G(I,J)+
     1                       GLEAFMASROW(I,M,J)*FAREROW(I,M)
             BLEAFMAS_G(I,J)=BLEAFMAS_G(I,J)+
     1                       BLEAFMASROW(I,M,J)*FAREROW(I,M)
             STEMMASS_G(I,J)=STEMMASS_G(I,J)+
     1                       STEMMASSROW(I,M,J)*FAREROW(I,M)
             ROOTMASS_G(I,J)=ROOTMASS_G(I,J)+
     1                       ROOTMASSROW(I,M,J)*FAREROW(I,M)
             LITRMASS_G(I,J)=LITRMASS_G(I,J)+
     1                       LITRMASSROW(I,M,J)*FAREROW(I,M)
             SOILCMAS_G(I,J)=SOILCMAS_G(I,J)+
     1                       SOILCMASROW(I,M,J)*FAREROW(I,M)
             AILCG_G(I)=AILCG_G(I)+AILCGROW(I,M,J)*FCANCMXROW(I,M,J)
     &                   *FAREROW(I,M)
             AILCB_G(I)=AILCB_G(I)+AILCBROW(I,M,J)*FCANCMXROW(I,M,J)
     &                   *FAREROW(I,M)
             VEGHGHT_G(I,J)=VEGHGHT_G(I,J)+
     &                            VEGHGHTROW(I,M,J)*FAREROW(I,M)
             ROOTDPTH_G(I,J)=ROOTDPTH_G(I,J)+
     &                            ROOTDPTHROW(I,M,J)*FAREROW(I,M)
             ROOTTEMP_G(I,J)=ROOTTEMP_G(I,J)+
     &                            ROOTTEMPROW(I,M,J)*FAREROW(I,M)
             SLAI_G(I,J)=SLAI_G(I,J)+SLAIROW(I,M,J)*FAREROW(I,M)
C
             AFRLEAF_G(I,J)=AFRLEAF_G(I,J)+
     1                      AFRLEAFROW(I,M,J)*FAREROW(I,M)
             AFRSTEM_G(I,J)=AFRSTEM_G(I,J)+
     1                      AFRSTEMROW(I,M,J)*FAREROW(I,M)
             AFRROOT_G(I,J)=AFRROOT_G(I,J)+
     1                      AFRROOTROW(I,M,J)*FAREROW(I,M)
C
             DO K=1,IGND
               RMATCTEM_G(I,J,K)=RMATCTEM_G(I,J,K)+
     &                           RMATCTEMROW(I,M,J,K)*FAREROW(I,M)
             ENDDO
           ENDDO 
C
C          CALCULATION OF CTEM ANNUAL VARIABLES
C
           IF(IDAY.LE.365) THEN
             AVGYRNPP_M(I,M)=AVGYRNPP_M(I,M)+NPPROW(I,M)
             AVGYRGPP_M(I,M)=AVGYRGPP_M(I,M)+GPPROW(I,M)
             AVGYRNEP_M(I,M)=AVGYRNEP_M(I,M)+NEPROW(I,M)
             AVGYRNBP_M(I,M)=AVGYRNBP_M(I,M)+NBPROW(I,M)
             AVGYRLE_M(I,M)=AVGYRLE_M(I,M)+QEVPACC_M_SAVE(I,M)
      
             AVGYRE_CO2_M(I,M)=AVGYRE_CO2_M(I,M)+EMIT_CO2ROW(I,M)
             AVGYRE_CO_M(I,M) =AVGYRE_CO_M(I,M)+EMIT_COROW(I,M)
             AVGYRE_CH4_M(I,M) =AVGYRE_CH4_M(I,M)+EMIT_CH4ROW(I,M)
             AVGYRE_NMHC_M(I,M) =AVGYRE_NMHC_M(I,M)+EMIT_NMHCROW(I,M)
             AVGYRE_H2_M(I,M) =AVGYRE_H2_M(I,M)+EMIT_H2ROW(I,M)
             AVGYRE_NOX_M(I,M) =AVGYRE_NOX_M(I,M)+EMIT_NOXROW(I,M)
             AVGYRE_N2O_M(I,M) =AVGYRE_N2O_M(I,M)+EMIT_N2OROW(I,M)
             AVGYRE_PM25_M(I,M) =AVGYRE_PM25_M(I,M)+EMIT_PM25ROW(I,M)
             AVGYRE_TPM_M(I,M) =AVGYRE_TPM_M(I,M)+EMIT_TPMROW(I,M)
             AVGYRE_TC_M(I,M) =AVGYRE_TC_M(I,M)+EMIT_TCROW(I,M)
             AVGYRE_OC_M(I,M) =AVGYRE_OC_M(I,M)+EMIT_OCROW(I,M)
             AVGYRE_BC_M(I,M) =AVGYRE_BC_M(I,M)+EMIT_BCROW(I,M)

             AVGYR_PROBFIRE_M(I,M) =AVGYR_PROBFIRE_M(I,M)  
     &                             +(PROBFIREROW(I,M)) * (1./365.)
             AVGYR_LUC_EMC_M(I,M) =AVGYR_LUC_EMC_M(I,M)
     &                              +LUCEMCOMROW(I,M) 
             AVGYR_LUCLTRIN_M(I,M) =AVGYR_LUCLTRIN_M(I,M)
     &                              +LUCLTRINROW(I,M) 
             AVGYR_LUCSOCIN_M(I,M) =AVGYR_LUCSOCIN_M(I,M)
     &                              +LUCSOCINROW(I,M) 
             AVGYR_BURNFRAC_M(I,M) =AVGYR_BURNFRAC_M(I,M)
     &                             +BURNFRACROW(I,M)
C
             DO 930 J = 1, ICC
               ANNPPVEG_M(I,M,J)=ANNPPVEG_M(I,M,J)+NPPVEGROW(I,M,J)
               ANNGPPVEG_M(I,M,J)=ANNGPPVEG_M(I,M,J)+GPPVEGROW(I,M,J)
               ANNNEPVEG_M(I,M,J)=ANNNEPVEG_M(I,M,J)+NEPVEGROW(I,M,J) 
               IF(AILCGROW(I,M,J).GT.LAIMAXGVEG_M(I,M,J)) THEN
                 LAIMAXGVEG_M(I,M,J)=AILCGROW(I,M,J)
               ENDIF
930          CONTINUE
           ENDIF ! IF(IDAY.LE.365) 
C
C          WRITE MAX GREEN LAI, AND STEM, ROOT, LITTER, AND SOIL C AT THE 
C          END OF EVERY YEAR, FOR SELECTED PFT, AND GRID AVERAGED ANNUAL
C          NPP, TO THE YEARLY RESULTS FILE.
C
           IF(IDAY.EQ.365) THEN
             AVGYRLE_M(I,M)=AVGYRLE_M(I,M)/365.0 !FLAG, isn't this not really an avg then? JM.
             LAIMAXG_M(I,M)=0.0
             STEMMASS_M(I,M)=0.0
             ROOTMASS_M(I,M)=0.0
             LITRMASS_M(I,M)=0.0
             SOILCMAS_M(I,M)=0.0
C
             DO 854 J=1,ICC
C
               IF (FCANCMXROW(I,M,J) .GT.0.0) THEN
C                WRITE TO FILE .CT01Y_M
                 WRITE(77,8702)IYEAR,LAIMAXGVEG_M(I,M,J),
     1                  STEMMASSROW(I,M,J),ROOTMASSROW(I,M,J), 
     2                  LITRMASSROW(I,M,J),SOILCMASROW(I,M,J),
     3                  ANNPPVEG_M(I,M,J),ANNGPPVEG_M(I,M,J),
     4                  ANNNEPVEG_M(I,M,J),'TILE',M,'PFT',J
               ENDIF  ! IF (FCANCMXROW(I,M,J) .GT.0.0) THEN
C
               LAIMAXG_M(I,M)=LAIMAXG_M(I,M)+
     &                  LAIMAXGVEG_M(I,M,J)*FCANCMXROW(I,M,J)
               STEMMASS_M(I,M)=STEMMASS_M(I,M)+
     &                  STEMMASSROW(I,M,J)*FCANCMXROW(I,M,J)
               ROOTMASS_M(I,M)=ROOTMASS_M(I,M)+
     &                  ROOTMASSROW(I,M,J)*FCANCMXROW(I,M,J)
               LITRMASS_M(I,M)=LITRMASS_M(I,M)+
     &                  LITRMASSROW(I,M,J)*FCANCMXROW(I,M,J)
               SOILCMAS_M(I,M)=SOILCMAS_M(I,M)+
     &                  SOILCMASROW(I,M,J)*FCANCMXROW(I,M,J)
C
854          CONTINUE
C
             IF (IFCANCMX_M(I,M) .GT. 0) THEN

C              WRITE TO FILE .CT01Y_M
               WRITE(77,8700)IYEAR,LAIMAXG_M(I,M),STEMMASS_M(I,M),
     1                 ROOTMASS_M(I,M), LITRMASS_M(I,M),
     2                 SOILCMAS_M(I,M),AVGYRNPP_M(I,M),
     3                 AVGYRGPP_M(I,M),AVGYRNEP_M(I,M),
     4                 AVGYRNBP_M(I,M),
     5                 AVGYRLE_M(I,M),'TILE',M,'AVGE'
             ENDIF  !IF (IFCANCMX_M(I,M) .GT. 0) THEN
C
C
             WRITE(79,8710)'GLEAFMAS ',IYEAR, 
     1                (GLEAFMASROW(I,M,J),J=1,ICC),'TILE',M
             WRITE(79,8710)'BLEAFMAS ',IYEAR, 
     1                (BLEAFMASROW(I,M,J),J=1,ICC),'TILE',M
             WRITE(79,8710)'STEMMASS ',IYEAR, 
     1                (STEMMASSROW(I,M,J),J=1,ICC),'TILE',M
             WRITE(79,8710)'ROOTMASS ',IYEAR, 
     1                (ROOTMASSROW(I,M,J),J=1,ICC),'TILE',M
             WRITE(79,8710)'LITRMASS ',IYEAR, 
     1                (LITRMASSROW(I,M,J),J=1,ICC),'TILE',M
             WRITE(79,8710)'SOILCMAS ',IYEAR, 
     1                (SOILCMASROW(I,M,J),J=1,ICC),'TILE',M
             WRITE(79,8710)'LAIMAXG  ',IYEAR, 
     1                (LAIMAXGVEG_M(I,M,J),J=1,ICC),'TILE',M
             WRITE(79,8710)'ANNPPVEG ',IYEAR, 
     1                (ANNPPVEG_M(I,M,J),J=1,ICC),'TILE',M
             WRITE(79,8720)'LFSTATUS ',IYEAR, 
     1                (LFSTATUSROW(I,M,J),J=1,ICC),'TILE',M
             WRITE(79,8720)'PANDAYS  ',IYEAR, 
     1                (PANDAYSROW(I,M,J),J=1,ICC),'TILE',M
C
             AVGYRNPP_M(I,M)=0.0
             AVGYRGPP_M(I,M)=0.0
             AVGYRNEP_M(I,M)=0.0
             AVGYRNBP_M(I,M)=0.0
             AVGYRLE_M(I,M)=0.0

             AVGYRE_CO2_M(I,M)=0.0     
             AVGYRE_CO_M(I,M) =0.0     
             AVGYRE_CH4_M(I,M) =0.0    
             AVGYRE_NMHC_M(I,M) =0.0   
             AVGYRE_H2_M(I,M) =0.0     
             AVGYRE_NOX_M(I,M) =0.0   
             AVGYRE_N2O_M(I,M) =0.0   
             AVGYRE_PM25_M(I,M) =0.0  
             AVGYRE_TPM_M(I,M) =0.0   
             AVGYRE_TC_M(I,M) =0.0    
             AVGYRE_OC_M(I,M) =0.0    
             AVGYRE_BC_M(I,M) =0.0    
             AVGYR_PROBFIRE_M(I,M) =0.0
             AVGYR_LUC_EMC_M(I,M) =0.0
             AVGYR_LUCLTRIN_M(I,M) =0.0
             AVGYR_LUCSOCIN_M(I,M) =0.0
             AVGYR_BURNFRAC_M(I,M) =0.0
C
             DO 950 J = 1, ICC
                LAIMAXGVEG_M(I,M,J)=0.0
                ANNPPVEG_M(I,M,J)=0.0
                ANNGPPVEG_M(I,M,J)=0.0
                ANNNEPVEG_M(I,M,J)=0.0 
950          CONTINUE
C
8700         FORMAT(1X,I5,10F10.3,2(A5,I2))
8702         FORMAT(1X,I5,8F10.3,10X,2(A5,I2))   
8701         FORMAT(1X,I5,50X,4F10.3,2(A5,I2))   
8710         FORMAT(A9,I5,9F10.3,2(A5,I2))
8720         FORMAT(A9,I5,9I10,2(A5,I2))
8703         FORMAT(1X,I5,15F10.3,2(A5,I2))
C
           ENDIF ! IF(IDAY.EQ.365)
C
852       CONTINUE
C
          IF ((IYD.GE.JDST).AND.(IYD.LE.JDEND)) THEN   
C           WRITE TO FILE .CT01D_G               
            WRITE(721,8200)IDAY,IYEAR,GPP_G(I),NPP_G(I),
     1                NEP_G(I),NBP_G(I),AUTORES_G(I),
     2                HETRORES_G(I),LITRES_G(I),SOCRES_G(I),
     3                (DSTCEMLS_G(I)+DSTCEMLS3_G(I)),
     4                LITRFALL_G(I),HUMIFTRS_G(I)

C           WRITE BREAKDOWN OF SOME OF BASIC FLUXES TO FILE  
C           *.CT02D_G AND SELECTED LITTER FLUXES FOR SELECTED PFT
            WRITE(731,8300)IDAY,IYEAR,RML_G(I),RMS_G(I),
     1          RMR_G(I),RG_G(I)
C
C           WRITE TO FILE .CT03D_G
            WRITE(741,8400)IDAY,IYEAR,VGBIOMAS_G(I),
     1               GAVGLAI_G(I),GAVGLTMS_G(I),
     2               GAVGSCMS_G(I), TOTCMASS_G(I)
C
C           WRITE TO FILE .CT04D_G
            WRITE(751,8501)IDAY,IYEAR, AILCG_G(I), 
     1                AILCB_G(I)
C
C           WRITE FIRE AND LUC RESULTS TO FILE *.CT06D_G
C
            WRITE(781,8800)IDAY,IYEAR, 
     1          EMIT_CO2_G(I), EMIT_CO_G(I), EMIT_CH4_G(I),
     2          EMIT_NMHC_G(I), EMIT_H2_G(I), EMIT_NOX_G(I),
     3          EMIT_N2O_G(I), EMIT_PM25_G(I), EMIT_TPM_G(I),
     4          EMIT_TC_G(I), EMIT_OC_G(I), EMIT_BC_G(I),
     5          BURNFRAC_G(I), PROBFIRE_G(I),LUCEMCOM_G(I), 
     6          LUCLTRIN_G(I), LUCSOCIN_G(I),
     7          GRCLAREA_G(I)

            IF (COMPETE .OR. LNDUSEON) THEN 
              SUMFARE=0.0
              IF (MOSAIC) THEN
               DO M=1,NMOS
                 SUMFARE=SUMFARE+FAREROW(I,M)
               ENDDO
               WRITE(761,8200)IDAY,IYEAR,(FAREROW(I,M)*100.,M=1,NMOS),
     1                      SUMFARE
              ELSE !COMPOSITE
               DO J=1,ICC  !M = 1
                 SUMFARE=SUMFARE+FCANCMXROW(I,1,J)
               ENDDO
               WRITE(761,8200)IDAY,IYEAR,(FCANCMXROW(I,1,J)*100.,
     1                      J=1,ICC),(1.0-SUMFARE)*100.,SUMFARE
              ENDIF !MOSAIC/COMPOSITE
            ENDIF !COMPETE/LNDUSEON
C
          ENDIF !IF ((IYD.GE.JDST).AND.(IYD.LE.JDEND)) THEN  
C
851     CONTINUE
C
      ENDIF ! IF(NCOUNT.EQ.NDAY) 
      ENDIF ! IF(CTEM2)
C
      ENDIF ! IF(NOT.PARALLELRUN)
C
C=======================================================================
C     CALCULATE MONTHLY & YEARLY OUTPUT FOR CTEM
C     

C     FIRST INITIALIZE SOME OUTPUT VARIABLES
C     INITIALIZATION IS DONE JUST BEFORE USE.

      IF (CTEM2) THEN
      IF(NCOUNT.EQ.NDAY) THEN
C
        DO 861 I=1,NLTEST
C
          DO NT=1,NMON
           IF (IDAY.EQ.MMDAY(NT)) THEN
            STEMMASS_MN(I)=0.0
            ROOTMASS_MN(I)=0.0
            LITRMASS_MN(I)=0.0
            SOILCMAS_MN(I)=0.0
            VGBIOMAS_MN(I)=0.0
            TOTCMASS_MN(I)=0.0
           ENDIF
          ENDDO
C
          IF(IDAY.EQ.MDAY(IMONTH+1))THEN
           LAIMAXG_MN(I)=0.0
           AVGMNNPP_MN(I)=0.0
           AVGMNGPP_MN(I)=0.0
           AVGMNNEP_MN(I)=0.0
           AVGMNNBP_MN(I)=0.0
           HETRORES_MN(I)=0.0
           AUTORES_MN(I)=0.0
           LITRES_MN(I)=0.0
           SOILRES_MN(I)=0.0
           AVGMNE_CO2_MN(I)=0.0
           AVGMNE_CO_MN(I) =0.0
           AVGMNE_CH4_MN(I) =0.0
           AVGMNE_NMHC_MN(I) =0.0
           AVGMNE_H2_MN(I) =0.0
           AVGMNE_NOX_MN(I) =0.0
           AVGMNE_N2O_MN(I) =0.0
           AVGMNE_PM25_MN(I) =0.0
           AVGMNE_TPM_MN(I) =0.0
           AVGMNE_TC_MN(I) =0.0
           AVGMNE_OC_MN(I) =0.0
           AVGMNE_BC_MN(I) =0.0
           AVGMN_PROBFIRE_MN(I) =0.0
           AVGMN_LUC_EMC_MN(I) =0.0
           AVGMN_LUCSOCIN_MN(I) =0.0
           AVGMN_LUCLTRIN_MN(I) =0.0
           AVGMN_BURNFRAC_MN(I) =0.0
          ENDIF 

C
          IF (IDAY .EQ. 365) THEN
           LAIMAXG_YR(I)=0.0
           STEMMASS_YR(I)=0.0
           ROOTMASS_YR(I)=0.0
           LITRMASS_YR(I)=0.0
           SOILCMAS_YR(I)=0.0 
           VGBIOMAS_YR(I)=0.0 
           TOTCMASS_YR(I)=0.0 
           AVGYRNPP_YR(I)=0.0
           AVGYRGPP_YR(I)=0.0
           AVGYRNEP_YR(I)=0.0 
           AVGYRNBP_YR(I)=0.0
           HETRORES_YR(I)=0.0
           AUTORES_YR(I)=0.0
           LITRES_YR(I)=0.0
           SOILRES_YR(I)=0.0
           AVGYRE_CO2_YR(I)=0.0
           AVGYRE_CO_YR(I)=0.0
           AVGYRE_CH4_YR(I)=0.0
           AVGYRE_NMHC_YR(I)=0.0
           AVGYRE_H2_YR(I)=0.0
           AVGYRE_NOX_YR(I)=0.0
           AVGYRE_N2O_YR(I)=0.0
           AVGYRE_PM25_YR(I)=0.0
           AVGYRE_TPM_YR(I)=0.0
           AVGYRE_TC_YR(I)=0.0
           AVGYRE_OC_YR(I)=0.0
           AVGYRE_BC_YR(I)=0.0
           AVGYR_PROBFIRE_YR(I)=0.0
           AVGYR_LUC_EMC_YR(I)=0.0
           AVGYR_LUCSOCIN_YR(I)=0.0
           AVGYR_LUCLTRIN_YR(I)=0.0
           AVGYR_BURNFRAC_YR(I)=0.0
          ENDIF

861     CONTINUE
C
C       ACCUMULATE MONTHLY OUTPUTS
C
        DO 862 I=1,NLTEST
         DO 863 M=1,NMTEST

           TEMP_VAR=0.0
           DO 864 J=1,ICC          
            TEMP_VAR=TEMP_VAR+AILCGROW(I,M,J)*FCANCMXROW(I,M,J)
864        CONTINUE
C      
           IF (TEMP_VAR.GT.LAIMAXG_MN_M(I,M)) THEN
             LAIMAXG_MN_M(I,M)=TEMP_VAR
           ENDIF 

           AVGMNNPP_MN_M(I,M)=AVGMNNPP_MN_M(I,M)+NPPROW(I,M)
           AVGMNGPP_MN_M(I,M)=AVGMNGPP_MN_M(I,M)+GPPROW(I,M) 
           AVGMNNEP_MN_M(I,M)=AVGMNNEP_MN_M(I,M)+NEPROW(I,M) 
           AVGMNNBP_MN_M(I,M)=AVGMNNBP_MN_M(I,M)+NBPROW(I,M) 
           
           HETRORES_MN_M(I,M)=HETRORES_MN_M(I,M)+HETRORESROW(I,M)
           AUTORES_MN_M(I,M) =AUTORES_MN_M(I,M) +AUTORESROW(I,M)
           LITRES_MN_M(I,M)  =LITRES_MN_M(I,M)  +LITRESROW(I,M)
           SOILRES_MN_M(I,M) =SOILRES_MN_M(I,M) +SOCRESROW(I,M)
           AVGMNE_CO2_MN_M(I,M)=AVGMNE_CO2_MN_M(I,M)+EMIT_CO2ROW(I,M)
           AVGMNE_CO_MN_M(I,M) =AVGMNE_CO_MN_M(I,M)+EMIT_COROW(I,M)
           AVGMNE_CH4_MN_M(I,M) =AVGMNE_CH4_MN_M(I,M)+EMIT_CH4ROW(I,M)
           AVGMNE_NMHC_MN_M(I,M)=AVGMNE_NMHC_MN_M(I,M)+EMIT_NMHCROW(I,M)
           AVGMNE_H2_MN_M(I,M) =AVGMNE_H2_MN_M(I,M)+EMIT_H2ROW(I,M)
           AVGMNE_NOX_MN_M(I,M) =AVGMNE_NOX_MN_M(I,M)+EMIT_NOXROW(I,M)
           AVGMNE_N2O_MN_M(I,M) =AVGMNE_N2O_MN_M(I,M)+EMIT_N2OROW(I,M)
           AVGMNE_PM25_MN_M(I,M)=AVGMNE_PM25_MN_M(I,M)+EMIT_PM25ROW(I,M)
           AVGMNE_TPM_MN_M(I,M) =AVGMNE_TPM_MN_M(I,M)+EMIT_TPMROW(I,M)
           AVGMNE_TC_MN_M(I,M) =AVGMNE_TC_MN_M(I,M)+EMIT_TCROW(I,M)
           AVGMNE_OC_MN_M(I,M) =AVGMNE_OC_MN_M(I,M)+EMIT_OCROW(I,M)
           AVGMNE_BC_MN_M(I,M) =AVGMNE_BC_MN_M(I,M)+EMIT_BCROW(I,M)
           AVGMN_PROBFIRE_MN_M(I,M) =AVGMN_PROBFIRE_MN_M(I,M)
     &                             +(PROBFIREROW(I,M) * (1./365.))  !FLAG
           AVGMN_LUC_EMC_MN_M(I,M) =AVGMN_LUC_EMC_MN_M(I,M)
     &                             +LUCEMCOMROW(I,M)
           AVGMN_LUCSOCIN_MN_M(I,M) =AVGMN_LUCSOCIN_MN_M(I,M)
     &                             +LUCSOCINROW(I,M)
           AVGMN_LUCLTRIN_MN_M(I,M) =AVGMN_LUCLTRIN_MN_M(I,M)
     &                             +LUCLTRINROW(I,M)
           AVGMN_BURNFRAC_MN_M(I,M) =AVGMN_BURNFRAC_MN_M(I,M)
     &                             +BURNFRACROW(I,M)

C
           DO 865 NT=1,NMON
C
             IF(IDAY.EQ.MMDAY(NT))THEN
                STEMMASS_MN_M(I,M)=0.0
                ROOTMASS_MN_M(I,M)=0.0
                LITRMASS_MN_M(I,M)=0.0
                SOILCMAS_MN_M(I,M)=0.0
                VGBIOMAS_MN_M(I,M)=0.0
C               BAREFRAC=1.0  !FLAG NECESSARY?
                DO 867 J=1,ICC
                  STEMMASS_MN_M(I,M)=STEMMASS_MN_M(I,M)+
     &                             STEMMASSROW(I,M,J)*FCANCMXROW(I,M,J)
                  ROOTMASS_MN_M(I,M)=ROOTMASS_MN_M(I,M)+
     &                             ROOTMASSROW(I,M,J)*FCANCMXROW(I,M,J)
                  LITRMASS_MN_M(I,M)=LITRMASS_MN_M(I,M)+
     &                             LITRMASSROW(I,M,J)*FCANCMXROW(I,M,J)
                  SOILCMAS_MN_M(I,M)=SOILCMAS_MN_M(I,M)+
     &                             SOILCMASROW(I,M,J)*FCANCMXROW(I,M,J)
                  VGBIOMAS_MN_M(I,M)=VGBIOMASROW(I,M)
C                 BAREFRAC=BAREFRAC-FCANCMXROW(I,M,J)  FLAG!
867             CONTINUE
C               LITRMASS_MN_M(I,M)=LITRMASS_MN_M(I,M)+
C     &                            LITRMASSROW(I,M,ICCP1)*BAREFRAC
C               SOILCMAS_MN_M(I,M)=SOILCMAS_MN_M(I,M)+
C     &                            SOILCMASROW(I,M,ICCP1)*BAREFRAC

                STEMMASS_MN(I)=STEMMASS_MN(I)+
     1                         STEMMASS_MN_M(I,M)*FAREROW(I,M)
                ROOTMASS_MN(I)=ROOTMASS_MN(I)+
     1                         ROOTMASS_MN_M(I,M)*FAREROW(I,M)
                LITRMASS_MN(I)=LITRMASS_MN(I)+
     1                         LITRMASS_MN_M(I,M)*FAREROW(I,M)
                SOILCMAS_MN(I)=SOILCMAS_MN(I)+
     1                         SOILCMAS_MN_M(I,M)*FAREROW(I,M)   
                VGBIOMAS_MN(I)=VGBIOMAS_MN(I)+
     1                         VGBIOMAS_MN_M(I,M)*FAREROW(I,M) 
                TOTCMASS_MN(I)=VGBIOMAS_MN(I)+LITRMASS_MN(I)+
     1                         SOILCMAS_MN(I)
             ENDIF ! MMDAY (MID-MONTH INSTANTANEOUS VALUE)
C
             IF(IDAY.EQ.MDAY(NT+1))THEN
               NDMONTH=(MDAY(NT+1)-MDAY(NT))*NDAY

               LAIMAXG_MN(I)=LAIMAXG_MN(I)+
     1                       LAIMAXG_MN_M(I,M)*FAREROW(I,M) 
               AVGMNNPP_MN(I)=AVGMNNPP_MN(I)+
     1                        AVGMNNPP_MN_M(I,M)*FAREROW(I,M)   
               AVGMNGPP_MN(I)=AVGMNGPP_MN(I)+
     1                        AVGMNGPP_MN_M(I,M)*FAREROW(I,M)    
               AVGMNNEP_MN(I)=AVGMNNEP_MN(I)+
     1                        AVGMNNEP_MN_M(I,M)*FAREROW(I,M)   
               AVGMNNBP_MN(I)=AVGMNNBP_MN(I)+
     1                        AVGMNNBP_MN_M(I,M)*FAREROW(I,M)
C
               HETRORES_MN(I)=HETRORES_MN(I)+
     1                        HETRORES_MN_M(I,M)*FAREROW(I,M)
               AUTORES_MN(I) =AUTORES_MN(I) +
     1                        AUTORES_MN_M(I,M) *FAREROW(I,M)
               LITRES_MN(I)  =LITRES_MN(I)  +
     1                        LITRES_MN_M(I,M)  *FAREROW(I,M)
               SOILRES_MN(I) =SOILRES_MN(I) +
     1                        SOILRES_MN_M(I,M) *FAREROW(I,M)
C
               AVGMNE_CO2_MN(I)=AVGMNE_CO2_MN(I)+AVGMNE_CO2_MN_M(I,M)
     &                          *FAREROW(I,M)   
               AVGMNE_CO_MN(I) =AVGMNE_CO_MN(I)+AVGMNE_CO_MN_M(I,M)
     &                          *FAREROW(I,M)   
               AVGMNE_CH4_MN(I) =AVGMNE_CH4_MN(I)+AVGMNE_CH4_MN_M(I,M)
     &                          *FAREROW(I,M)   
               AVGMNE_NMHC_MN(I) =AVGMNE_NMHC_MN(I)+
     1                            AVGMNE_NMHC_MN_M(I,M)*FAREROW(I,M)   
               AVGMNE_H2_MN(I) =AVGMNE_H2_MN(I)+AVGMNE_H2_MN_M(I,M)
     &                          *FAREROW(I,M)   
               AVGMNE_NOX_MN(I) =AVGMNE_NOX_MN(I)+AVGMNE_NOX_MN_M(I,M)
     &                          *FAREROW(I,M)   
               AVGMNE_N2O_MN(I) =AVGMNE_N2O_MN(I)+AVGMNE_N2O_MN_M(I,M)
     &                          *FAREROW(I,M)   
               AVGMNE_PM25_MN(I) =AVGMNE_PM25_MN(I)+
     1                            AVGMNE_PM25_MN_M(I,M)*FAREROW(I,M)   
               AVGMNE_TPM_MN(I) =AVGMNE_TPM_MN(I)+AVGMNE_TPM_MN_M(I,M)
     &                          *FAREROW(I,M)   
               AVGMNE_TC_MN(I) =AVGMNE_TC_MN(I)+AVGMNE_TC_MN_M(I,M)
     &                          *FAREROW(I,M)   
               AVGMNE_OC_MN(I) =AVGMNE_OC_MN(I)+AVGMNE_OC_MN_M(I,M)
     &                          *FAREROW(I,M)   
               AVGMNE_BC_MN(I) =AVGMNE_BC_MN(I)+AVGMNE_BC_MN_M(I,M)
     &                          *FAREROW(I,M)   
               AVGMN_PROBFIRE_MN(I)=AVGMN_PROBFIRE_MN(I)
     &                          +AVGMN_PROBFIRE_MN_M(I,M)*FAREROW(I,M)   
               AVGMN_LUC_EMC_MN(I) =AVGMN_LUC_EMC_MN(I)
     &                          +AVGMN_LUC_EMC_MN_M(I,M)*FAREROW(I,M)   
               AVGMN_LUCSOCIN_MN(I) =AVGMN_LUCSOCIN_MN(I)
     &                          +AVGMN_LUCSOCIN_MN_M(I,M)*FAREROW(I,M)   
               AVGMN_LUCLTRIN_MN(I) =AVGMN_LUCLTRIN_MN(I)
     &                          +AVGMN_LUCLTRIN_MN_M(I,M)*FAREROW(I,M)   
               AVGMN_BURNFRAC_MN(I)=AVGMN_BURNFRAC_MN(I)
     &                          +AVGMN_BURNFRAC_MN_M(I,M)
C
C              INITIALIZE MONTHLY ACCUMULATED ARRAYS
C              FOR THE NEXT ROUND
 
               AVGMNNPP_MN_M(I,M)=0.0
               AVGMNGPP_MN_M(I,M)=0.0
               AVGMNNEP_MN_M(I,M)=0.0
               AVGMNNBP_MN_M(I,M)=0.0
               HETRORES_MN_M(I,M)=0.0
               AUTORES_MN_M(I,M)=0.0
               LITRES_MN_M(I,M)=0.0
               SOILRES_MN_M(I,M)=0.0
               AVGMNE_CO2_MN_M(I,M)=0.0
               AVGMNE_CO_MN_M(I,M) =0.0
               AVGMNE_CH4_MN_M(I,M) =0.0
               AVGMNE_NMHC_MN_M(I,M) =0.0
               AVGMNE_H2_MN_M(I,M) =0.0
               AVGMNE_NOX_MN_M(I,M) =0.0
               AVGMNE_N2O_MN_M(I,M) =0.0
               AVGMNE_PM25_MN_M(I,M) =0.0
               AVGMNE_TPM_MN_M(I,M) =0.0
               AVGMNE_TC_MN_M(I,M) =0.0
               AVGMNE_OC_MN_M(I,M) =0.0
               AVGMNE_BC_MN_M(I,M) =0.0
               AVGMN_PROBFIRE_MN_M(I,M) =0.0
               AVGMN_LUC_EMC_MN_M(I,M) =0.0
               AVGMN_LUCSOCIN_MN_M(I,M) =0.0
               AVGMN_LUCLTRIN_MN_M(I,M) =0.0
               AVGMN_BURNFRAC_MN_M(I,M) =0.0

             ENDIF ! MDAY (MAX LAI AND ACCUMULATED NPP/GPP/NEP OVER THE WHOLE MONTH)
C                  ! IF(IDAY.EQ.MDAY(NT+1))
865        CONTINUE ! NMON
863      CONTINUE ! M
C
         DO NT=1,NMON
           IF(IDAY.EQ.MDAY(NT+1))THEN
             IMONTH=NT

C            WRITE TO FILE .CT01M_G
             WRITE(84,8104)IMONTH,IYEAR,LAIMAXG_MN(I),VGBIOMAS_MN(I),
     1               LITRMASS_MN(I),SOILCMAS_MN(I),AVGMNNPP_MN(I),
     2               AVGMNGPP_MN(I),AVGMNNEP_MN(I),
     a               AVGMNNBP_MN(I),HETRORES_MN(I),AUTORES_MN(I),
     b               LITRES_MN(I),SOILRES_MN(I)

C            WRITE TO FILE .CT06M_G
             WRITE(85,8109)IMONTH,IYEAR,AVGMNE_CO2_MN(I),
     3               AVGMNE_CO_MN(I),AVGMNE_CH4_MN(I),AVGMNE_NMHC_MN(I),
     4               AVGMNE_H2_MN(I),AVGMNE_NOX_MN(I),AVGMNE_N2O_MN(I),
     5               AVGMNE_PM25_MN(I),AVGMNE_TPM_MN(I),AVGMNE_TC_MN(I),
     6               AVGMNE_OC_MN(I),AVGMNE_BC_MN(I),
     7               AVGMN_PROBFIRE_MN(I),AVGMN_LUC_EMC_MN(I),
     8               AVGMN_LUCLTRIN_MN(I),AVGMN_LUCSOCIN_MN(I),
     8               AVGMN_BURNFRAC_MN(I)

C           AFTER WRITING SET LAIMAXG_YR_M TO ZERO
            DO 963 M=1,NMTEST
             LAIMAXG_MN_M(I,M)=0.0
963         CONTINUE
C
C           ADD FRACTION OF EACH PFT AND BARE \\
C
            IF (COMPETE .OR. LNDUSEON) THEN
              SUMFARE=0.0
              IF (MOSAIC) THEN
               DO M=1,NMOS
                 SUMFARE=SUMFARE+FAREROW(I,M)
               ENDDO
               WRITE(88,8106)IMONTH,IYEAR,(FAREROW(I,M)*100.,M=1,NMOS),
     1                      SUMFARE
              ELSE !COMPOSITE
               DO J=1,ICC  !M = 1
                 SUMFARE=SUMFARE+FCANCMXROW(I,1,J)
               ENDDO
               WRITE(88,8106)IMONTH,IYEAR,(FCANCMXROW(I,1,J)*100.,
     1                      J=1,ICC),(1.0-SUMFARE)*100.,SUMFARE
              ENDIF !MOSAIC/COMPOSITE
            ENDIF !COMPETE/LNDUSEON
C
           ENDIF ! IF(IDAY.EQ.MDAY(NT+1))
         ENDDO ! NT=1,NMON
C
862     CONTINUE ! I
C
C       ACCUMULATE YEARLY OUTPUTS
C
        DO 882 I=1,NLTEST
          DO 883 M=1,NMTEST

            TEMP_VAR=0.0
            DO 884 J=1,ICC          
             TEMP_VAR=TEMP_VAR+AILCGROW(I,M,J)*FCANCMXROW(I,M,J)
884         CONTINUE
C           
            IF (TEMP_VAR.GT.LAIMAXG_YR_M(I,M)) THEN
              LAIMAXG_YR_M(I,M)=TEMP_VAR
            ENDIF 

            AVGYRNPP_YR_M(I,M)=AVGYRNPP_YR_M(I,M)+NPPROW(I,M)
            AVGYRGPP_YR_M(I,M)=AVGYRGPP_YR_M(I,M)+GPPROW(I,M) 
            AVGYRNEP_YR_M(I,M)=AVGYRNEP_YR_M(I,M)+NEPROW(I,M) 
            AVGYRNBP_YR_M(I,M)=AVGYRNBP_YR_M(I,M)+NBPROW(I,M) 

            HETRORES_YR_M(I,M)=HETRORES_YR_M(I,M)+HETRORESROW(I,M) 
            AUTORES_YR_M(I,M) =AUTORES_YR_M(I,M) +AUTORESROW(I,M) 
            LITRES_YR_M(I,M)  =LITRES_YR_M(I,M)  +LITRESROW(I,M) 
            SOILRES_YR_M(I,M) =SOILRES_YR_M(I,M) +SOCRESROW(I,M) 
            AVGYRE_CO2_YR_M(I,M)=AVGYRE_CO2_YR_M(I,M)+EMIT_CO2ROW(I,M)
            AVGYRE_CO_YR_M(I,M)=AVGYRE_CO_YR_M(I,M)+EMIT_COROW(I,M)
            AVGYRE_CH4_YR_M(I,M)=AVGYRE_CH4_YR_M(I,M)+EMIT_CH4ROW(I,M)
            AVGYRE_NMHC_YR_M(I,M)=AVGYRE_NMHC_YR_M(I,M)+
     1                            EMIT_NMHCROW(I,M)
            AVGYRE_H2_YR_M(I,M)=AVGYRE_H2_YR_M(I,M)+EMIT_H2ROW(I,M)
            AVGYRE_NOX_YR_M(I,M)=AVGYRE_NOX_YR_M(I,M)+EMIT_NOXROW(I,M)
            AVGYRE_N2O_YR_M(I,M)=AVGYRE_N2O_YR_M(I,M)+EMIT_N2OROW(I,M)
            AVGYRE_PM25_YR_M(I,M)=AVGYRE_PM25_YR_M(I,M)+
     1                            EMIT_PM25ROW(I,M)
            AVGYRE_TPM_YR_M(I,M)=AVGYRE_TPM_YR_M(I,M)+EMIT_TPMROW(I,M)
            AVGYRE_TC_YR_M(I,M)=AVGYRE_TC_YR_M(I,M)+EMIT_TCROW(I,M)
            AVGYRE_OC_YR_M(I,M)=AVGYRE_OC_YR_M(I,M)+EMIT_OCROW(I,M)
            AVGYRE_BC_YR_M(I,M)=AVGYRE_BC_YR_M(I,M)+EMIT_BCROW(I,M)
            AVGYR_PROBFIRE_YR_M(I,M)=AVGYR_PROBFIRE_YR_M(I,M)
     &                         +(PROBFIREROW(I,M) * (1./365.))  !FLAG
            AVGYR_LUC_EMC_YR_M(I,M)=AVGYR_LUC_EMC_YR_M(I,M)
     &                         +LUCEMCOMROW(I,M)
            AVGYR_LUCSOCIN_YR_M(I,M)=AVGYR_LUCSOCIN_YR_M(I,M)
     &                         +LUCSOCINROW(I,M)
            AVGYR_LUCLTRIN_YR_M(I,M)=AVGYR_LUCLTRIN_YR_M(I,M)
     &                         +LUCLTRINROW(I,M)
            AVGYR_BURNFRAC_YR_M(I,M)=AVGYR_BURNFRAC_YR_M(I,M)
     &                         +BURNFRACROW(I,M)
C
            IF (IDAY.EQ.365) THEN
C             LAIMAXG_YR_M(I,M)=0.0
              STEMMASS_YR_M(I,M)=0.0
              ROOTMASS_YR_M(I,M)=0.0
              LITRMASS_YR_M(I,M)=0.0
              SOILCMAS_YR_M(I,M)=0.0
              VGBIOMAS_YR_M(I,M)=0.0
C
C             FLAG THIS IS NOT IN YIRAN'S CODE...
              BAREFRAC=1.0
              DO 885 J=1,ICC
                STEMMASS_YR_M(I,M)=STEMMASS_YR_M(I,M)+
     &                             STEMMASSROW(I,M,J)*FCANCMXROW(I,M,J)
                ROOTMASS_YR_M(I,M)=ROOTMASS_YR_M(I,M)+
     &                             ROOTMASSROW(I,M,J)*FCANCMXROW(I,M,J)
                LITRMASS_YR_M(I,M)=LITRMASS_YR_M(I,M)+
     &                             LITRMASSROW(I,M,J)*FCANCMXROW(I,M,J)
                SOILCMAS_YR_M(I,M)=SOILCMAS_YR_M(I,M)+
     &                             SOILCMASROW(I,M,J)*FCANCMXROW(I,M,J)
                BAREFRAC=BAREFRAC-FCANCMXROW(I,M,J)
885           CONTINUE
              SOILCMAS_YR_M(I,M)=SOILCMAS_YR_M(I,M)+
     &                            SOILCMASROW(I,M,ICCP1)*BAREFRAC
              LITRMASS_YR_M(I,M)=LITRMASS_YR_M(I,M)+
     &                            LITRMASSROW(I,M,ICCP1)*BAREFRAC
              VGBIOMAS_YR_M(I,M)=VGBIOMASROW(I,M)
C
              LAIMAXG_YR(I)=LAIMAXG_YR(I)+LAIMAXG_YR_M(I,M)*FAREROW(I,M)
              STEMMASS_YR(I)=STEMMASS_YR(I)+
     1                       STEMMASS_YR_M(I,M)*FAREROW(I,M)
              ROOTMASS_YR(I)=ROOTMASS_YR(I)+
     1                       ROOTMASS_YR_M(I,M)*FAREROW(I,M)
              LITRMASS_YR(I)=LITRMASS_YR(I)+
     1                       LITRMASS_YR_M(I,M)*FAREROW(I,M)
              SOILCMAS_YR(I)=SOILCMAS_YR(I)+
     1                       SOILCMAS_YR_M(I,M)*FAREROW(I,M)   
              VGBIOMAS_YR(I)=VGBIOMAS_YR(I)+
     1                       VGBIOMAS_YR_M(I,M)*FAREROW(I,M) 
              TOTCMASS_YR(I)=VGBIOMAS_YR(I)+LITRMASS_YR(I)+
     1                       SOILCMAS_YR(I)
              AVGYRNPP_YR(I)=AVGYRNPP_YR(I)+
     1                       AVGYRNPP_YR_M(I,M)*FAREROW(I,M)   
              AVGYRGPP_YR(I)=AVGYRGPP_YR(I)+
     1                       AVGYRGPP_YR_M(I,M)*FAREROW(I,M)    
              AVGYRNEP_YR(I)=AVGYRNEP_YR(I)+
     1                       AVGYRNEP_YR_M(I,M)*FAREROW(I,M)   
              AVGYRNBP_YR(I)=AVGYRNBP_YR(I)+
     1                       AVGYRNBP_YR_M(I,M)*FAREROW(I,M)
              HETRORES_YR(I)=HETRORES_YR(I)+
     1                       HETRORES_YR_M(I,M)*FAREROW(I,M) 
              AUTORES_YR(I) =AUTORES_YR(I) +
     1                       AUTORES_YR_M(I,M)*FAREROW(I,M)
              LITRES_YR(I)  =LITRES_YR(I)  +
     1                       LITRES_YR_M(I,M)*FAREROW(I,M)
              SOILRES_YR(I) =SOILRES_YR(I) +
     1                       SOILRES_YR_M(I,M)*FAREROW(I,M) 
              AVGYRE_CO2_YR(I)=AVGYRE_CO2_YR(I)+AVGYRE_CO2_YR_M(I,M)
     &                         *FAREROW(I,M)   
              AVGYRE_CO_YR(I)=AVGYRE_CO_YR(I)+AVGYRE_CO_YR_M(I,M)
     &                         *FAREROW(I,M)   
              AVGYRE_CH4_YR(I)=AVGYRE_CH4_YR(I)+AVGYRE_CH4_YR_M(I,M)
     &                         *FAREROW(I,M)   
              AVGYRE_NMHC_YR(I)=AVGYRE_NMHC_YR(I)+AVGYRE_NMHC_YR_M(I,M)
     &                         *FAREROW(I,M)   
              AVGYRE_H2_YR(I)=AVGYRE_H2_YR(I)+AVGYRE_H2_YR_M(I,M)
     &                         *FAREROW(I,M)   
              AVGYRE_NOX_YR(I)=AVGYRE_NOX_YR(I)+AVGYRE_NOX_YR_M(I,M)
     &                         *FAREROW(I,M)   
              AVGYRE_N2O_YR(I)=AVGYRE_N2O_YR(I)+AVGYRE_N2O_YR_M(I,M)
     &                         *FAREROW(I,M)   
              AVGYRE_PM25_YR(I)=AVGYRE_PM25_YR(I)+AVGYRE_PM25_YR_M(I,M)
     &                         *FAREROW(I,M)   
              AVGYRE_TPM_YR(I)=AVGYRE_TPM_YR(I)+AVGYRE_TPM_YR_M(I,M)
     &                         *FAREROW(I,M)   
              AVGYRE_TC_YR(I)=AVGYRE_TC_YR(I)+AVGYRE_TC_YR_M(I,M)
     &                         *FAREROW(I,M)   
              AVGYRE_OC_YR(I)=AVGYRE_OC_YR(I)+AVGYRE_OC_YR_M(I,M)
     &                         *FAREROW(I,M)   
              AVGYRE_BC_YR(I)=AVGYRE_BC_YR(I)+AVGYRE_BC_YR_M(I,M)
     &                         *FAREROW(I,M)   
              AVGYR_PROBFIRE_YR(I)=AVGYR_PROBFIRE_YR(I)
     &                         +AVGYR_PROBFIRE_YR_M(I,M)*FAREROW(I,M)   
              AVGYR_LUC_EMC_YR(I)=AVGYR_LUC_EMC_YR(I)
     &                         +AVGYR_LUC_EMC_YR_M(I,M)*FAREROW(I,M)   
              AVGYR_LUCSOCIN_YR(I)=AVGYR_LUCSOCIN_YR(I)
     &                         +AVGYR_LUCSOCIN_YR_M(I,M)*FAREROW(I,M)   
              AVGYR_LUCLTRIN_YR(I)=AVGYR_LUCLTRIN_YR(I)
     &                         +AVGYR_LUCLTRIN_YR_M(I,M)*FAREROW(I,M)   
              AVGYR_BURNFRAC_YR(I)=AVGYR_BURNFRAC_YR(I)
     &                         +AVGYR_BURNFRAC_YR_M(I,M)
C
C             INITIALIZE YEARLY ACCUMULATED ARRAYS
C             FOR THE NEXT ROUND

              AVGYRNPP_YR_M(I,M)=0.0
              AVGYRGPP_YR_M(I,M)=0.0
              AVGYRNEP_YR_M(I,M)=0.0
              AVGYRNBP_YR_M(I,M)=0.0
              HETRORES_YR_M(I,M)=0.0
              AUTORES_YR_M(I,M)=0.0
              LITRES_YR_M(I,M)=0.0
              SOILRES_YR_M(I,M)=0.0
              AVGYRE_CO2_YR_M(I,M)=0.0
              AVGYRE_CO_YR_M(I,M)=0.0
              AVGYRE_CH4_YR_M(I,M)=0.0
              AVGYRE_NMHC_YR_M(I,M)=0.0
              AVGYRE_H2_YR_M(I,M)=0.0
              AVGYRE_NOX_YR_M(I,M)=0.0
              AVGYRE_N2O_YR_M(I,M)=0.0
              AVGYRE_PM25_YR_M(I,M)=0.0
              AVGYRE_TPM_YR_M(I,M)=0.0
              AVGYRE_TC_YR_M(I,M)=0.0
              AVGYRE_OC_YR_M(I,M)=0.0
              AVGYRE_BC_YR_M(I,M)=0.0
              AVGYR_PROBFIRE_YR_M(I,M)=0.0
              AVGYR_LUC_EMC_YR_M(I,M)=0.0
              AVGYR_LUCSOCIN_YR_M(I,M)=0.0
              AVGYR_LUCLTRIN_YR_M(I,M)=0.0
              AVGYR_BURNFRAC_YR_M(I,M)=0.0
C
            ENDIF ! IDAY 365
C
883       CONTINUE ! M
C
          IF (IDAY.EQ.365) THEN
C            WRITE TO FILE .CT01Y_G
             WRITE(86,8105)IYEAR,LAIMAXG_YR(I),VGBIOMAS_YR(I),
     1            STEMMASS_YR(I),ROOTMASS_YR(I),LITRMASS_YR(I),
     2            SOILCMAS_YR(I),TOTCMASS_YR(I),AVGYRNPP_YR(I),
     3            AVGYRGPP_YR(I),AVGYRNEP_YR(I),
     4            AVGYRNBP_YR(I),HETRORES_YR(I),AUTORES_YR(I),
     5            LITRES_YR(I),SOILRES_YR(I)
C            WRITE TO FILE .CT06Y_G
             WRITE(87,8108)IYEAR,AVGYRE_CO2_YR(I),
     4            AVGYRE_CO_YR(I),AVGYRE_CH4_YR(I),AVGYRE_NMHC_YR(I),
     5            AVGYRE_H2_YR(I),AVGYRE_NOX_YR(I),AVGYRE_N2O_YR(I),
     6            AVGYRE_PM25_YR(I),AVGYRE_TPM_YR(I),AVGYRE_TC_YR(I),
     7            AVGYRE_OC_YR(I),AVGYRE_BC_YR(I),AVGYR_PROBFIRE_YR(I),
     8            AVGYR_LUC_EMC_YR(I),AVGYR_LUCLTRIN_YR(I),
     9            AVGYR_LUCSOCIN_YR(I),AVGYR_BURNFRAC_YR(I)

C            AFTER WRITING SET LAIMAXG_YR_M TO ZERO
             DO 985 M=1,NMTEST
               LAIMAXG_YR_M(I,M)=0.0
985          CONTINUE

C           WRITE FRACTION OF EACH PFT AND BARE 
C
             IF (COMPETE .OR. LNDUSEON) THEN
                 SUMFARE=0.0
               IF (MOSAIC) THEN
                 DO M=1,NMOS
                    SUMFARE=SUMFARE+FAREROW(I,M)
                 ENDDO
                 WRITE(89,8107)IYEAR,(FAREROW(I,M)*100.,M=1,NMOS),
     &                         SUMFARE
               ELSE  !COMPOSITE
                 DO J=1,ICC   !M = 1
                    SUMFARE=SUMFARE+FCANCMXROW(I,1,J)
                 ENDDO
                WRITE(89,8107)IYEAR,(FCANCMXROW(I,1,J)*100.,
     1                       J=1,ICC),(1.0-SUMFARE)*100.,SUMFARE
               ENDIF
             ENDIF !COMPETE/LNDUSEON

            ENDIF ! IF IDAY=365
C
882     CONTINUE ! I
C
      ENDIF ! IF(NCOUNT.EQ.NDAY)
      ENDIF ! IF(CTEM2) 
C
8104  FORMAT(1X,I4,I5,12F10.3,2(A5,I2))
8105  FORMAT(1X,I5,15F10.3,2(A5,I2))
8106  FORMAT(1X,I4,I5,11F10.5,2(A5,I2))
8107  FORMAT(1X,I5,11F10.5,2(A5,I2))
8108  FORMAT(1X,I5,17F10.3,2(A5,I2))
8109  FORMAT(1X,I4,I5,17F10.3,2(A5,I2))
C
C     OPEN AND WRITE TO THE RESTART FILES
C
      IF (RSFILE) THEN
       IF (IDAY.EQ.365.AND.NCOUNT.EQ.NDAY) THEN
C
C       WRITE .INI_RS FOR CLASS RESTART DATA
C
        OPEN(UNIT=100,FILE=ARGBUFF(1:STRLEN(ARGBUFF))//'.INI_RS')
C
        WRITE(100,5010) TITLE1,TITLE2,TITLE3,TITLE4,TITLE5,TITLE6
        WRITE(100,5010) NAME1,NAME2,NAME3,NAME4,NAME5,NAME6
        WRITE(100,5010) PLACE1,PLACE2,PLACE3,PLACE4,PLACE5,PLACE6
C
        WRITE(100,5020)DEGLAT,DEGLON,ZRFMGRD(1),ZRFHGRD(1),ZBLDGRD(1),
     1                 GCGRD(1),NLTEST,NMTEST
        DO I=1,NLTEST
          DO M=1,NMTEST

C         IF START_BARE (SO EITHER COMPETE OR LNDUSEON), THEN WE NEED TO CREATE
C         THE FCANROW FOR THE RS FILE.
          IF (START_BARE .AND. MOSAIC) THEN
           IF (M .LE. 2) THEN                     !NDL
            FCANROW(I,M,1)=1.0
           ELSEIF (M .GE. 3 .AND. M .LE. 5) THEN  !BDL
            FCANROW(I,M,2)=1.0
           ELSEIF (M .EQ. 6 .OR. M .EQ. 7) THEN  !CROP
            FCANROW(I,M,3)=1.0
           ELSEIF (M .EQ. 8 .OR. M .EQ. 9) THEN  !GRASSES
            FCANROW(I,M,4)=1.0
           ELSE                                  !BARE 
            FCANROW(I,M,5)=1.0
           ENDIF
          ENDIF !START_BARE/MOSAIC
             
            WRITE(100,5040) (FCANROW(I,M,J),J=1,ICAN+1),(PAMXROW(I,M,J),
     1                      J=1,ICAN)
            WRITE(100,5040) (LNZ0ROW(I,M,J),J=1,ICAN+1),(PAMNROW(I,M,J),
     1                      J=1,ICAN)
            WRITE(100,5040) (ALVCROW(I,M,J),J=1,ICAN+1),(CMASROW(I,M,J),
     1                      J=1,ICAN)
            WRITE(100,5040) (ALICROW(I,M,J),J=1,ICAN+1),(ROOTROW(I,M,J),
     1                      J=1,ICAN)
            WRITE(100,5030) (RSMNROW(I,M,J),J=1,ICAN),
     1                      (QA50ROW(I,M,J),J=1,ICAN)
            WRITE(100,5030) (VPDAROW(I,M,J),J=1,ICAN),
     1                      (VPDBROW(I,M,J),J=1,ICAN)
            WRITE(100,5030) (PSGAROW(I,M,J),J=1,ICAN),
     1                      (PSGBROW(I,M,J),J=1,ICAN)
            WRITE(100,5040) DRNROW(I,M),SDEPROW(I,M),FAREROW(I,M)
            WRITE(100,5090) XSLPROW(I,M),GRKFROW(I,M),WFSFROW(I,M),
     1                      WFCIROW(I,M),MIDROW(I,M)
            WRITE(100,5080) (SANDROW(I,M,J),J=1,3)
            WRITE(100,5080) (CLAYROW(I,M,J),J=1,3)
            WRITE(100,5080) (ORGMROW(I,M,J),J=1,3)
C           Temperatures are in degree C
            IF (TCANROW(I,M).NE.0.0) TCANRS(I,M)=TCANROW(I,M)-273.16
            IF (TSNOROW(I,M).NE.0.0) TSNORS(I,M)=TSNOROW(I,M)-273.16
            IF (TPNDROW(I,M).NE.0.0) TPNDRS(I,M)=TPNDROW(I,M)-273.16
            WRITE(100,5050) (TBARROW(I,M,J)-273.16,J=1,3),TCANRS(I,M),
     2                      TSNORS(I,M),TPNDRS(I,M)
            WRITE(100,5060) (THLQROW(I,M,J),J=1,3),(THICROW(I,M,J),
     1                      J=1,3),ZPNDROW(I,M)
C
            WRITE(100,5070) RCANROW(I,M),SCANROW(I,M),SNOROW(I,M),
     1                      ALBSROW(I,M),RHOSROW(I,M),GROROW(I,M)
C           WRITE(100,5070) 0.0, 0.0, 0.0, 0.0, 0.0, 0.0
          ENDDO
        ENDDO
C
        DO J=1,IGND                     
          WRITE(100,5002) DELZ(J),ZBOT(J)  
        ENDDO                             
C
        WRITE(100,5200) JHHSTD,JHHENDD,JDSTD,JDENDD
        WRITE(100,5200) JHHSTY,JHHENDY,JDSTY,JDENDY
        CLOSE(100)
C
C       WRITE .CTM_RS FOR CTEM RESTART DATA
C
        IF (CTEM1) THEN
          OPEN(UNIT=101,FILE=ARGBUFF(1:STRLEN(ARGBUFF))//'.CTM_RS')
C
          WRITE(101,7010) TITLEC1
          WRITE(101,7010) TITLEC2
          WRITE(101,7010) TITLEC3

C         IF LANDUSEON OR COMPETITION, THEN WE NEED TO RECREATE THE 
C         DVDFCANROW SO DO SO NOW
          IF (LNDUSEON .OR. COMPETE) THEN 
           ICOUNTROW=0
           DO J = 1, ICAN
            DO I=1,NLTEST
             DO M=1,NMTEST 
               K1C = (J-1)*L2MAX + 1
               K2C = K1C + (L2MAX - 1)
C
                DO N = K1C, K2C
                 IF(MODELPFT(N).EQ.1)THEN
                  ICOUNTROW(I,M) = ICOUNTROW(I,M) + 1
                  DVDFCANROW(I,M,ICOUNTROW(I,M))=
     1                 FCANCMXROW(I,M,ICOUNTROW(I,M))/FCANROW(I,M,J)
                 ENDIF !MODELPFT
                ENDDO !N
             ENDDO !M
            ENDDO !I 
           ENDDO !J
          ENDIF !LNUSE/COMPETE
C
          DO I=1,NLTEST
            DO M=1,NMTEST
              WRITE(101,7011) (AILCMINROW(I,M,J),J=1,ICC)
              WRITE(101,7011) (AILCMAXROW(I,M,J),J=1,ICC)
              WRITE(101,7011) (DVDFCANROW(I,M,J),J=1,ICC)
              WRITE(*,*) (DVDFCANROW(I,M,J),J=1,ICC)
C
              WRITE(101,7011) (GLEAFMASROW(I,M,J),J=1,ICC)
              WRITE(101,7011) (BLEAFMASROW(I,M,J),J=1,ICC)
              WRITE(101,7011) (STEMMASSROW(I,M,J),J=1,ICC)
              WRITE(101,7011) (ROOTMASSROW(I,M,J),J=1,ICC)
              WRITE(101,7013) (LITRMASSROW(I,M,J),J=1,ICCP1)
              WRITE(101,7013) (SOILCMASROW(I,M,J),J=1,ICCP1)
              WRITE(101,7012) (LFSTATUSROW(I,M,J),J=1,ICC)
              WRITE(101,7012) (PANDAYSROW(I,M,J),J=1,ICC)
            ENDDO
C
            WRITE(101,"(6F8.3)") (MLIGHTNGGRD(I,J),J=1,6)  !MEAN MONTHLY LIGHTNING FREQUENCY
            WRITE(101,"(6F8.3)") (MLIGHTNGGRD(I,J),J=7,12) !FLASHES/KM2.YEAR
            WRITE(101,"(F8.2)") EXTNPROBGRD(I)
            WRITE(101,"(F8.2)") PRBFRHUCGRD(I)
            WRITE(101,"(I4)") STDALNGRD(I)
          ENDDO
C
          CLOSE(101)
        ENDIF ! CTEM1
C
       ENDIF ! IF IDAY=365
      ENDIF ! IF GENERATE RESTART FILES
C
7011  FORMAT(9F8.2)
7012  FORMAT(9I8)
7013  FORMAT(10F8.2)
C
C      CHECK IF THE MODEL IS DONE RUNNING.
       IF (IDAY.EQ.365.AND.NCOUNT.EQ.NDAY) THEN

          IF (CYCLEMET .AND. CLIMIYEAR .GE. METCYCENDYR) THEN

C         THE 999 LABEL BELOW IS HIT WHEN AN INPUT FILE REACHES ITS END.       
999       CONTINUE

            LOPCOUNT = LOPCOUNT+1           

             IF(LOPCOUNT.LE.CTEMLOOP)THEN

              REWIND(51)   ! REWIND MET FILE
              MET_REWOUND = .TRUE.
              IYEAR=-9999

               IF(POPDON) THEN
                 REWIND(91) !REWIND POPD FILE
               ENDIF
               IF(CO2ON) THEN
                 REWIND(99) !REWIND CO2 FILE
               ENDIF

             ELSE

              RUN_MODEL = .FALSE.

             ENDIF
          ENDIF !IF CYCLEMET AND IYEAR > METCYCENDYR
       ENDIF !LAST DAY OF YEAR CHECK

C===================== CTEM =====================================/
C
        NCOUNT=NCOUNT+1
        IF(NCOUNT.GT.NDAY) THEN
            NCOUNT=1
        ENDIF

      ENDDO !MAIN MODEL LOOP

C     MODEL RUN HAS COMPLETED SO NOW CLOSE OUTPUT FILES AND EXIT
C==================================================================
C
C     FLAG! I CAN FIND NO USE OF THIS ISUM VAR. JM DEC 11 2012

C      DO 825 J=1,6
C          ISUM(J)=0
C825   CONTINUE
C
C      DO 900 I=1,50
C        DO 810 J=1,6
C          ISUM(J)=ISUM(J)+ITCTGAT(1,J,I)
C810     CONTINUE
C900   CONTINUE
C
C===================== CTEM =====================================\
C
C      CHECKING THE TIME SPENT FOR RUNNING MODEL
C
C      CALL IDATE(TODAY) 
C      CALL ITIME(NOW)
C      WRITE(0,1001) TODAY(2), TODAY(1), 2000+TODAY(3), NOW
C 1001 FORMAT( 'END DATE: ', I2.2, '/', I2.2, '/', I4.4, 
C     &      '; END TIME: ', I2.2, ':', I2.2, ':', I2.2 )
C
C     CLOSE THE OUTPUT FILES
C
      IF (.NOT. PARALLELRUN) THEN
C       FIRST ANY CLASS OUTPUT FILES
        CLOSE(61)
        CLOSE(62)
        CLOSE(63)
        CLOSE(64)
        CLOSE(65)
        CLOSE(66)
        CLOSE(67)
        CLOSE(68)
        CLOSE(69)
        CLOSE(611)
        CLOSE(621)
        CLOSE(631)
        CLOSE(641)
        CLOSE(651)
        CLOSE(661)
        CLOSE(671)
        CLOSE(681)
        CLOSE(691)
C       THEN CTEM ONES
        CLOSE(71)
        CLOSE(711)
        CLOSE(72)
        CLOSE(721)
        CLOSE(73)
        CLOSE(731)
        CLOSE(74)
        CLOSE(741)
        CLOSE(75)
        CLOSE(751)
        CLOSE(76)
C
        IF (COMPETE .OR. LNDUSEON) THEN
          CLOSE(761)
        ENDIF
C
        CLOSE(78)
        CLOSE(781)
      ENDIF ! IF (.NOT. PARALLELRUN) 
C
C     CLOSE CLASS OUTPUT FILES      
      CLOSE(81)
      CLOSE(82)
      CLOSE(83)
C
C     THEN CTEM ONES
      CLOSE(84)
      CLOSE(85)
      CLOSE(86)
      CLOSE(87)
C
      IF (COMPETE .OR. LNDUSEON) THEN
       CLOSE(88)
       CLOSE(89)
      ENDIF
C
C     CLOSE THE INPUT FILES TOO
      CLOSE(50)
      CLOSE(70)
      CLOSE(51)
      CLOSE(91)
      CLOSE(99)
           
      CALL EXIT
C
      END

      INTEGER FUNCTION STRLEN(ST)
      INTEGER       I
      CHARACTER     ST*(*)
      I = LEN(ST)
      DO WHILE (ST(I:I) .EQ. ' ')
        I = I - 1
      ENDDO
      STRLEN = I
      RETURN
      END
C
C ============================= CTEM =========================/
C
